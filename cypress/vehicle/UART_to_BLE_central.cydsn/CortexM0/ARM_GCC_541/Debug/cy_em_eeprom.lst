ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_em_eeprom.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_Em_EEPROM_Init,"ax",%progbits
  20              		.align	2
  21              		.global	Cy_Em_EEPROM_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	Cy_Em_EEPROM_Init, %function
  25              	Cy_Em_EEPROM_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\cy_em_eeprom.c"
   1:Generated_Source\PSoC4/cy_em_eeprom.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cy_em_eeprom.c **** * \file cy_em_eeprom.c
   3:Generated_Source\PSoC4/cy_em_eeprom.c **** * \version 2.0
   4:Generated_Source\PSoC4/cy_em_eeprom.c **** *
   5:Generated_Source\PSoC4/cy_em_eeprom.c **** * \brief
   6:Generated_Source\PSoC4/cy_em_eeprom.c **** *  This file provides source code of the API for the Emulated EEPROM library.
   7:Generated_Source\PSoC4/cy_em_eeprom.c **** *  The Emulated EEPROM API allows creating of an emulated EEPROM in flash that
   8:Generated_Source\PSoC4/cy_em_eeprom.c **** *  has the ability to do wear leveling and restore corrupted data from a
   9:Generated_Source\PSoC4/cy_em_eeprom.c **** *  redundant copy.
  10:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  11:Generated_Source\PSoC4/cy_em_eeprom.c **** ********************************************************************************
  12:Generated_Source\PSoC4/cy_em_eeprom.c **** * \copyright
  13:Generated_Source\PSoC4/cy_em_eeprom.c **** * Copyright 2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/cy_em_eeprom.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/cy_em_eeprom.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/cy_em_eeprom.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  19:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  20:Generated_Source\PSoC4/cy_em_eeprom.c **** #include "cytypes.h"
  21:Generated_Source\PSoC4/cy_em_eeprom.c **** #include <string.h>
  22:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  23:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6)
  24:Generated_Source\PSoC4/cy_em_eeprom.c ****     #include "em_eeprom/cy_em_eeprom.h"
  25:Generated_Source\PSoC4/cy_em_eeprom.c **** #else
  26:Generated_Source\PSoC4/cy_em_eeprom.c ****     #include "cy_em_eeprom.h"
  27:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6) */
  28:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  29:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  30:Generated_Source\PSoC4/cy_em_eeprom.c **** #if defined(__cplusplus)
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 2


  31:Generated_Source\PSoC4/cy_em_eeprom.c **** extern "C" {
  32:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif
  33:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  34:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  35:Generated_Source\PSoC4/cy_em_eeprom.c **** /***************************************
  36:Generated_Source\PSoC4/cy_em_eeprom.c **** * Private Function Prototypes
  37:Generated_Source\PSoC4/cy_em_eeprom.c **** ***************************************/
  38:Generated_Source\PSoC4/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context);
  39:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context);
  40:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len);
  41:Generated_Source\PSoC4/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
  42:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 * rowToWrPtr, uint32 * rowToRdPtr, cy_stc_eeprom_context_t * context);
  43:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config);
  44:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr, uint32 *rowData, cy_stc_eeprom_context_t *
  45:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr, uint32 ramBuffAddr, cy_stc_eeprom_context_
  46:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
  47:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 dstAddr, uint32 rowOffset, uint32 numBytes, cy_stc_eeprom_context_t * context);
  48:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, uint32 *endAddr, uint32 *offset, uint32 rowNum, uint3
  49:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  50:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  51:Generated_Source\PSoC4/cy_em_eeprom.c **** /**
  52:Generated_Source\PSoC4/cy_em_eeprom.c **** * \addtogroup group_em_eeprom_functions
  53:Generated_Source\PSoC4/cy_em_eeprom.c **** * \{
  54:Generated_Source\PSoC4/cy_em_eeprom.c **** */
  55:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  56:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
  57:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Init
  58:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
  59:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  60:Generated_Source\PSoC4/cy_em_eeprom.c **** * Initializes the Emulated EEPROM library.
  61:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  62:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param config
  63:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
  64:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  65:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
  66:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
  67:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  68:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
  69:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
  70:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  71:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t
  73:Generated_Source\PSoC4/cy_em_eeprom.c ****         Cy_Em_EEPROM_Init(cy_stc_eeprom_config_t* config, cy_stc_eeprom_context_t * context)
  74:Generated_Source\PSoC4/cy_em_eeprom.c **** {
  28              		.loc 1 74 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 3


  41 0006 7860     		str	r0, [r7, #4]
  42 0008 3960     		str	r1, [r7]
  75:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
  43              		.loc 1 75 0
  44 000a 0F23     		movs	r3, #15
  45 000c FB18     		adds	r3, r7, r3
  46 000e 0122     		movs	r2, #1
  47 0010 1A70     		strb	r2, [r3]
  76:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  77:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((NULL != context) && (NULL != config) && (NULL != ((uint32 *)config->userFlashStartAddr)) &&
  48              		.loc 1 77 0
  49 0012 3B68     		ldr	r3, [r7]
  50 0014 002B     		cmp	r3, #0
  51 0016 4FD0     		beq	.L2
  52              		.loc 1 77 0 is_stmt 0 discriminator 1
  53 0018 7B68     		ldr	r3, [r7, #4]
  54 001a 002B     		cmp	r3, #0
  55 001c 4CD0     		beq	.L2
  56              		.loc 1 77 0 discriminator 2
  57 001e 7B68     		ldr	r3, [r7, #4]
  58 0020 DB68     		ldr	r3, [r3, #12]
  59 0022 002B     		cmp	r3, #0
  60 0024 48D0     		beq	.L2
  78:Generated_Source\PSoC4/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  61              		.loc 1 78 0 is_stmt 1 discriminator 3
  62 0026 7B68     		ldr	r3, [r7, #4]
  63 0028 5B68     		ldr	r3, [r3, #4]
  77:Generated_Source\PSoC4/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  64              		.loc 1 77 0 discriminator 3
  65 002a 0A2B     		cmp	r3, #10
  66 002c 44D8     		bhi	.L2
  67              		.loc 1 78 0
  68 002e 7B68     		ldr	r3, [r7, #4]
  69 0030 1B68     		ldr	r3, [r3]
  70 0032 002B     		cmp	r3, #0
  71 0034 40D0     		beq	.L2
  79:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
  80:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CheckRanges(config);
  72              		.loc 1 80 0
  73 0036 0F23     		movs	r3, #15
  74 0038 FC18     		adds	r4, r7, r3
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 1800     		movs	r0, r3
  77 003e FFF7FEFF 		bl	CheckRanges
  78 0042 0300     		movs	r3, r0
  79 0044 2370     		strb	r3, [r4]
  81:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  82:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
  80              		.loc 1 82 0
  81 0046 0F23     		movs	r3, #15
  82 0048 FB18     		adds	r3, r7, r3
  83 004a 1B78     		ldrb	r3, [r3]
  84 004c 002B     		cmp	r3, #0
  85 004e 33D1     		bne	.L2
  83:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
  84:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Copy the user config structure fields into context */
  85:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->eepromSize = config->eepromSize;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 4


  86              		.loc 1 85 0
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1A68     		ldr	r2, [r3]
  89 0054 3B68     		ldr	r3, [r7]
  90 0056 DA60     		str	r2, [r3, #12]
  86:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wearLevelingFactor = config->wearLevelingFactor;
  91              		.loc 1 86 0
  92 0058 7B68     		ldr	r3, [r7, #4]
  93 005a 5A68     		ldr	r2, [r3, #4]
  94 005c 3B68     		ldr	r3, [r7]
  95 005e 1A61     		str	r2, [r3, #16]
  87:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->redundantCopy = config->redundantCopy;
  96              		.loc 1 87 0
  97 0060 7B68     		ldr	r3, [r7, #4]
  98 0062 1A7A     		ldrb	r2, [r3, #8]
  99 0064 3B68     		ldr	r3, [r7]
 100 0066 1A75     		strb	r2, [r3, #20]
  88:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->blockingWrite = config->blockingWrite;
 101              		.loc 1 88 0
 102 0068 7B68     		ldr	r3, [r7, #4]
 103 006a 5A7A     		ldrb	r2, [r3, #9]
 104 006c 3B68     		ldr	r3, [r7]
 105 006e 5A75     		strb	r2, [r3, #21]
  89:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->userFlashStartAddr = config->userFlashStartAddr;
 106              		.loc 1 89 0
 107 0070 7B68     		ldr	r3, [r7, #4]
 108 0072 DA68     		ldr	r2, [r3, #12]
 109 0074 3B68     		ldr	r3, [r7]
 110 0076 9A61     		str	r2, [r3, #24]
  90:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Store frequently used data for internal use */
  91:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->numberOfRows =  CY_EM_EEPROM_GET_NUM_ROWS_IN_EEPROM(config->eepromSize);
 111              		.loc 1 91 0
 112 0078 7B68     		ldr	r3, [r7, #4]
 113 007a 1B68     		ldr	r3, [r3]
 114 007c DA09     		lsrs	r2, r3, #7
 115 007e 7B68     		ldr	r3, [r7, #4]
 116 0080 1B68     		ldr	r3, [r3]
 117 0082 7F21     		movs	r1, #127
 118 0084 0B40     		ands	r3, r1
 119 0086 01D0     		beq	.L3
 120              		.loc 1 91 0 is_stmt 0 discriminator 1
 121 0088 0123     		movs	r3, #1
 122 008a 00E0     		b	.L4
 123              	.L3:
 124              		.loc 1 91 0 discriminator 2
 125 008c 0023     		movs	r3, #0
 126              	.L4:
 127              		.loc 1 91 0 discriminator 4
 128 008e D218     		adds	r2, r2, r3
 129 0090 3B68     		ldr	r3, [r7]
 130 0092 5A60     		str	r2, [r3, #4]
  92:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 131              		.loc 1 92 0 is_stmt 1 discriminator 4
 132 0094 3B68     		ldr	r3, [r7]
 133 0096 5A68     		ldr	r2, [r3, #4]
 134 0098 7B68     		ldr	r3, [r7, #4]
 135 009a 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 5


 136 009c 5343     		muls	r3, r2
 137 009e 1A02     		lsls	r2, r3, #8
  93:Generated_Source\PSoC4/cy_em_eeprom.c ****                     config->userFlashStartAddr);
 138              		.loc 1 93 0 discriminator 4
 139 00a0 7B68     		ldr	r3, [r7, #4]
 140 00a2 DB68     		ldr	r3, [r3, #12]
  92:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 141              		.loc 1 92 0 discriminator 4
 142 00a4 D218     		adds	r2, r2, r3
 143 00a6 3B68     		ldr	r3, [r7]
 144 00a8 1A60     		str	r2, [r3]
  94:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Find last written EEPROM row and store it for quick access */
  95:Generated_Source\PSoC4/cy_em_eeprom.c ****             FindLastWrittenRow(&context->lastWrRowAddr, context);
 145              		.loc 1 95 0 discriminator 4
 146 00aa 3B68     		ldr	r3, [r7]
 147 00ac 0833     		adds	r3, r3, #8
 148 00ae 3A68     		ldr	r2, [r7]
 149 00b0 1100     		movs	r1, r2
 150 00b2 1800     		movs	r0, r3
 151 00b4 FFF7FEFF 		bl	FindLastWrittenRow
 152              	.L2:
  96:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
  97:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
  98:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  99:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 153              		.loc 1 99 0
 154 00b8 0F23     		movs	r3, #15
 155 00ba FB18     		adds	r3, r7, r3
 156 00bc 1B78     		ldrb	r3, [r3]
 100:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 157              		.loc 1 100 0
 158 00be 1800     		movs	r0, r3
 159 00c0 BD46     		mov	sp, r7
 160 00c2 05B0     		add	sp, sp, #20
 161              		@ sp needed
 162 00c4 90BD     		pop	{r4, r7, pc}
 163              		.cfi_endproc
 164              	.LFE2:
 165              		.size	Cy_Em_EEPROM_Init, .-Cy_Em_EEPROM_Init
 166              		.global	__aeabi_uidiv
 167              		.section	.text.Cy_Em_EEPROM_Read,"ax",%progbits
 168              		.align	2
 169              		.global	Cy_Em_EEPROM_Read
 170              		.code	16
 171              		.thumb_func
 172              		.type	Cy_Em_EEPROM_Read, %function
 173              	Cy_Em_EEPROM_Read:
 174              	.LFB3:
 101:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 102:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 103:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 104:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Read
 105:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 106:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 107:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function takes the logical EEPROM address, converts it to the actual
 108:Generated_Source\PSoC4/cy_em_eeprom.c **** * physical address where the data is stored and returns the data to the user.
 109:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 6


 110:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
 111:Generated_Source\PSoC4/cy_em_eeprom.c **** * The logical start address in EEPROM to start reading data from.
 112:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 113:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param eepromData
 114:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a user array to write data to.
 115:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 116:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param size
 117:Generated_Source\PSoC4/cy_em_eeprom.c **** * The amount of data to read.
 118:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 119:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 120:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 121:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 122:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 123:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 124:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 125:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 126:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
 127:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 128:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 129:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 130:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case in if redundant copy option is enabled the function may perform writes
 131:Generated_Source\PSoC4/cy_em_eeprom.c **** * to EEPROM. This is done in case if the data in the EEPPROM is corrupted and
 132:Generated_Source\PSoC4/cy_em_eeprom.c **** * the data in redundant copy is valid based on CRC-8 data integrity check.
 133:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 134:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 135:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t
 136:Generated_Source\PSoC4/cy_em_eeprom.c ****     Cy_Em_EEPROM_Read(uint32 addr, void * eepromData, uint32 size, cy_stc_eeprom_context_t * contex
 137:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 175              		.loc 1 137 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 88
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 B0B5     		push	{r4, r5, r7, lr}
 180              		.cfi_def_cfa_offset 16
 181              		.cfi_offset 4, -16
 182              		.cfi_offset 5, -12
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 98B0     		sub	sp, sp, #96
 186              		.cfi_def_cfa_offset 112
 187 0004 02AF     		add	r7, sp, #8
 188              		.cfi_def_cfa 7, 104
 189 0006 F860     		str	r0, [r7, #12]
 190 0008 B960     		str	r1, [r7, #8]
 191 000a 7A60     		str	r2, [r7, #4]
 192 000c 3B60     		str	r3, [r7]
 138:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 193              		.loc 1 138 0
 194 000e 5723     		movs	r3, #87
 195 0010 FB18     		adds	r3, r7, r3
 196 0012 0122     		movs	r2, #1
 197 0014 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 140:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 numBytesToRead;
 141:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curEepromBaseAddr;
 142:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curRowOffset;
 143:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startRowAddr;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 7


 144:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 actEepromRowNum;
 145:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curRdEepromRowNum = 0u;
 198              		.loc 1 145 0
 199 0016 0023     		movs	r3, #0
 200 0018 7B64     		str	r3, [r7, #68]
 146:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 dataStartEepromRowNum = 0u;
 201              		.loc 1 146 0
 202 001a 0023     		movs	r3, #0
 203 001c 3B64     		str	r3, [r7, #64]
 147:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 204              		.loc 1 147 0
 205 001e BB68     		ldr	r3, [r7, #8]
 206 0020 FB63     		str	r3, [r7, #60]
 148:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 149:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Validate input parameters */
 150:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 207              		.loc 1 150 0
 208 0022 7B68     		ldr	r3, [r7, #4]
 209 0024 002B     		cmp	r3, #0
 210 0026 00D1     		bne	.LCB153
 211 0028 61E1     		b	.L7	@long jump
 212              	.LCB153:
 213              		.loc 1 150 0 is_stmt 0 discriminator 1
 214 002a FA68     		ldr	r2, [r7, #12]
 215 002c 7B68     		ldr	r3, [r7, #4]
 216 002e D218     		adds	r2, r2, r3
 217 0030 3B68     		ldr	r3, [r7]
 218 0032 DB68     		ldr	r3, [r3, #12]
 219 0034 9A42     		cmp	r2, r3
 220 0036 00D9     		bls	.LCB160
 221 0038 59E1     		b	.L7	@long jump
 222              	.LCB160:
 223              		.loc 1 150 0 discriminator 2
 224 003a BB68     		ldr	r3, [r7, #8]
 225 003c 002B     		cmp	r3, #0
 226 003e 00D1     		bne	.LCB163
 227 0040 55E1     		b	.L7	@long jump
 228              	.LCB163:
 229              	.LBB2:
 151:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 152:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rdAddr = addr;
 230              		.loc 1 152 0 is_stmt 1
 231 0042 FB68     		ldr	r3, [r7, #12]
 232 0044 BB63     		str	r3, [r7, #56]
 153:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rdSize = size;
 233              		.loc 1 153 0
 234 0046 7B68     		ldr	r3, [r7, #4]
 235 0048 7B63     		str	r3, [r7, #52]
 154:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the sequence number of the last written row */
 155:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 seqNum = CY_GET_REG32(context->lastWrRowAddr);
 236              		.loc 1 155 0
 237 004a 3B68     		ldr	r3, [r7]
 238 004c 9B68     		ldr	r3, [r3, #8]
 239 004e 1B68     		ldr	r3, [r3]
 240 0050 FB62     		str	r3, [r7, #44]
 156:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 157:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != seqNum)
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 8


 241              		.loc 1 157 0
 242 0052 FB6A     		ldr	r3, [r7, #44]
 243 0054 002B     		cmp	r3, #0
 244 0056 00D1     		bne	.LCB175
 245 0058 45E1     		b	.L8	@long jump
 246              	.LCB175:
 247              	.LBB3:
 158:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 159:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 updateAddrFlag = 0u;
 248              		.loc 1 159 0
 249 005a 0023     		movs	r3, #0
 250 005c 3B63     		str	r3, [r7, #48]
 160:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 161:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Calculate the number of the row read operations. Currently this only concerns
 162:Generated_Source\PSoC4/cy_em_eeprom.c ****             * the reads from the EEPROM data locations.
 163:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 164:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 numRowReads = ((((rdAddr + rdSize) - 1u) / CY_EM_EEPROM_EEPROM_DATA_LEN) -
 251              		.loc 1 164 0
 252 005e BA6B     		ldr	r2, [r7, #56]
 253 0060 7B6B     		ldr	r3, [r7, #52]
 254 0062 D318     		adds	r3, r2, r3
 255 0064 013B     		subs	r3, r3, #1
 256 0066 DA09     		lsrs	r2, r3, #7
 165:Generated_Source\PSoC4/cy_em_eeprom.c ****                                   (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 257              		.loc 1 165 0
 258 0068 BB6B     		ldr	r3, [r7, #56]
 259 006a DB09     		lsrs	r3, r3, #7
 164:Generated_Source\PSoC4/cy_em_eeprom.c ****                                   (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 260              		.loc 1 164 0
 261 006c D31A     		subs	r3, r2, r3
 262 006e 0133     		adds	r3, r3, #1
 263 0070 BB62     		str	r3, [r7, #40]
 166:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 167:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the first row of the currently active EEPROM sector. If
 168:Generated_Source\PSoC4/cy_em_eeprom.c ****             * no wear leveling is used - the EEPROM has only one sector, so use the base
 169:Generated_Source\PSoC4/cy_em_eeprom.c ****             * addr stored in "context->userFlashStartAddr".
 170:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 171:Generated_Source\PSoC4/cy_em_eeprom.c ****             curEepromBaseAddr = (((context->lastWrRowAddr - context->userFlashStartAddr) /
 264              		.loc 1 171 0
 265 0072 3B68     		ldr	r3, [r7]
 266 0074 9A68     		ldr	r2, [r3, #8]
 267 0076 3B68     		ldr	r3, [r7]
 268 0078 9B69     		ldr	r3, [r3, #24]
 269 007a D21A     		subs	r2, r2, r3
 172:Generated_Source\PSoC4/cy_em_eeprom.c ****                                   (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 270              		.loc 1 172 0
 271 007c 3B68     		ldr	r3, [r7]
 272 007e 5B68     		ldr	r3, [r3, #4]
 273 0080 1B02     		lsls	r3, r3, #8
 171:Generated_Source\PSoC4/cy_em_eeprom.c ****                                   (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 274              		.loc 1 171 0
 275 0082 1900     		movs	r1, r3
 276 0084 1000     		movs	r0, r2
 277 0086 FFF7FEFF 		bl	__aeabi_uidiv
 278 008a 0300     		movs	r3, r0
 279 008c 1A00     		movs	r2, r3
 173:Generated_Source\PSoC4/cy_em_eeprom.c ****                                   (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) +
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 9


 280              		.loc 1 173 0
 281 008e 3B68     		ldr	r3, [r7]
 282 0090 5B68     		ldr	r3, [r3, #4]
 172:Generated_Source\PSoC4/cy_em_eeprom.c ****                                   (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 283              		.loc 1 172 0
 284 0092 5343     		muls	r3, r2
 285 0094 1A02     		lsls	r2, r3, #8
 174:Generated_Source\PSoC4/cy_em_eeprom.c ****                                    context->userFlashStartAddr;
 286              		.loc 1 174 0
 287 0096 3B68     		ldr	r3, [r7]
 288 0098 9B69     		ldr	r3, [r3, #24]
 171:Generated_Source\PSoC4/cy_em_eeprom.c ****                                   (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 289              		.loc 1 171 0
 290 009a D318     		adds	r3, r2, r3
 291 009c 7B62     		str	r3, [r7, #36]
 175:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 176:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Find the number of the row that contains the start address of the data */
 177:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(i = 0u; i < context->numberOfRows; i++)
 292              		.loc 1 177 0
 293 009e 0023     		movs	r3, #0
 294 00a0 3B65     		str	r3, [r7, #80]
 295 00a2 18E0     		b	.L9
 296              	.L14:
 178:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 179:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(rdAddr, i))
 297              		.loc 1 179 0
 298 00a4 3B6D     		ldr	r3, [r7, #80]
 299 00a6 DA01     		lsls	r2, r3, #7
 300 00a8 BB6B     		ldr	r3, [r7, #56]
 301 00aa 9A42     		cmp	r2, r3
 302 00ac 08D8     		bhi	.L10
 303              		.loc 1 179 0 is_stmt 0 discriminator 1
 304 00ae 3B6D     		ldr	r3, [r7, #80]
 305 00b0 0133     		adds	r3, r3, #1
 306 00b2 DB01     		lsls	r3, r3, #7
 307 00b4 5A1E     		subs	r2, r3, #1
 308 00b6 BB6B     		ldr	r3, [r7, #56]
 309 00b8 9A42     		cmp	r2, r3
 310 00ba 01D3     		bcc	.L10
 311              		.loc 1 179 0 discriminator 3
 312 00bc 0123     		movs	r3, #1
 313 00be 00E0     		b	.L11
 314              	.L10:
 315              		.loc 1 179 0 discriminator 4
 316 00c0 0023     		movs	r3, #0
 317              	.L11:
 318              		.loc 1 179 0 discriminator 6
 319 00c2 002B     		cmp	r3, #0
 320 00c4 04D0     		beq	.L12
 180:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 181:Generated_Source\PSoC4/cy_em_eeprom.c ****                     dataStartEepromRowNum = i;
 321              		.loc 1 181 0 is_stmt 1
 322 00c6 3B6D     		ldr	r3, [r7, #80]
 323 00c8 3B64     		str	r3, [r7, #64]
 182:Generated_Source\PSoC4/cy_em_eeprom.c ****                     curRdEepromRowNum = dataStartEepromRowNum;
 324              		.loc 1 182 0
 325 00ca 3B6C     		ldr	r3, [r7, #64]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 10


 326 00cc 7B64     		str	r3, [r7, #68]
 183:Generated_Source\PSoC4/cy_em_eeprom.c ****                     break;
 327              		.loc 1 183 0
 328 00ce 07E0     		b	.L13
 329              	.L12:
 177:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 330              		.loc 1 177 0 discriminator 2
 331 00d0 3B6D     		ldr	r3, [r7, #80]
 332 00d2 0133     		adds	r3, r3, #1
 333 00d4 3B65     		str	r3, [r7, #80]
 334              	.L9:
 177:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 335              		.loc 1 177 0 is_stmt 0 discriminator 1
 336 00d6 3B68     		ldr	r3, [r7]
 337 00d8 5A68     		ldr	r2, [r3, #4]
 338 00da 3B6D     		ldr	r3, [r7, #80]
 339 00dc 9A42     		cmp	r2, r3
 340 00de E1D8     		bhi	.L14
 341              	.L13:
 184:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 185:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 186:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 187:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Find the row number of the last written row */
 188:Generated_Source\PSoC4/cy_em_eeprom.c ****             actEepromRowNum = (context->lastWrRowAddr - curEepromBaseAddr) / CY_EM_EEPROM_FLASH_SIZ
 342              		.loc 1 188 0 is_stmt 1
 343 00e0 3B68     		ldr	r3, [r7]
 344 00e2 9A68     		ldr	r2, [r3, #8]
 345 00e4 7B6A     		ldr	r3, [r7, #36]
 346 00e6 D31A     		subs	r3, r2, r3
 347 00e8 1B0A     		lsrs	r3, r3, #8
 348 00ea 3B62     		str	r3, [r7, #32]
 189:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 190:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if wear leveling is used */
 191:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(context->wearLevelingFactor > 1u)
 349              		.loc 1 191 0
 350 00ec 3B68     		ldr	r3, [r7]
 351 00ee 1B69     		ldr	r3, [r3, #16]
 352 00f0 012B     		cmp	r3, #1
 353 00f2 12D9     		bls	.L15
 354              	.LBB4:
 192:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 193:Generated_Source\PSoC4/cy_em_eeprom.c ****                 uint32 dataEndEepromRowNum = dataStartEepromRowNum + (numRowReads - 1u);
 355              		.loc 1 193 0
 356 00f4 BA6A     		ldr	r2, [r7, #40]
 357 00f6 3B6C     		ldr	r3, [r7, #64]
 358 00f8 D318     		adds	r3, r2, r3
 359 00fa 013B     		subs	r3, r3, #1
 360 00fc FB61     		str	r3, [r7, #28]
 194:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 195:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Check if the future validation of the read address is required. */
 196:Generated_Source\PSoC4/cy_em_eeprom.c ****                 updateAddrFlag = (dataStartEepromRowNum > actEepromRowNum) ? 1u :
 361              		.loc 1 196 0
 362 00fe 3A6C     		ldr	r2, [r7, #64]
 363 0100 3B6A     		ldr	r3, [r7, #32]
 364 0102 9A42     		cmp	r2, r3
 365 0104 07D8     		bhi	.L16
 366              		.loc 1 196 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 11


 367 0106 FA69     		ldr	r2, [r7, #28]
 368 0108 3B6A     		ldr	r3, [r7, #32]
 369 010a 9A42     		cmp	r2, r3
 370 010c 01D9     		bls	.L17
 371              		.loc 1 196 0 discriminator 3
 372 010e 0123     		movs	r3, #1
 373 0110 02E0     		b	.L19
 374              	.L17:
 375              		.loc 1 196 0 discriminator 4
 376 0112 0023     		movs	r3, #0
 377 0114 00E0     		b	.L19
 378              	.L16:
 379              		.loc 1 196 0 discriminator 2
 380 0116 0123     		movs	r3, #1
 381              	.L19:
 382              		.loc 1 196 0 discriminator 8
 383 0118 3B63     		str	r3, [r7, #48]
 384              	.L15:
 385              	.LBE4:
 197:Generated_Source\PSoC4/cy_em_eeprom.c ****                                   ((dataEndEepromRowNum > actEepromRowNum) ? 1u : 0u);
 198:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 199:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 200:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Copy data from the EEPROM data locations to the user buffer */
 201:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(i = 0u; i < numRowReads; i++)
 386              		.loc 1 201 0 is_stmt 1
 387 011a 0023     		movs	r3, #0
 388 011c 3B65     		str	r3, [r7, #80]
 389 011e 68E0     		b	.L20
 390              	.L27:
 202:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 203:Generated_Source\PSoC4/cy_em_eeprom.c ****                 startRowAddr = curEepromBaseAddr + (curRdEepromRowNum * CY_EM_EEPROM_FLASH_SIZEOF_R
 391              		.loc 1 203 0
 392 0120 7B6C     		ldr	r3, [r7, #68]
 393 0122 1A02     		lsls	r2, r3, #8
 394 0124 7B6A     		ldr	r3, [r7, #36]
 395 0126 D318     		adds	r3, r2, r3
 396 0128 BB64     		str	r3, [r7, #72]
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****                 curRowOffset = CY_EM_EEPROM_EEPROM_DATA_LEN + (rdAddr % CY_EM_EEPROM_EEPROM_DATA_LE
 397              		.loc 1 204 0
 398 012a BB6B     		ldr	r3, [r7, #56]
 399 012c 7F22     		movs	r2, #127
 400 012e 1340     		ands	r3, r2
 401 0130 8033     		adds	r3, r3, #128
 402 0132 BB61     		str	r3, [r7, #24]
 205:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 206:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Check if there are more reads pending and update the number of the
 207:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * remaining bytes to read respectively.
 208:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 209:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if((i + 1u) < numRowReads)
 403              		.loc 1 209 0
 404 0134 3B6D     		ldr	r3, [r7, #80]
 405 0136 5A1C     		adds	r2, r3, #1
 406 0138 BB6A     		ldr	r3, [r7, #40]
 407 013a 9A42     		cmp	r2, r3
 408 013c 06D2     		bcs	.L21
 210:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 211:Generated_Source\PSoC4/cy_em_eeprom.c ****                     numBytesToRead = CY_EM_EEPROM_EEPROM_DATA_LEN - (rdAddr % CY_EM_EEPROM_EEPROM_D
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 12


 409              		.loc 1 211 0
 410 013e BB6B     		ldr	r3, [r7, #56]
 411 0140 7F22     		movs	r2, #127
 412 0142 1340     		ands	r3, r2
 413 0144 8022     		movs	r2, #128
 414 0146 D31A     		subs	r3, r2, r3
 415 0148 FB64     		str	r3, [r7, #76]
 416 014a 01E0     		b	.L22
 417              	.L21:
 212:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 213:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 214:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 215:Generated_Source\PSoC4/cy_em_eeprom.c ****                     numBytesToRead = rdSize;
 418              		.loc 1 215 0
 419 014c 7B6B     		ldr	r3, [r7, #52]
 420 014e FB64     		str	r3, [r7, #76]
 421              	.L22:
 216:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 217:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 218:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Check if the read address needs to be updated to point to the correct
 219:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * EEPROM sector.
 220:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 221:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if((0u != updateAddrFlag) && (curRdEepromRowNum > actEepromRowNum))
 422              		.loc 1 221 0
 423 0150 3B6B     		ldr	r3, [r7, #48]
 424 0152 002B     		cmp	r3, #0
 425 0154 17D0     		beq	.L23
 426              		.loc 1 221 0 is_stmt 0 discriminator 1
 427 0156 7A6C     		ldr	r2, [r7, #68]
 428 0158 3B6A     		ldr	r3, [r7, #32]
 429 015a 9A42     		cmp	r2, r3
 430 015c 13D9     		bls	.L23
 222:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 223:Generated_Source\PSoC4/cy_em_eeprom.c ****                     startRowAddr -= context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 431              		.loc 1 223 0 is_stmt 1
 432 015e 3B68     		ldr	r3, [r7]
 433 0160 5B68     		ldr	r3, [r3, #4]
 434 0162 1B02     		lsls	r3, r3, #8
 435 0164 BA6C     		ldr	r2, [r7, #72]
 436 0166 D31A     		subs	r3, r2, r3
 437 0168 BB64     		str	r3, [r7, #72]
 224:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 225:Generated_Source\PSoC4/cy_em_eeprom.c ****                     if(startRowAddr < context->userFlashStartAddr)
 438              		.loc 1 225 0
 439 016a 3B68     		ldr	r3, [r7]
 440 016c 9A69     		ldr	r2, [r3, #24]
 441 016e BB6C     		ldr	r3, [r7, #72]
 442 0170 9A42     		cmp	r2, r3
 443 0172 08D9     		bls	.L23
 226:Generated_Source\PSoC4/cy_em_eeprom.c ****                     {
 227:Generated_Source\PSoC4/cy_em_eeprom.c ****                         startRowAddr = context->wlEndAddr -
 444              		.loc 1 227 0
 445 0174 3B68     		ldr	r3, [r7]
 446 0176 1A68     		ldr	r2, [r3]
 228:Generated_Source\PSoC4/cy_em_eeprom.c ****                             ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEO
 447              		.loc 1 228 0
 448 0178 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 13


 449 017a 5968     		ldr	r1, [r3, #4]
 450 017c 7B6C     		ldr	r3, [r7, #68]
 451 017e CB1A     		subs	r3, r1, r3
 452 0180 1B02     		lsls	r3, r3, #8
 227:Generated_Source\PSoC4/cy_em_eeprom.c ****                             ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEO
 453              		.loc 1 227 0
 454 0182 D31A     		subs	r3, r2, r3
 455 0184 BB64     		str	r3, [r7, #72]
 456              	.L23:
 229:Generated_Source\PSoC4/cy_em_eeprom.c ****                     }
 230:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 231:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 232:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u != context->redundantCopy)
 457              		.loc 1 232 0
 458 0186 3B68     		ldr	r3, [r7]
 459 0188 1B7D     		ldrb	r3, [r3, #20]
 460 018a 002B     		cmp	r3, #0
 461 018c 12D0     		beq	.L24
 233:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 235:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the corresponding row in redundant copy, otherwise return failure.
 236:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 237:Generated_Source\PSoC4/cy_em_eeprom.c ****                     ret = CheckCrcAndCopy(startRowAddr, eeData, curRowOffset, numBytesToRead, conte
 462              		.loc 1 237 0
 463 018e 5723     		movs	r3, #87
 464 0190 FC18     		adds	r4, r7, r3
 465 0192 FD6C     		ldr	r5, [r7, #76]
 466 0194 BA69     		ldr	r2, [r7, #24]
 467 0196 F96B     		ldr	r1, [r7, #60]
 468 0198 B86C     		ldr	r0, [r7, #72]
 469 019a 3B68     		ldr	r3, [r7]
 470 019c 0093     		str	r3, [sp]
 471 019e 2B00     		movs	r3, r5
 472 01a0 FFF7FEFF 		bl	CheckCrcAndCopy
 473 01a4 0300     		movs	r3, r0
 474 01a6 2370     		strb	r3, [r4]
 238:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 239:Generated_Source\PSoC4/cy_em_eeprom.c ****                     if(CY_EM_EEPROM_SUCCESS != ret)
 475              		.loc 1 239 0
 476 01a8 5723     		movs	r3, #87
 477 01aa FB18     		adds	r3, r7, r3
 478 01ac 1B78     		ldrb	r3, [r3]
 479 01ae 002B     		cmp	r3, #0
 480 01b0 0DD0     		beq	.L25
 240:Generated_Source\PSoC4/cy_em_eeprom.c ****                     {
 241:Generated_Source\PSoC4/cy_em_eeprom.c ****                         break;
 481              		.loc 1 241 0
 482 01b2 22E0     		b	.L26
 483              	.L24:
 242:Generated_Source\PSoC4/cy_em_eeprom.c ****                     }
 243:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 244:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 245:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 246:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Copy the data to the user buffer */
 247:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (void)memcpy((void *)(eeData),
 484              		.loc 1 247 0
 485 01b4 F86B     		ldr	r0, [r7, #60]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 14


 248:Generated_Source\PSoC4/cy_em_eeprom.c ****                                  (void *)(startRowAddr + curRowOffset),
 486              		.loc 1 248 0
 487 01b6 BA6C     		ldr	r2, [r7, #72]
 488 01b8 BB69     		ldr	r3, [r7, #24]
 489 01ba D318     		adds	r3, r2, r3
 247:Generated_Source\PSoC4/cy_em_eeprom.c ****                                  (void *)(startRowAddr + curRowOffset),
 490              		.loc 1 247 0
 491 01bc 1900     		movs	r1, r3
 492 01be FB6C     		ldr	r3, [r7, #76]
 493 01c0 1A00     		movs	r2, r3
 494 01c2 FFF7FEFF 		bl	memcpy
 249:Generated_Source\PSoC4/cy_em_eeprom.c ****                                  numBytesToRead);
 250:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 251:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Indicate success to be able to execute next code block */
 252:Generated_Source\PSoC4/cy_em_eeprom.c ****                     ret = CY_EM_EEPROM_SUCCESS;
 495              		.loc 1 252 0
 496 01c6 5723     		movs	r3, #87
 497 01c8 FB18     		adds	r3, r7, r3
 498 01ca 0022     		movs	r2, #0
 499 01cc 1A70     		strb	r2, [r3]
 500              	.L25:
 253:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 254:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 255:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Update variables anticipated in the read operation */
 256:Generated_Source\PSoC4/cy_em_eeprom.c ****                 rdAddr += numBytesToRead;
 501              		.loc 1 256 0 discriminator 2
 502 01ce BA6B     		ldr	r2, [r7, #56]
 503 01d0 FB6C     		ldr	r3, [r7, #76]
 504 01d2 D318     		adds	r3, r2, r3
 505 01d4 BB63     		str	r3, [r7, #56]
 257:Generated_Source\PSoC4/cy_em_eeprom.c ****                 rdSize -= numBytesToRead;
 506              		.loc 1 257 0 discriminator 2
 507 01d6 7A6B     		ldr	r2, [r7, #52]
 508 01d8 FB6C     		ldr	r3, [r7, #76]
 509 01da D31A     		subs	r3, r2, r3
 510 01dc 7B63     		str	r3, [r7, #52]
 258:Generated_Source\PSoC4/cy_em_eeprom.c ****                 eeData += numBytesToRead;
 511              		.loc 1 258 0 discriminator 2
 512 01de FA6B     		ldr	r2, [r7, #60]
 513 01e0 FB6C     		ldr	r3, [r7, #76]
 514 01e2 D318     		adds	r3, r2, r3
 515 01e4 FB63     		str	r3, [r7, #60]
 259:Generated_Source\PSoC4/cy_em_eeprom.c ****                 curRdEepromRowNum++;
 516              		.loc 1 259 0 discriminator 2
 517 01e6 7B6C     		ldr	r3, [r7, #68]
 518 01e8 0133     		adds	r3, r3, #1
 519 01ea 7B64     		str	r3, [r7, #68]
 201:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 520              		.loc 1 201 0 discriminator 2
 521 01ec 3B6D     		ldr	r3, [r7, #80]
 522 01ee 0133     		adds	r3, r3, #1
 523 01f0 3B65     		str	r3, [r7, #80]
 524              	.L20:
 201:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 525              		.loc 1 201 0 is_stmt 0 discriminator 1
 526 01f2 3A6D     		ldr	r2, [r7, #80]
 527 01f4 BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 15


 528 01f6 9A42     		cmp	r2, r3
 529 01f8 92D3     		bcc	.L27
 530              	.L26:
 260:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 261:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 262:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* This code block will copy the latest data from the EEPROM headers into the
 263:Generated_Source\PSoC4/cy_em_eeprom.c ****             * user buffer. The data previously copied into the user buffer may be updated
 264:Generated_Source\PSoC4/cy_em_eeprom.c ****             * as the EEPROM headers contain more recent data.
 265:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 266:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 531              		.loc 1 266 0 is_stmt 1
 532 01fa 5723     		movs	r3, #87
 533 01fc FB18     		adds	r3, r7, r3
 534 01fe 1B78     		ldrb	r3, [r3]
 535 0200 002B     		cmp	r3, #0
 536 0202 00D0     		beq	.LCB430
 537 0204 73E0     		b	.L7	@long jump
 538              	.LCB430:
 267:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 268:Generated_Source\PSoC4/cy_em_eeprom.c ****                 numRowReads = context->numberOfRows - 1u;
 539              		.loc 1 268 0
 540 0206 3B68     		ldr	r3, [r7]
 541 0208 5B68     		ldr	r3, [r3, #4]
 542 020a 013B     		subs	r3, r3, #1
 543 020c BB62     		str	r3, [r7, #40]
 269:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 270:Generated_Source\PSoC4/cy_em_eeprom.c ****                 for(i = (seqNum - numRowReads); i <= seqNum; i++)
 544              		.loc 1 270 0
 545 020e FA6A     		ldr	r2, [r7, #44]
 546 0210 BB6A     		ldr	r3, [r7, #40]
 547 0212 D31A     		subs	r3, r2, r3
 548 0214 3B65     		str	r3, [r7, #80]
 549 0216 61E0     		b	.L29
 550              	.L36:
 271:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 272:Generated_Source\PSoC4/cy_em_eeprom.c ****                     startRowAddr = GetRowAddrBySeqNum(i, context);
 551              		.loc 1 272 0
 552 0218 3A68     		ldr	r2, [r7]
 553 021a 3B6D     		ldr	r3, [r7, #80]
 554 021c 1100     		movs	r1, r2
 555 021e 1800     		movs	r0, r3
 556 0220 FFF7FEFF 		bl	GetRowAddrBySeqNum
 557 0224 0300     		movs	r3, r0
 558 0226 BB64     		str	r3, [r7, #72]
 273:Generated_Source\PSoC4/cy_em_eeprom.c ****                     
 274:Generated_Source\PSoC4/cy_em_eeprom.c ****                     if (0u != startRowAddr)
 559              		.loc 1 274 0
 560 0228 BB6C     		ldr	r3, [r7, #72]
 561 022a 002B     		cmp	r3, #0
 562 022c 53D0     		beq	.L30
 563              	.LBB5:
 275:Generated_Source\PSoC4/cy_em_eeprom.c ****                     {
 276:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* The following variables are introduced to increase code readability. */
 277:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 startAddr  = *(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFF
 564              		.loc 1 277 0
 565 022e BB6C     		ldr	r3, [r7, #72]
 566 0230 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 16


 567 0232 1B68     		ldr	r3, [r3]
 568 0234 7B61     		str	r3, [r7, #20]
 278:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 endAddr    = startAddr + (*(uint32 *)(startRowAddr + CY_EM_EEPROM_HE
 569              		.loc 1 278 0
 570 0236 BB6C     		ldr	r3, [r7, #72]
 571 0238 0833     		adds	r3, r3, #8
 572 023a 1A68     		ldr	r2, [r3]
 573 023c 7B69     		ldr	r3, [r7, #20]
 574 023e D318     		adds	r3, r2, r3
 575 0240 3B61     		str	r3, [r7, #16]
 279:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 280:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Check if the current row EEPROM header contains the data requested for r
 281:Generated_Source\PSoC4/cy_em_eeprom.c ****                         if(0u != CY_EM_EEPROM_IS_ADDRESES_CROSSING(startAddr, endAddr, addr, addr +
 576              		.loc 1 281 0
 577 0242 7A69     		ldr	r2, [r7, #20]
 578 0244 FB68     		ldr	r3, [r7, #12]
 579 0246 9A42     		cmp	r2, r3
 580 0248 08D9     		bls	.L31
 581              		.loc 1 281 0 is_stmt 0 discriminator 1
 582 024a FA68     		ldr	r2, [r7, #12]
 583 024c 7B68     		ldr	r3, [r7, #4]
 584 024e D318     		adds	r3, r2, r3
 585 0250 7A69     		ldr	r2, [r7, #20]
 586 0252 9A42     		cmp	r2, r3
 587 0254 9B41     		sbcs	r3, r3, r3
 588 0256 5B42     		rsbs	r3, r3, #0
 589 0258 DBB2     		uxtb	r3, r3
 590 025a 05E0     		b	.L32
 591              	.L31:
 592              		.loc 1 281 0 discriminator 2
 593 025c FA68     		ldr	r2, [r7, #12]
 594 025e 3B69     		ldr	r3, [r7, #16]
 595 0260 9A42     		cmp	r2, r3
 596 0262 9B41     		sbcs	r3, r3, r3
 597 0264 5B42     		rsbs	r3, r3, #0
 598 0266 DBB2     		uxtb	r3, r3
 599              	.L32:
 600              		.loc 1 281 0 discriminator 4
 601 0268 002B     		cmp	r3, #0
 602 026a 34D0     		beq	.L30
 282:Generated_Source\PSoC4/cy_em_eeprom.c ****                         {
 283:Generated_Source\PSoC4/cy_em_eeprom.c ****                             rdAddr = (startAddr > addr) ? (startAddr) : (addr);
 603              		.loc 1 283 0 is_stmt 1
 604 026c 7A69     		ldr	r2, [r7, #20]
 605 026e FB68     		ldr	r3, [r7, #12]
 606 0270 9342     		cmp	r3, r2
 607 0272 00D2     		bcs	.L33
 608 0274 1300     		movs	r3, r2
 609              	.L33:
 610 0276 BB63     		str	r3, [r7, #56]
 284:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 285:Generated_Source\PSoC4/cy_em_eeprom.c ****                             /* Calculate the number of bytes to be read from the current row's EEPR
 286:Generated_Source\PSoC4/cy_em_eeprom.c ****                             numBytesToRead = ((endAddr < (addr + size)) ? endAddr : (addr + size)) 
 611              		.loc 1 286 0
 612 0278 FA68     		ldr	r2, [r7, #12]
 613 027a 7B68     		ldr	r3, [r7, #4]
 614 027c D318     		adds	r3, r2, r3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 17


 615 027e 3A69     		ldr	r2, [r7, #16]
 616 0280 9342     		cmp	r3, r2
 617 0282 00D9     		bls	.L34
 618 0284 1300     		movs	r3, r2
 619              	.L34:
 620 0286 BA6B     		ldr	r2, [r7, #56]
 621 0288 9B1A     		subs	r3, r3, r2
 622 028a FB64     		str	r3, [r7, #76]
 287:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 288:Generated_Source\PSoC4/cy_em_eeprom.c ****                             /* Calculate the offset in the user buffer from which the data will be 
 289:Generated_Source\PSoC4/cy_em_eeprom.c ****                             eeData = ((uint32)eepromData) + (rdAddr - addr);
 623              		.loc 1 289 0
 624 028c BA6B     		ldr	r2, [r7, #56]
 625 028e FB68     		ldr	r3, [r7, #12]
 626 0290 D21A     		subs	r2, r2, r3
 627 0292 BB68     		ldr	r3, [r7, #8]
 628 0294 D318     		adds	r3, r2, r3
 629 0296 FB63     		str	r3, [r7, #60]
 290:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 291:Generated_Source\PSoC4/cy_em_eeprom.c ****                             /* Check a checksum of the EEPROM row and if it is bad, check a checksu
 292:Generated_Source\PSoC4/cy_em_eeprom.c ****                             * corresponding row in redundant copy, otherwise return failure. Copy t
 293:Generated_Source\PSoC4/cy_em_eeprom.c ****                             * from the recent EEPROM headers to the user buffer. This will overwrit
 294:Generated_Source\PSoC4/cy_em_eeprom.c ****                             * data copied form EEPROM data locations as the data in EEPROM headers 
 295:Generated_Source\PSoC4/cy_em_eeprom.c ****                             */
 296:Generated_Source\PSoC4/cy_em_eeprom.c ****                             if(0u != context->redundantCopy)
 630              		.loc 1 296 0
 631 0298 3B68     		ldr	r3, [r7]
 632 029a 1B7D     		ldrb	r3, [r3, #20]
 633 029c 002B     		cmp	r3, #0
 634 029e 12D0     		beq	.L35
 297:Generated_Source\PSoC4/cy_em_eeprom.c ****                             {
 298:Generated_Source\PSoC4/cy_em_eeprom.c ****                                 ret = CheckCrcAndCopy(startRowAddr, eeData,
 635              		.loc 1 298 0
 636 02a0 5723     		movs	r3, #87
 637 02a2 FC18     		adds	r4, r7, r3
 638 02a4 FA6C     		ldr	r2, [r7, #76]
 639 02a6 F96B     		ldr	r1, [r7, #60]
 640 02a8 B86C     		ldr	r0, [r7, #72]
 641 02aa 3B68     		ldr	r3, [r7]
 642 02ac 0093     		str	r3, [sp]
 643 02ae 1300     		movs	r3, r2
 644 02b0 0C22     		movs	r2, #12
 645 02b2 FFF7FEFF 		bl	CheckCrcAndCopy
 646 02b6 0300     		movs	r3, r0
 647 02b8 2370     		strb	r3, [r4]
 299:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                       CY_EM_EEPROM_HEADER_DATA_OFFSET, numBytesToRe
 300:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 301:Generated_Source\PSoC4/cy_em_eeprom.c ****                                 if(CY_EM_EEPROM_SUCCESS != ret)
 648              		.loc 1 301 0
 649 02ba 5723     		movs	r3, #87
 650 02bc FB18     		adds	r3, r7, r3
 651 02be 1B78     		ldrb	r3, [r3]
 652 02c0 002B     		cmp	r3, #0
 653 02c2 08D0     		beq	.L30
 302:Generated_Source\PSoC4/cy_em_eeprom.c ****                                 {
 303:Generated_Source\PSoC4/cy_em_eeprom.c ****                                     break;
 654              		.loc 1 303 0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 18


 655 02c4 13E0     		b	.L7
 656              	.L35:
 304:Generated_Source\PSoC4/cy_em_eeprom.c ****                                 }
 305:Generated_Source\PSoC4/cy_em_eeprom.c ****                             }
 306:Generated_Source\PSoC4/cy_em_eeprom.c ****                             else
 307:Generated_Source\PSoC4/cy_em_eeprom.c ****                             {
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****                                 (void)memcpy((void *)(eeData),
 657              		.loc 1 308 0
 658 02c6 F86B     		ldr	r0, [r7, #60]
 309:Generated_Source\PSoC4/cy_em_eeprom.c ****                                              (void *)(startRowAddr + CY_EM_EEPROM_HEADER_DATA_OFFSE
 659              		.loc 1 309 0
 660 02c8 BB6C     		ldr	r3, [r7, #72]
 661 02ca 0C33     		adds	r3, r3, #12
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****                                              (void *)(startRowAddr + CY_EM_EEPROM_HEADER_DATA_OFFSE
 662              		.loc 1 308 0
 663 02cc 1900     		movs	r1, r3
 664 02ce FB6C     		ldr	r3, [r7, #76]
 665 02d0 1A00     		movs	r2, r3
 666 02d2 FFF7FEFF 		bl	memcpy
 667              	.L30:
 668              	.LBE5:
 270:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 669              		.loc 1 270 0 discriminator 2
 670 02d6 3B6D     		ldr	r3, [r7, #80]
 671 02d8 0133     		adds	r3, r3, #1
 672 02da 3B65     		str	r3, [r7, #80]
 673              	.L29:
 270:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 674              		.loc 1 270 0 is_stmt 0 discriminator 1
 675 02dc 3A6D     		ldr	r2, [r7, #80]
 676 02de FB6A     		ldr	r3, [r7, #44]
 677 02e0 9A42     		cmp	r2, r3
 678 02e2 99D9     		bls	.L36
 679 02e4 03E0     		b	.L7
 680              	.L8:
 681              	.LBE3:
 310:Generated_Source\PSoC4/cy_em_eeprom.c ****                                              numBytesToRead);
 311:Generated_Source\PSoC4/cy_em_eeprom.c ****                             }
 312:Generated_Source\PSoC4/cy_em_eeprom.c ****                         }
 313:Generated_Source\PSoC4/cy_em_eeprom.c ****                     }
 314:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 315:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 316:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 317:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
 318:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 319:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* No records in the EEPROM */
 320:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = CY_EM_EEPROM_BAD_DATA;
 682              		.loc 1 320 0 is_stmt 1
 683 02e6 5723     		movs	r3, #87
 684 02e8 FB18     		adds	r3, r7, r3
 685 02ea 0322     		movs	r2, #3
 686 02ec 1A70     		strb	r2, [r3]
 687              	.L7:
 688              	.LBE2:
 321:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 322:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 323:Generated_Source\PSoC4/cy_em_eeprom.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 19


 324:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 689              		.loc 1 324 0
 690 02ee 5723     		movs	r3, #87
 691 02f0 FB18     		adds	r3, r7, r3
 692 02f2 1B78     		ldrb	r3, [r3]
 325:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 693              		.loc 1 325 0
 694 02f4 1800     		movs	r0, r3
 695 02f6 BD46     		mov	sp, r7
 696 02f8 16B0     		add	sp, sp, #88
 697              		@ sp needed
 698 02fa B0BD     		pop	{r4, r5, r7, pc}
 699              		.cfi_endproc
 700              	.LFE3:
 701              		.size	Cy_Em_EEPROM_Read, .-Cy_Em_EEPROM_Read
 702              		.global	__aeabi_uidivmod
 703              		.section	.text.Cy_Em_EEPROM_Write,"ax",%progbits
 704              		.align	2
 705              		.global	Cy_Em_EEPROM_Write
 706              		.code	16
 707              		.thumb_func
 708              		.type	Cy_Em_EEPROM_Write, %function
 709              	Cy_Em_EEPROM_Write:
 710              	.LFB4:
 326:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 327:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 328:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 329:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Write
 330:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 331:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 332:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function takes the logical EEPROM address and converts it to the actual
 333:Generated_Source\PSoC4/cy_em_eeprom.c **** * physical address and writes data there. If wear leveling is implemented, the
 334:Generated_Source\PSoC4/cy_em_eeprom.c **** * writing process will use the wear leveling techniques. This is a blocking
 335:Generated_Source\PSoC4/cy_em_eeprom.c **** * function and it does not return until the write operation is completed. The
 336:Generated_Source\PSoC4/cy_em_eeprom.c **** * user firmware should not enter Hibernate mode until write is completed. The
 337:Generated_Source\PSoC4/cy_em_eeprom.c **** * write operation is allowed in Sleep and Deep-Sleep modes. During the flash
 338:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation, the device should not be reset, including the XRES pin, a software
 339:Generated_Source\PSoC4/cy_em_eeprom.c **** * reset, and watchdog reset sources. Also, low-voltage detect circuits should
 340:Generated_Source\PSoC4/cy_em_eeprom.c **** * be configured to generate an interrupt instead of a reset. Otherwise, portions
 341:Generated_Source\PSoC4/cy_em_eeprom.c **** * of flash may undergo unexpected changes.
 342:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 343:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
 344:Generated_Source\PSoC4/cy_em_eeprom.c **** * The logical start address in EEPROM to start writing data from.
 345:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 346:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param eepromData
 347:Generated_Source\PSoC4/cy_em_eeprom.c **** * Data to write to EEPROM.
 348:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 349:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param size
 350:Generated_Source\PSoC4/cy_em_eeprom.c **** * The amount of data to write to EEPROM.
 351:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 352:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 353:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 354:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 355:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 356:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 357:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 358:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 20


 359:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform write
 360:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 361:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 362:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 363:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 364:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 365:Generated_Source\PSoC4/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 366:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 367:Generated_Source\PSoC4/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 368:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 369:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 370:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 371:Generated_Source\PSoC4/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 372:Generated_Source\PSoC4/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 373:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM write is not completed.
 374:Generated_Source\PSoC4/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 375:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 376:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 377:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t
 378:Generated_Source\PSoC4/cy_em_eeprom.c ****     Cy_Em_EEPROM_Write(uint32 addr, void * eepromData, uint32 size, cy_stc_eeprom_context_t * conte
 379:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 711              		.loc 1 379 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 336
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 B0B5     		push	{r4, r5, r7, lr}
 716              		.cfi_def_cfa_offset 16
 717              		.cfi_offset 4, -16
 718              		.cfi_offset 5, -12
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 D6B0     		sub	sp, sp, #344
 722              		.cfi_def_cfa_offset 360
 723 0004 02AF     		add	r7, sp, #8
 724              		.cfi_def_cfa 7, 352
 725 0006 F860     		str	r0, [r7, #12]
 726 0008 B960     		str	r1, [r7, #8]
 727 000a 7A60     		str	r2, [r7, #4]
 728 000c 3B60     		str	r3, [r7]
 380:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 729              		.loc 1 380 0
 730 000e 5023     		movs	r3, #80
 731 0010 FF33     		adds	r3, r3, #255
 732 0012 FB18     		adds	r3, r7, r3
 733 0014 0122     		movs	r2, #1
 734 0016 1A70     		strb	r2, [r3]
 381:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 382:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 wrCnt;
 383:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 actEmEepromRowNum;
 384:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
 385:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startAddr = 0u;
 735              		.loc 1 385 0
 736 0018 0023     		movs	r3, #0
 737 001a 3B62     		str	r3, [r7, #32]
 386:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 endAddr = 0u;
 738              		.loc 1 386 0
 739 001c 0023     		movs	r3, #0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 21


 740 001e FB61     		str	r3, [r7, #28]
 387:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 tmpRowAddr;
 388:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 741              		.loc 1 388 0
 742 0020 3B68     		ldr	r3, [r7]
 743 0022 9B68     		ldr	r3, [r3, #8]
 744 0024 BB61     		str	r3, [r7, #24]
 389:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 390:Generated_Source\PSoC4/cy_em_eeprom.c ****     void * tmpData;
 391:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 745              		.loc 1 391 0
 746 0026 BB68     		ldr	r3, [r7, #8]
 747 0028 9E22     		movs	r2, #158
 748 002a 5200     		lsls	r2, r2, #1
 749 002c BA18     		adds	r2, r7, r2
 750 002e 1360     		str	r3, [r2]
 392:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 393:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check if the EEPROM data does not exceed the EEPROM capacity */
 394:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 751              		.loc 1 394 0
 752 0030 7B68     		ldr	r3, [r7, #4]
 753 0032 002B     		cmp	r3, #0
 754 0034 00D1     		bne	.LCB623
 755 0036 C4E1     		b	.L39	@long jump
 756              	.LCB623:
 757              		.loc 1 394 0 is_stmt 0 discriminator 1
 758 0038 FA68     		ldr	r2, [r7, #12]
 759 003a 7B68     		ldr	r3, [r7, #4]
 760 003c D218     		adds	r2, r2, r3
 761 003e 3B68     		ldr	r3, [r7]
 762 0040 DB68     		ldr	r3, [r3, #12]
 763 0042 9A42     		cmp	r2, r3
 764 0044 00D9     		bls	.LCB630
 765 0046 BCE1     		b	.L39	@long jump
 766              	.LCB630:
 767              		.loc 1 394 0 discriminator 2
 768 0048 BB68     		ldr	r3, [r7, #8]
 769 004a 002B     		cmp	r3, #0
 770 004c 00D1     		bne	.LCB633
 771 004e B8E1     		b	.L39	@long jump
 772              	.LCB633:
 773              	.LBB6:
 395:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 396:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numWrites = ((size - 1u) / CY_EM_EEPROM_HEADER_DATA_LEN) + 1u;
 774              		.loc 1 396 0 is_stmt 1
 775 0050 7B68     		ldr	r3, [r7, #4]
 776 0052 013B     		subs	r3, r3, #1
 777 0054 7021     		movs	r1, #112
 778 0056 1800     		movs	r0, r3
 779 0058 FFF7FEFF 		bl	__aeabi_uidiv
 780 005c 0300     		movs	r3, r0
 781 005e 0133     		adds	r3, r3, #1
 782 0060 9A22     		movs	r2, #154
 783 0062 5200     		lsls	r2, r2, #1
 784 0064 BA18     		adds	r2, r7, r2
 785 0066 1360     		str	r3, [r2]
 397:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 eeHeaderDataOffset = 0u;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 22


 786              		.loc 1 397 0
 787 0068 0023     		movs	r3, #0
 788 006a 3B61     		str	r3, [r7, #16]
 398:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 399:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(wrCnt = 0u; wrCnt < numWrites; wrCnt++)
 789              		.loc 1 399 0
 790 006c 0023     		movs	r3, #0
 791 006e A222     		movs	r2, #162
 792 0070 5200     		lsls	r2, r2, #1
 793 0072 BA18     		adds	r2, r7, r2
 794 0074 1360     		str	r3, [r2]
 795 0076 97E1     		b	.L40
 796              	.L58:
 797              	.LBB7:
 400:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 401:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 skipOperation = 0u;
 798              		.loc 1 401 0
 799 0078 0023     		movs	r3, #0
 800 007a 9C22     		movs	r2, #156
 801 007c 5200     		lsls	r2, r2, #1
 802 007e BA18     		adds	r2, r7, r2
 803 0080 1360     		str	r3, [r2]
 402:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the sequence number of the last written row */
 403:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 seqNum = CY_GET_REG32(emEepromRowAddr);
 804              		.loc 1 403 0
 805 0082 BB69     		ldr	r3, [r7, #24]
 806 0084 1B68     		ldr	r3, [r3]
 807 0086 9822     		movs	r2, #152
 808 0088 5200     		lsls	r2, r2, #1
 809 008a BA18     		adds	r2, r7, r2
 810 008c 1360     		str	r3, [r2]
 404:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 405:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the row to be written. The "emEepromRowAddr" may be
 406:Generated_Source\PSoC4/cy_em_eeprom.c ****             * updated with the proper address (if wear leveling is used). The
 407:Generated_Source\PSoC4/cy_em_eeprom.c ****             * "emEepromRowRdAddr" will point to the row address from which the historic
 408:Generated_Source\PSoC4/cy_em_eeprom.c ****             * data will be read into the RAM buffer.
 409:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 410:Generated_Source\PSoC4/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 811              		.loc 1 410 0
 812 008e 3B68     		ldr	r3, [r7]
 813 0090 1422     		movs	r2, #20
 814 0092 BA18     		adds	r2, r7, r2
 815 0094 1821     		movs	r1, #24
 816 0096 7918     		adds	r1, r7, r1
 817 0098 9820     		movs	r0, #152
 818 009a 4000     		lsls	r0, r0, #1
 819 009c 3818     		adds	r0, r7, r0
 820 009e 0068     		ldr	r0, [r0]
 821 00a0 FFF7FEFF 		bl	GetNextRowToWrite
 411:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 412:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Clear the RAM buffer so to not put junk into flash */
 413:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memset(writeRamBuffer, 0, CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 822              		.loc 1 413 0
 823 00a4 8023     		movs	r3, #128
 824 00a6 5A00     		lsls	r2, r3, #1
 825 00a8 2423     		movs	r3, #36
 826 00aa FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 23


 827 00ac 0021     		movs	r1, #0
 828 00ae 1800     		movs	r0, r3
 829 00b0 FFF7FEFF 		bl	memset
 414:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 415:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Fill the EM_EEPROM header info for the row in the RAM buffer */
 416:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum++;
 830              		.loc 1 416 0
 831 00b4 9823     		movs	r3, #152
 832 00b6 5B00     		lsls	r3, r3, #1
 833 00b8 FB18     		adds	r3, r7, r3
 834 00ba 1B68     		ldr	r3, [r3]
 835 00bc 0133     		adds	r3, r3, #1
 836 00be 9822     		movs	r2, #152
 837 00c0 5200     		lsls	r2, r2, #1
 838 00c2 BA18     		adds	r2, r7, r2
 839 00c4 1360     		str	r3, [r2]
 417:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = seqNum;
 840              		.loc 1 417 0
 841 00c6 C34B     		ldr	r3, .L61
 842 00c8 A822     		movs	r2, #168
 843 00ca 5200     		lsls	r2, r2, #1
 844 00cc 9446     		mov	ip, r2
 845 00ce BC44     		add	ip, ip, r7
 846 00d0 6344     		add	r3, r3, ip
 847 00d2 9822     		movs	r2, #152
 848 00d4 5200     		lsls	r2, r2, #1
 849 00d6 BA18     		adds	r2, r7, r2
 850 00d8 1268     		ldr	r2, [r2]
 851 00da 1A60     		str	r2, [r3]
 418:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[1u] = addr;
 852              		.loc 1 418 0
 853 00dc BD4B     		ldr	r3, .L61
 854 00de A822     		movs	r2, #168
 855 00e0 5200     		lsls	r2, r2, #1
 856 00e2 9446     		mov	ip, r2
 857 00e4 BC44     		add	ip, ip, r7
 858 00e6 6344     		add	r3, r3, ip
 859 00e8 FA68     		ldr	r2, [r7, #12]
 860 00ea 5A60     		str	r2, [r3, #4]
 419:Generated_Source\PSoC4/cy_em_eeprom.c ****             tmpData = (void *) eeData;
 861              		.loc 1 419 0
 862 00ec 9E23     		movs	r3, #158
 863 00ee 5B00     		lsls	r3, r3, #1
 864 00f0 FB18     		adds	r3, r7, r3
 865 00f2 1B68     		ldr	r3, [r3]
 866 00f4 9622     		movs	r2, #150
 867 00f6 5200     		lsls	r2, r2, #1
 868 00f8 BA18     		adds	r2, r7, r2
 869 00fa 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 421:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if this is the last row to write */
 422:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(wrCnt == (numWrites - 1u))
 870              		.loc 1 422 0
 871 00fc 9A23     		movs	r3, #154
 872 00fe 5B00     		lsls	r3, r3, #1
 873 0100 FB18     		adds	r3, r7, r3
 874 0102 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 24


 875 0104 5A1E     		subs	r2, r3, #1
 876 0106 A223     		movs	r3, #162
 877 0108 5B00     		lsls	r3, r3, #1
 878 010a FB18     		adds	r3, r7, r3
 879 010c 1B68     		ldr	r3, [r3]
 880 010e 9A42     		cmp	r2, r3
 881 0110 08D1     		bne	.L41
 423:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 424:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Fill in the remaining size value to the EEPROM header. */
 425:Generated_Source\PSoC4/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = size;
 882              		.loc 1 425 0
 883 0112 B04B     		ldr	r3, .L61
 884 0114 A822     		movs	r2, #168
 885 0116 5200     		lsls	r2, r2, #1
 886 0118 9446     		mov	ip, r2
 887 011a BC44     		add	ip, ip, r7
 888 011c 6344     		add	r3, r3, ip
 889 011e 7A68     		ldr	r2, [r7, #4]
 890 0120 9A60     		str	r2, [r3, #8]
 891 0122 16E0     		b	.L42
 892              	.L41:
 426:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 427:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 428:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 429:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* This is not the last row to write in the current EEPROM write operation.
 430:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * Write the maximum possible data size to the EEPROM header. Update the
 431:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * size, eeData and addr respectively.
 432:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 433:Generated_Source\PSoC4/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = CY_EM_EEPROM_HEADER_DATA_LEN;
 893              		.loc 1 433 0
 894 0124 AB4B     		ldr	r3, .L61
 895 0126 A822     		movs	r2, #168
 896 0128 5200     		lsls	r2, r2, #1
 897 012a 9446     		mov	ip, r2
 898 012c BC44     		add	ip, ip, r7
 899 012e 6344     		add	r3, r3, ip
 900 0130 7022     		movs	r2, #112
 901 0132 9A60     		str	r2, [r3, #8]
 434:Generated_Source\PSoC4/cy_em_eeprom.c ****                 size -= CY_EM_EEPROM_HEADER_DATA_LEN;
 902              		.loc 1 434 0
 903 0134 7B68     		ldr	r3, [r7, #4]
 904 0136 703B     		subs	r3, r3, #112
 905 0138 7B60     		str	r3, [r7, #4]
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****                 addr += CY_EM_EEPROM_HEADER_DATA_LEN;
 906              		.loc 1 435 0
 907 013a FB68     		ldr	r3, [r7, #12]
 908 013c 7033     		adds	r3, r3, #112
 909 013e FB60     		str	r3, [r7, #12]
 436:Generated_Source\PSoC4/cy_em_eeprom.c ****                 eeData += CY_EM_EEPROM_HEADER_DATA_LEN;
 910              		.loc 1 436 0
 911 0140 9E23     		movs	r3, #158
 912 0142 5B00     		lsls	r3, r3, #1
 913 0144 FB18     		adds	r3, r7, r3
 914 0146 1B68     		ldr	r3, [r3]
 915 0148 7033     		adds	r3, r3, #112
 916 014a 9E22     		movs	r2, #158
 917 014c 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 25


 918 014e BA18     		adds	r2, r7, r2
 919 0150 1360     		str	r3, [r2]
 920              	.L42:
 437:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 438:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 439:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the data to the EEPROM header */
 440:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_HEADER_DATA_OFFSET_U32],
 441:Generated_Source\PSoC4/cy_em_eeprom.c ****                          tmpData,
 442:Generated_Source\PSoC4/cy_em_eeprom.c ****                          writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32]);
 921              		.loc 1 442 0
 922 0152 A04B     		ldr	r3, .L61
 923 0154 A822     		movs	r2, #168
 924 0156 5200     		lsls	r2, r2, #1
 925 0158 9446     		mov	ip, r2
 926 015a BC44     		add	ip, ip, r7
 927 015c 6344     		add	r3, r3, ip
 928 015e 9A68     		ldr	r2, [r3, #8]
 440:Generated_Source\PSoC4/cy_em_eeprom.c ****                          tmpData,
 929              		.loc 1 440 0
 930 0160 9623     		movs	r3, #150
 931 0162 5B00     		lsls	r3, r3, #1
 932 0164 FB18     		adds	r3, r7, r3
 933 0166 1968     		ldr	r1, [r3]
 934 0168 2423     		movs	r3, #36
 935 016a FB18     		adds	r3, r7, r3
 936 016c 0C33     		adds	r3, r3, #12
 937 016e 1800     		movs	r0, r3
 938 0170 FFF7FEFF 		bl	memcpy
 443:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 444:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(emEepromRowRdAddr != 0UL)
 939              		.loc 1 444 0
 940 0174 7B69     		ldr	r3, [r7, #20]
 941 0176 002B     		cmp	r3, #0
 942 0178 09D0     		beq	.L43
 445:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 446:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Copy the EEPROM historic data for this row from flash to RAM */
 447:Generated_Source\PSoC4/cy_em_eeprom.c ****                 (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 448:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 943              		.loc 1 448 0
 944 017a 7B69     		ldr	r3, [r7, #20]
 945 017c 8033     		adds	r3, r3, #128
 447:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 946              		.loc 1 447 0
 947 017e 1900     		movs	r1, r3
 948 0180 2423     		movs	r3, #36
 949 0182 FB18     		adds	r3, r7, r3
 950 0184 8033     		adds	r3, r3, #128
 951 0186 8022     		movs	r2, #128
 952 0188 1800     		movs	r0, r3
 953 018a FFF7FEFF 		bl	memcpy
 954              	.L43:
 449:Generated_Source\PSoC4/cy_em_eeprom.c ****                              CY_EM_EEPROM_EEPROM_DATA_LEN);
 450:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 451:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 452:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if there is data for this location in other EEPROM headers:
 453:Generated_Source\PSoC4/cy_em_eeprom.c ****             * find out the row with the lowest possible sequence number which
 454:Generated_Source\PSoC4/cy_em_eeprom.c ****             * may contain the data for the current row.
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 26


 455:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 456:Generated_Source\PSoC4/cy_em_eeprom.c ****             i = (seqNum > context->numberOfRows) ? ((seqNum - (context->numberOfRows)) + 1u) : 1u;
 955              		.loc 1 456 0
 956 018e 3B68     		ldr	r3, [r7]
 957 0190 5A68     		ldr	r2, [r3, #4]
 958 0192 9823     		movs	r3, #152
 959 0194 5B00     		lsls	r3, r3, #1
 960 0196 FB18     		adds	r3, r7, r3
 961 0198 1B68     		ldr	r3, [r3]
 962 019a 9A42     		cmp	r2, r3
 963 019c 08D2     		bcs	.L44
 964              		.loc 1 456 0 is_stmt 0 discriminator 1
 965 019e 3B68     		ldr	r3, [r7]
 966 01a0 5B68     		ldr	r3, [r3, #4]
 967 01a2 9822     		movs	r2, #152
 968 01a4 5200     		lsls	r2, r2, #1
 969 01a6 BA18     		adds	r2, r7, r2
 970 01a8 1268     		ldr	r2, [r2]
 971 01aa D31A     		subs	r3, r2, r3
 972 01ac 0133     		adds	r3, r3, #1
 973 01ae 00E0     		b	.L45
 974              	.L44:
 975              		.loc 1 456 0 discriminator 2
 976 01b0 0123     		movs	r3, #1
 977              	.L45:
 978              		.loc 1 456 0 discriminator 4
 979 01b2 A422     		movs	r2, #164
 980 01b4 5200     		lsls	r2, r2, #1
 981 01b6 BA18     		adds	r2, r7, r2
 982 01b8 1360     		str	r3, [r2]
 457:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 458:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(; i <= seqNum; i++)
 983              		.loc 1 458 0 is_stmt 1 discriminator 4
 984 01ba A3E0     		b	.L46
 985              	.L53:
 459:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 460:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(i == seqNum)
 986              		.loc 1 460 0
 987 01bc A423     		movs	r3, #164
 988 01be 5B00     		lsls	r3, r3, #1
 989 01c0 FB18     		adds	r3, r7, r3
 990 01c2 1A68     		ldr	r2, [r3]
 991 01c4 9823     		movs	r3, #152
 992 01c6 5B00     		lsls	r3, r3, #1
 993 01c8 FB18     		adds	r3, r7, r3
 994 01ca 1B68     		ldr	r3, [r3]
 995 01cc 9A42     		cmp	r2, r3
 996 01ce 06D1     		bne	.L47
 461:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 462:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* The code reached the row that is about to be written. Analyze the recently
 463:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * created EEPROM header (stored in the RAM buffer currently): if it contains
 464:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the data for EEPROM data locations in the row that is about to be written.
 465:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 466:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = (uint32) writeRamBuffer;
 997              		.loc 1 466 0
 998 01d0 2423     		movs	r3, #36
 999 01d2 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 27


 1000 01d4 A022     		movs	r2, #160
 1001 01d6 5200     		lsls	r2, r2, #1
 1002 01d8 BA18     		adds	r2, r7, r2
 1003 01da 1360     		str	r3, [r2]
 1004 01dc 0DE0     		b	.L48
 1005              	.L47:
 467:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 468:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 469:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 470:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Retrieve the address of the previously written row by its sequence number.
 471:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * The pointer will be used to get data from the respective EEPROM header.
 472:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 473:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = GetRowAddrBySeqNum(i, context);
 1006              		.loc 1 473 0
 1007 01de 3A68     		ldr	r2, [r7]
 1008 01e0 A423     		movs	r3, #164
 1009 01e2 5B00     		lsls	r3, r3, #1
 1010 01e4 FB18     		adds	r3, r7, r3
 1011 01e6 1B68     		ldr	r3, [r3]
 1012 01e8 1100     		movs	r1, r2
 1013 01ea 1800     		movs	r0, r3
 1014 01ec FFF7FEFF 		bl	GetRowAddrBySeqNum
 1015 01f0 0300     		movs	r3, r0
 1016 01f2 A022     		movs	r2, #160
 1017 01f4 5200     		lsls	r2, r2, #1
 1018 01f6 BA18     		adds	r2, r7, r2
 1019 01f8 1360     		str	r3, [r2]
 1020              	.L48:
 474:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 475:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 476:Generated_Source\PSoC4/cy_em_eeprom.c ****                 actEmEepromRowNum = CY_EM_EEPROM_GET_ACT_ROW_NUM_FROM_ADDR(emEepromRowAddr,
 1021              		.loc 1 476 0
 1022 01fa BA69     		ldr	r2, [r7, #24]
 1023 01fc 3B68     		ldr	r3, [r7]
 1024 01fe 9B69     		ldr	r3, [r3, #24]
 1025 0200 D31A     		subs	r3, r2, r3
 1026 0202 1A0A     		lsrs	r2, r3, #8
 1027 0204 3B68     		ldr	r3, [r7]
 1028 0206 5B68     		ldr	r3, [r3, #4]
 1029 0208 1900     		movs	r1, r3
 1030 020a 1000     		movs	r0, r2
 1031 020c FFF7FEFF 		bl	__aeabi_uidivmod
 1032 0210 0B00     		movs	r3, r1
 1033 0212 9422     		movs	r2, #148
 1034 0214 5200     		lsls	r2, r2, #1
 1035 0216 BA18     		adds	r2, r7, r2
 1036 0218 1360     		str	r3, [r2]
 477:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                                            context->numberOfRows,
 478:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                                            context->userFlashStartA
 479:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0UL != tmpRowAddr)
 1037              		.loc 1 479 0
 1038 021a A023     		movs	r3, #160
 1039 021c 5B00     		lsls	r3, r3, #1
 1040 021e FB18     		adds	r3, r7, r3
 1041 0220 1B68     		ldr	r3, [r3]
 1042 0222 002B     		cmp	r3, #0
 1043 0224 21D0     		beq	.L49
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 28


 480:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 481:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Calculate the required addressed for the later EEPROM historic data update *
 482:Generated_Source\PSoC4/cy_em_eeprom.c ****                     skipOperation = GetAddresses(
 483:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 484:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &endAddr,
 485:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &eeHeaderDataOffset,
 486:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               actEmEepromRowNum,
 487:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFF
 1044              		.loc 1 487 0
 1045 0226 A023     		movs	r3, #160
 1046 0228 5B00     		lsls	r3, r3, #1
 1047 022a FB18     		adds	r3, r7, r3
 1048 022c 1B68     		ldr	r3, [r3]
 1049 022e 0433     		adds	r3, r3, #4
 482:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 1050              		.loc 1 482 0
 1051 0230 1A68     		ldr	r2, [r3]
 488:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_LEN_OFFS
 1052              		.loc 1 488 0
 1053 0232 A023     		movs	r3, #160
 1054 0234 5B00     		lsls	r3, r3, #1
 1055 0236 FB18     		adds	r3, r7, r3
 1056 0238 1B68     		ldr	r3, [r3]
 1057 023a 0833     		adds	r3, r3, #8
 482:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 1058              		.loc 1 482 0
 1059 023c 1B68     		ldr	r3, [r3]
 1060 023e 9421     		movs	r1, #148
 1061 0240 4900     		lsls	r1, r1, #1
 1062 0242 7918     		adds	r1, r7, r1
 1063 0244 0D68     		ldr	r5, [r1]
 1064 0246 1021     		movs	r1, #16
 1065 0248 7C18     		adds	r4, r7, r1
 1066 024a 1C21     		movs	r1, #28
 1067 024c 7918     		adds	r1, r7, r1
 1068 024e 2020     		movs	r0, #32
 1069 0250 3818     		adds	r0, r7, r0
 1070 0252 0193     		str	r3, [sp, #4]
 1071 0254 0092     		str	r2, [sp]
 1072 0256 2B00     		movs	r3, r5
 1073 0258 2200     		movs	r2, r4
 1074 025a FFF7FEFF 		bl	GetAddresses
 1075 025e 0300     		movs	r3, r0
 1076 0260 9C22     		movs	r2, #156
 1077 0262 5200     		lsls	r2, r2, #1
 1078 0264 BA18     		adds	r2, r7, r2
 1079 0266 1360     		str	r3, [r2]
 1080 0268 08E0     		b	.L50
 1081              	.L49:
 489:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 490:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 491:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 492:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Skip writes to the RAM buffer */
 493:Generated_Source\PSoC4/cy_em_eeprom.c ****                     skipOperation++;
 1082              		.loc 1 493 0
 1083 026a 9C23     		movs	r3, #156
 1084 026c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 29


 1085 026e FB18     		adds	r3, r7, r3
 1086 0270 1B68     		ldr	r3, [r3]
 1087 0272 0133     		adds	r3, r3, #1
 1088 0274 9C22     		movs	r2, #156
 1089 0276 5200     		lsls	r2, r2, #1
 1090 0278 BA18     		adds	r2, r7, r2
 1091 027a 1360     		str	r3, [r2]
 1092              	.L50:
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 495:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 496:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Write data to the RAM buffer */
 497:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u == skipOperation)
 1093              		.loc 1 497 0
 1094 027c 9C23     		movs	r3, #156
 1095 027e 5B00     		lsls	r3, r3, #1
 1096 0280 FB18     		adds	r3, r7, r3
 1097 0282 1B68     		ldr	r3, [r3]
 1098 0284 002B     		cmp	r3, #0
 1099 0286 20D1     		bne	.L51
 1100              	.LBB8:
 498:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 499:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 dataAddr = ((uint32)((uint8 *)&writeRamBuffer)) + startAddr;
 1101              		.loc 1 499 0
 1102 0288 2423     		movs	r3, #36
 1103 028a FA18     		adds	r2, r7, r3
 1104 028c 3B6A     		ldr	r3, [r7, #32]
 1105 028e D318     		adds	r3, r2, r3
 1106 0290 9222     		movs	r2, #146
 1107 0292 5200     		lsls	r2, r2, #1
 1108 0294 BA18     		adds	r2, r7, r2
 1109 0296 1360     		str	r3, [r2]
 500:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 501:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Update the address to point to the EEPROM header data and not to
 502:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the start of the row.
 503:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 504:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = tmpRowAddr + CY_EM_EEPROM_HEADER_DATA_OFFSET + eeHeaderDataOffset;
 1110              		.loc 1 504 0
 1111 0298 3A69     		ldr	r2, [r7, #16]
 1112 029a A023     		movs	r3, #160
 1113 029c 5B00     		lsls	r3, r3, #1
 1114 029e FB18     		adds	r3, r7, r3
 1115 02a0 1B68     		ldr	r3, [r3]
 1116 02a2 D318     		adds	r3, r2, r3
 1117 02a4 0C33     		adds	r3, r3, #12
 1118 02a6 A022     		movs	r2, #160
 1119 02a8 5200     		lsls	r2, r2, #1
 1120 02aa BA18     		adds	r2, r7, r2
 1121 02ac 1360     		str	r3, [r2]
 505:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (void)memcpy((void *)(dataAddr), (void *)(tmpRowAddr), endAddr - startAddr);
 1122              		.loc 1 505 0
 1123 02ae 9223     		movs	r3, #146
 1124 02b0 5B00     		lsls	r3, r3, #1
 1125 02b2 FB18     		adds	r3, r7, r3
 1126 02b4 1868     		ldr	r0, [r3]
 1127 02b6 A023     		movs	r3, #160
 1128 02b8 5B00     		lsls	r3, r3, #1
 1129 02ba FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 30


 1130 02bc 1968     		ldr	r1, [r3]
 1131 02be FA69     		ldr	r2, [r7, #28]
 1132 02c0 3B6A     		ldr	r3, [r7, #32]
 1133 02c2 D31A     		subs	r3, r2, r3
 1134 02c4 1A00     		movs	r2, r3
 1135 02c6 FFF7FEFF 		bl	memcpy
 1136              	.L51:
 1137              	.LBE8:
 506:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 507:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 508:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Calculate the checksum if redundant copy is enabled */
 509:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u != context->redundantCopy)
 1138              		.loc 1 509 0
 1139 02ca 3B68     		ldr	r3, [r7]
 1140 02cc 1B7D     		ldrb	r3, [r3, #20]
 1141 02ce 002B     		cmp	r3, #0
 1142 02d0 0FD0     		beq	.L52
 510:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 511:Generated_Source\PSoC4/cy_em_eeprom.c ****                     writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 512:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1143              		.loc 1 512 0
 1144 02d2 2423     		movs	r3, #36
 1145 02d4 FB18     		adds	r3, r7, r3
 1146 02d6 8033     		adds	r3, r3, #128
 1147 02d8 8021     		movs	r1, #128
 1148 02da 1800     		movs	r0, r3
 1149 02dc FFF7FEFF 		bl	CalcChecksum
 1150 02e0 0300     		movs	r3, r0
 511:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1151              		.loc 1 511 0
 1152 02e2 1A00     		movs	r2, r3
 1153 02e4 3B4B     		ldr	r3, .L61
 1154 02e6 A821     		movs	r1, #168
 1155 02e8 4900     		lsls	r1, r1, #1
 1156 02ea 8C46     		mov	ip, r1
 1157 02ec BC44     		add	ip, ip, r7
 1158 02ee 6344     		add	r3, r3, ip
 1159 02f0 DA67     		str	r2, [r3, #124]
 1160              	.L52:
 458:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 1161              		.loc 1 458 0
 1162 02f2 A423     		movs	r3, #164
 1163 02f4 5B00     		lsls	r3, r3, #1
 1164 02f6 FB18     		adds	r3, r7, r3
 1165 02f8 1B68     		ldr	r3, [r3]
 1166 02fa 0133     		adds	r3, r3, #1
 1167 02fc A422     		movs	r2, #164
 1168 02fe 5200     		lsls	r2, r2, #1
 1169 0300 BA18     		adds	r2, r7, r2
 1170 0302 1360     		str	r3, [r2]
 1171              	.L46:
 458:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 1172              		.loc 1 458 0 is_stmt 0 discriminator 1
 1173 0304 A423     		movs	r3, #164
 1174 0306 5B00     		lsls	r3, r3, #1
 1175 0308 FB18     		adds	r3, r7, r3
 1176 030a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 31


 1177 030c 9823     		movs	r3, #152
 1178 030e 5B00     		lsls	r3, r3, #1
 1179 0310 FB18     		adds	r3, r7, r3
 1180 0312 1B68     		ldr	r3, [r3]
 1181 0314 9A42     		cmp	r2, r3
 1182 0316 00D8     		bhi	.LCB1017
 1183 0318 50E7     		b	.L53	@long jump
 1184              	.LCB1017:
 513:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 514:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 515:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 516:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 517:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the data to the specified flash row */
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = WriteRow(emEepromRowAddr, writeRamBuffer, context);
 1185              		.loc 1 518 0 is_stmt 1
 1186 031a BB69     		ldr	r3, [r7, #24]
 1187 031c 5022     		movs	r2, #80
 1188 031e FF32     		adds	r2, r2, #255
 1189 0320 BC18     		adds	r4, r7, r2
 1190 0322 3A68     		ldr	r2, [r7]
 1191 0324 2421     		movs	r1, #36
 1192 0326 7918     		adds	r1, r7, r1
 1193 0328 1800     		movs	r0, r3
 1194 032a FFF7FEFF 		bl	WriteRow
 1195 032e 0300     		movs	r3, r0
 1196 0330 2370     		strb	r3, [r4]
 519:Generated_Source\PSoC4/cy_em_eeprom.c ****             tmpRowAddr = emEepromRowAddr;
 1197              		.loc 1 519 0
 1198 0332 BB69     		ldr	r3, [r7, #24]
 1199 0334 A022     		movs	r2, #160
 1200 0336 5200     		lsls	r2, r2, #1
 1201 0338 BA18     		adds	r2, r7, r2
 1202 033a 1360     		str	r3, [r2]
 520:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 521:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if redundant copy is used */
 522:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u != context->redundantCopy) && (CY_EM_EEPROM_SUCCESS == ret))
 1203              		.loc 1 522 0
 1204 033c 3B68     		ldr	r3, [r7]
 1205 033e 1B7D     		ldrb	r3, [r3, #20]
 1206 0340 002B     		cmp	r3, #0
 1207 0342 1FD0     		beq	.L54
 1208              		.loc 1 522 0 is_stmt 0 discriminator 1
 1209 0344 5023     		movs	r3, #80
 1210 0346 FF33     		adds	r3, r3, #255
 1211 0348 FB18     		adds	r3, r7, r3
 1212 034a 1B78     		ldrb	r3, [r3]
 1213 034c 002B     		cmp	r3, #0
 1214 034e 19D1     		bne	.L54
 523:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 524:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Update the row address to point to the row in the redundant EEPROM's copy */
 525:Generated_Source\PSoC4/cy_em_eeprom.c ****                 tmpRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 1215              		.loc 1 525 0 is_stmt 1
 1216 0350 BA69     		ldr	r2, [r7, #24]
 1217 0352 3B68     		ldr	r3, [r7]
 1218 0354 9B69     		ldr	r3, [r3, #24]
 1219 0356 D21A     		subs	r2, r2, r3
 1220 0358 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 32


 1221 035a 1B68     		ldr	r3, [r3]
 1222 035c D318     		adds	r3, r2, r3
 1223 035e A022     		movs	r2, #160
 1224 0360 5200     		lsls	r2, r2, #1
 1225 0362 BA18     		adds	r2, r7, r2
 1226 0364 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 527:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Write the data to the specified flash row */
 528:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 1227              		.loc 1 528 0
 1228 0366 5023     		movs	r3, #80
 1229 0368 FF33     		adds	r3, r3, #255
 1230 036a FC18     		adds	r4, r7, r3
 1231 036c 3A68     		ldr	r2, [r7]
 1232 036e 2423     		movs	r3, #36
 1233 0370 F918     		adds	r1, r7, r3
 1234 0372 A023     		movs	r3, #160
 1235 0374 5B00     		lsls	r3, r3, #1
 1236 0376 FB18     		adds	r3, r7, r3
 1237 0378 1B68     		ldr	r3, [r3]
 1238 037a 1800     		movs	r0, r3
 1239 037c FFF7FEFF 		bl	WriteRow
 1240 0380 0300     		movs	r3, r0
 1241 0382 2370     		strb	r3, [r4]
 1242              	.L54:
 529:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 530:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 531:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 1243              		.loc 1 531 0
 1244 0384 5023     		movs	r3, #80
 1245 0386 FF33     		adds	r3, r3, #255
 1246 0388 FB18     		adds	r3, r7, r3
 1247 038a 1B78     		ldrb	r3, [r3]
 1248 038c 002B     		cmp	r3, #0
 1249 038e 17D1     		bne	.L60
 532:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 533:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Store last written row address only when EEPROM and redundant
 534:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * copy writes were successful.
 535:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 536:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromRowAddr;
 1250              		.loc 1 536 0
 1251 0390 BA69     		ldr	r2, [r7, #24]
 1252 0392 3B68     		ldr	r3, [r7]
 1253 0394 9A60     		str	r2, [r3, #8]
 1254              	.LBE7:
 399:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1255              		.loc 1 399 0
 1256 0396 A223     		movs	r3, #162
 1257 0398 5B00     		lsls	r3, r3, #1
 1258 039a FB18     		adds	r3, r7, r3
 1259 039c 1B68     		ldr	r3, [r3]
 1260 039e 0133     		adds	r3, r3, #1
 1261 03a0 A222     		movs	r2, #162
 1262 03a2 5200     		lsls	r2, r2, #1
 1263 03a4 BA18     		adds	r2, r7, r2
 1264 03a6 1360     		str	r3, [r2]
 1265              	.L40:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 33


 399:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1266              		.loc 1 399 0 is_stmt 0 discriminator 1
 1267 03a8 A223     		movs	r3, #162
 1268 03aa 5B00     		lsls	r3, r3, #1
 1269 03ac FB18     		adds	r3, r7, r3
 1270 03ae 1A68     		ldr	r2, [r3]
 1271 03b0 9A23     		movs	r3, #154
 1272 03b2 5B00     		lsls	r3, r3, #1
 1273 03b4 FB18     		adds	r3, r7, r3
 1274 03b6 1B68     		ldr	r3, [r3]
 1275 03b8 9A42     		cmp	r2, r3
 1276 03ba 00D2     		bcs	.LCB1101
 1277 03bc 5CE6     		b	.L58	@long jump
 1278              	.LCB1101:
 1279 03be 00E0     		b	.L39
 1280              	.L60:
 1281              	.LBB9:
 537:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 538:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 539:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 540:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 1282              		.loc 1 540 0 is_stmt 1
 1283 03c0 C046     		nop
 1284              	.L39:
 1285              	.LBE9:
 1286              	.LBE6:
 541:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 542:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 543:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 544:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 1287              		.loc 1 544 0
 1288 03c2 5023     		movs	r3, #80
 1289 03c4 FF33     		adds	r3, r3, #255
 1290 03c6 FB18     		adds	r3, r7, r3
 1291 03c8 1B78     		ldrb	r3, [r3]
 545:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1292              		.loc 1 545 0
 1293 03ca 1800     		movs	r0, r3
 1294 03cc BD46     		mov	sp, r7
 1295 03ce 54B0     		add	sp, sp, #336
 1296              		@ sp needed
 1297 03d0 B0BD     		pop	{r4, r5, r7, pc}
 1298              	.L62:
 1299 03d2 C046     		.align	2
 1300              	.L61:
 1301 03d4 D4FEFFFF 		.word	-300
 1302              		.cfi_endproc
 1303              	.LFE4:
 1304              		.size	Cy_Em_EEPROM_Write, .-Cy_Em_EEPROM_Write
 1305              		.section	.text.Cy_Em_EEPROM_Erase,"ax",%progbits
 1306              		.align	2
 1307              		.global	Cy_Em_EEPROM_Erase
 1308              		.code	16
 1309              		.thumb_func
 1310              		.type	Cy_Em_EEPROM_Erase, %function
 1311              	Cy_Em_EEPROM_Erase:
 1312              	.LFB5:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 34


 546:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 547:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 548:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 549:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Erase
 550:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 551:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 552:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function erases the entire contents of the EEPROM. Erased values are all
 553:Generated_Source\PSoC4/cy_em_eeprom.c **** * zeros. This is a blocking function and it does not return until the write
 554:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation is completed. The user firmware should not enter Hibernate mode until
 555:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase is completed. The erase operation is allowed in Sleep and Deep-Sleep modes.
 556:Generated_Source\PSoC4/cy_em_eeprom.c **** * During the flash operation, the device should not be reset, including the
 557:Generated_Source\PSoC4/cy_em_eeprom.c **** * XRES pin, a software reset, and watchdog reset sources. Also, low-voltage
 558:Generated_Source\PSoC4/cy_em_eeprom.c **** * detect circuits should be configured to generate an interrupt instead of a
 559:Generated_Source\PSoC4/cy_em_eeprom.c **** * reset. Otherwise, portions of flash may undergo unexpected changes.
 560:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 561:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 562:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 563:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 564:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 565:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 566:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 567:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 568:Generated_Source\PSoC4/cy_em_eeprom.c **** * For all non PSoC 6 devices the erase operation is performed by clearing
 569:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM data using flash write. This affects the flash durability.
 570:Generated_Source\PSoC4/cy_em_eeprom.c **** * So it is recommended to use this function in utmost case to prolongate
 571:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash life.
 572:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 573:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform erase
 574:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 575:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 576:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 577:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 578:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 579:Generated_Source\PSoC4/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 580:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 581:Generated_Source\PSoC4/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 582:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 583:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 584:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 585:Generated_Source\PSoC4/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 586:Generated_Source\PSoC4/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 587:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM erase is not completed.
 588:Generated_Source\PSoC4/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 589:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 590:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 591:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Erase(cy_stc_eeprom_context_t * context)
 592:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1313              		.loc 1 592 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 288
 1316              		@ frame_needed = 1, uses_anonymous_args = 0
 1317 0000 90B5     		push	{r4, r7, lr}
 1318              		.cfi_def_cfa_offset 12
 1319              		.cfi_offset 4, -12
 1320              		.cfi_offset 7, -8
 1321              		.cfi_offset 14, -4
 1322 0002 C9B0     		sub	sp, sp, #292
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 35


 1323              		.cfi_def_cfa_offset 304
 1324 0004 00AF     		add	r7, sp, #0
 1325              		.cfi_def_cfa_register 7
 1326 0006 7860     		str	r0, [r7, #4]
 593:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 594:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum;
 595:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 1327              		.loc 1 595 0
 1328 0008 7B68     		ldr	r3, [r7, #4]
 1329 000a 9B68     		ldr	r3, [r3, #8]
 1330 000c 8622     		movs	r2, #134
 1331 000e 5200     		lsls	r2, r2, #1
 1332 0010 BA18     		adds	r2, r7, r2
 1333 0012 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 597:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 1334              		.loc 1 597 0
 1335 0014 1C23     		movs	r3, #28
 1336 0016 FF33     		adds	r3, r3, #255
 1337 0018 FB18     		adds	r3, r7, r3
 1338 001a 0422     		movs	r2, #4
 1339 001c 1A70     		strb	r2, [r3]
 598:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV] = {0u};
 1340              		.loc 1 598 0
 1341 001e 494B     		ldr	r3, .L69
 1342 0020 9022     		movs	r2, #144
 1343 0022 5200     		lsls	r2, r2, #1
 1344 0024 9446     		mov	ip, r2
 1345 0026 BC44     		add	ip, ip, r7
 1346 0028 6344     		add	r3, r3, ip
 1347 002a 1800     		movs	r0, r3
 1348 002c 8023     		movs	r3, #128
 1349 002e 5B00     		lsls	r3, r3, #1
 1350 0030 1A00     		movs	r2, r3
 1351 0032 0021     		movs	r1, #0
 1352 0034 FFF7FEFF 		bl	memset
 599:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CY_PSOC6)
 600:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromStoredRowAddr = context->lastWrRowAddr;
 601:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 storedSeqNum;
 602:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (!CY_PSOC6) */
 603:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 604:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Get the sequence number of the last written row */
 605:Generated_Source\PSoC4/cy_em_eeprom.c ****     seqNum = CY_GET_REG32(emEepromRowAddr);
 1353              		.loc 1 605 0
 1354 0038 8623     		movs	r3, #134
 1355 003a 5B00     		lsls	r3, r3, #1
 1356 003c FB18     		adds	r3, r7, r3
 1357 003e 1B68     		ldr	r3, [r3]
 1358 0040 1B68     		ldr	r3, [r3]
 1359 0042 8A22     		movs	r2, #138
 1360 0044 5200     		lsls	r2, r2, #1
 1361 0046 BA18     		adds	r2, r7, r2
 1362 0048 1360     		str	r3, [r2]
 606:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 607:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* If there were no writes to EEPROM - nothing to erase */
 608:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != seqNum)
 1363              		.loc 1 608 0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 36


 1364 004a 8A23     		movs	r3, #138
 1365 004c 5B00     		lsls	r3, r3, #1
 1366 004e FB18     		adds	r3, r7, r3
 1367 0050 1B68     		ldr	r3, [r3]
 1368 0052 002B     		cmp	r3, #0
 1369 0054 6ED0     		beq	.L64
 1370              	.LBB10:
 609:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 610:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate the number of row erase operations required */
 611:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numWrites = context->numberOfRows * context->wearLevelingFactor;
 1371              		.loc 1 611 0
 1372 0056 7B68     		ldr	r3, [r7, #4]
 1373 0058 5A68     		ldr	r2, [r3, #4]
 1374 005a 7B68     		ldr	r3, [r7, #4]
 1375 005c 1B69     		ldr	r3, [r3, #16]
 1376 005e 5343     		muls	r3, r2
 1377 0060 8822     		movs	r2, #136
 1378 0062 5200     		lsls	r2, r2, #1
 1379 0064 BA18     		adds	r2, r7, r2
 1380 0066 1360     		str	r3, [r2]
 612:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 613:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC6)
 614:Generated_Source\PSoC4/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &emEepromStoredRowAddr, &emEepromRowRdAddr, context);
 615:Generated_Source\PSoC4/cy_em_eeprom.c ****         storedSeqNum = seqNum + 1u;
 616:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 617:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 618:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != context->redundantCopy)
 1381              		.loc 1 618 0
 1382 0068 7B68     		ldr	r3, [r7, #4]
 1383 006a 1B7D     		ldrb	r3, [r3, #20]
 1384 006c 002B     		cmp	r3, #0
 1385 006e 0FD0     		beq	.L65
 619:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 620:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 621:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1386              		.loc 1 621 0
 1387 0070 0823     		movs	r3, #8
 1388 0072 FB18     		adds	r3, r7, r3
 1389 0074 8033     		adds	r3, r3, #128
 1390 0076 8021     		movs	r1, #128
 1391 0078 1800     		movs	r0, r3
 1392 007a FFF7FEFF 		bl	CalcChecksum
 1393 007e 0300     		movs	r3, r0
 620:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1394              		.loc 1 620 0
 1395 0080 1A00     		movs	r2, r3
 1396 0082 304B     		ldr	r3, .L69
 1397 0084 9021     		movs	r1, #144
 1398 0086 4900     		lsls	r1, r1, #1
 1399 0088 8C46     		mov	ip, r1
 1400 008a BC44     		add	ip, ip, r7
 1401 008c 6344     		add	r3, r3, ip
 1402 008e DA67     		str	r2, [r3, #124]
 1403              	.L65:
 622:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 623:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 624:Generated_Source\PSoC4/cy_em_eeprom.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 37


 625:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < numWrites; i++)
 1404              		.loc 1 625 0
 1405 0090 0023     		movs	r3, #0
 1406 0092 8E22     		movs	r2, #142
 1407 0094 5200     		lsls	r2, r2, #1
 1408 0096 BA18     		adds	r2, r7, r2
 1409 0098 1360     		str	r3, [r2]
 1410 009a 41E0     		b	.L66
 1411              	.L67:
 626:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 627:Generated_Source\PSoC4/cy_em_eeprom.c ****         #if (CY_PSOC6)
 628:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* For PSoC 6 the erase operation moves backwards. From last written row
 629:Generated_Source\PSoC4/cy_em_eeprom.c ****             * identified by "seqNum" down to "seqNum" - "numWrites". If "emEepromRowAddr"
 630:Generated_Source\PSoC4/cy_em_eeprom.c ****             * is zero this means that the row identified by "seqNum" was previously 
 631:Generated_Source\PSoC4/cy_em_eeprom.c ****             * erased.
 632:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 633:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != emEepromRowAddr)
 634:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 635:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 636:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 637:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 638:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum--;
 639:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 640:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u == seqNum)
 641:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 642:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Exit the loop as there is no more row is EEPROM to be erased */
 643:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 644:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 645:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromRowAddr = GetRowAddrBySeqNum(seqNum, context);
 646:Generated_Source\PSoC4/cy_em_eeprom.c ****         #else
 647:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum = CY_GET_REG32(emEepromRowAddr);
 1412              		.loc 1 647 0 discriminator 3
 1413 009c 8623     		movs	r3, #134
 1414 009e 5B00     		lsls	r3, r3, #1
 1415 00a0 FB18     		adds	r3, r7, r3
 1416 00a2 1B68     		ldr	r3, [r3]
 1417 00a4 1B68     		ldr	r3, [r3]
 1418 00a6 8A22     		movs	r2, #138
 1419 00a8 5200     		lsls	r2, r2, #1
 1420 00aa BA18     		adds	r2, r7, r2
 1421 00ac 1360     		str	r3, [r2]
 648:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the row to be erased. "emEepromRowAddr" may be updated
 649:Generated_Source\PSoC4/cy_em_eeprom.c ****             * with the proper address (if wear leveling is used).
 650:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 651:Generated_Source\PSoC4/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 1422              		.loc 1 651 0 discriminator 3
 1423 00ae 7B68     		ldr	r3, [r7, #4]
 1424 00b0 8422     		movs	r2, #132
 1425 00b2 5200     		lsls	r2, r2, #1
 1426 00b4 BA18     		adds	r2, r7, r2
 1427 00b6 8621     		movs	r1, #134
 1428 00b8 4900     		lsls	r1, r1, #1
 1429 00ba 7918     		adds	r1, r7, r1
 1430 00bc 8A20     		movs	r0, #138
 1431 00be 4000     		lsls	r0, r0, #1
 1432 00c0 3818     		adds	r0, r7, r0
 1433 00c2 0068     		ldr	r0, [r0]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 38


 1434 00c4 FFF7FEFF 		bl	GetNextRowToWrite
 652:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum++;
 1435              		.loc 1 652 0 discriminator 3
 1436 00c8 8A23     		movs	r3, #138
 1437 00ca 5B00     		lsls	r3, r3, #1
 1438 00cc FB18     		adds	r3, r7, r3
 1439 00ce 1B68     		ldr	r3, [r3]
 1440 00d0 0133     		adds	r3, r3, #1
 1441 00d2 8A22     		movs	r2, #138
 1442 00d4 5200     		lsls	r2, r2, #1
 1443 00d6 BA18     		adds	r2, r7, r2
 1444 00d8 1360     		str	r3, [r2]
 653:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = seqNum;
 1445              		.loc 1 653 0 discriminator 3
 1446 00da 1A4B     		ldr	r3, .L69
 1447 00dc 9022     		movs	r2, #144
 1448 00de 5200     		lsls	r2, r2, #1
 1449 00e0 9446     		mov	ip, r2
 1450 00e2 BC44     		add	ip, ip, r7
 1451 00e4 6344     		add	r3, r3, ip
 1452 00e6 8A22     		movs	r2, #138
 1453 00e8 5200     		lsls	r2, r2, #1
 1454 00ea BA18     		adds	r2, r7, r2
 1455 00ec 1268     		ldr	r2, [r2]
 1456 00ee 1A60     		str	r2, [r3]
 654:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 1457              		.loc 1 654 0 discriminator 3
 1458 00f0 8623     		movs	r3, #134
 1459 00f2 5B00     		lsls	r3, r3, #1
 1460 00f4 FB18     		adds	r3, r7, r3
 1461 00f6 1B68     		ldr	r3, [r3]
 1462 00f8 0822     		movs	r2, #8
 1463 00fa B918     		adds	r1, r7, r2
 1464 00fc 1C22     		movs	r2, #28
 1465 00fe FF32     		adds	r2, r2, #255
 1466 0100 BC18     		adds	r4, r7, r2
 1467 0102 7A68     		ldr	r2, [r7, #4]
 1468 0104 1800     		movs	r0, r3
 1469 0106 FFF7FEFF 		bl	EraseRow
 1470 010a 0300     		movs	r3, r0
 1471 010c 2370     		strb	r3, [r4]
 625:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1472              		.loc 1 625 0 discriminator 3
 1473 010e 8E23     		movs	r3, #142
 1474 0110 5B00     		lsls	r3, r3, #1
 1475 0112 FB18     		adds	r3, r7, r3
 1476 0114 1B68     		ldr	r3, [r3]
 1477 0116 0133     		adds	r3, r3, #1
 1478 0118 8E22     		movs	r2, #142
 1479 011a 5200     		lsls	r2, r2, #1
 1480 011c BA18     		adds	r2, r7, r2
 1481 011e 1360     		str	r3, [r2]
 1482              	.L66:
 625:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1483              		.loc 1 625 0 is_stmt 0 discriminator 1
 1484 0120 8E23     		movs	r3, #142
 1485 0122 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 39


 1486 0124 FB18     		adds	r3, r7, r3
 1487 0126 1A68     		ldr	r2, [r3]
 1488 0128 8823     		movs	r3, #136
 1489 012a 5B00     		lsls	r3, r3, #1
 1490 012c FB18     		adds	r3, r7, r3
 1491 012e 1B68     		ldr	r3, [r3]
 1492 0130 9A42     		cmp	r2, r3
 1493 0132 B3D3     		bcc	.L67
 1494              	.L64:
 1495              	.LBE10:
 655:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_PSOC6) */
 656:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 657:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 658:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC6)
 659:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 660:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 661:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = storedSeqNum;
 662:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the previously stored sequence number to the flash row which would be
 664:Generated_Source\PSoC4/cy_em_eeprom.c ****             * written next if the erase wouldn't happen. In this case the write to
 665:Generated_Source\PSoC4/cy_em_eeprom.c ****             * redundant copy can be skipped as it does not add any value.
 666:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 667:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = WriteRow(emEepromStoredRowAddr, writeRamBuffer, context);
 668:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 669:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 670:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 671:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromStoredRowAddr;
 672:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 673:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 674:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 675:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 676:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 677:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 1496              		.loc 1 677 0 is_stmt 1
 1497 0134 1C23     		movs	r3, #28
 1498 0136 FF33     		adds	r3, r3, #255
 1499 0138 FB18     		adds	r3, r7, r3
 1500 013a 1B78     		ldrb	r3, [r3]
 678:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1501              		.loc 1 678 0
 1502 013c 1800     		movs	r0, r3
 1503 013e BD46     		mov	sp, r7
 1504 0140 49B0     		add	sp, sp, #292
 1505              		@ sp needed
 1506 0142 90BD     		pop	{r4, r7, pc}
 1507              	.L70:
 1508              		.align	2
 1509              	.L69:
 1510 0144 E8FEFFFF 		.word	-280
 1511              		.cfi_endproc
 1512              	.LFE5:
 1513              		.size	Cy_Em_EEPROM_Erase, .-Cy_Em_EEPROM_Erase
 1514              		.section	.text.Cy_Em_EEPROM_NumWrites,"ax",%progbits
 1515              		.align	2
 1516              		.global	Cy_Em_EEPROM_NumWrites
 1517              		.code	16
 1518              		.thumb_func
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 40


 1519              		.type	Cy_Em_EEPROM_NumWrites, %function
 1520              	Cy_Em_EEPROM_NumWrites:
 1521              	.LFB6:
 679:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 680:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 681:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 682:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_NumWrites
 683:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 684:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 685:Generated_Source\PSoC4/cy_em_eeprom.c **** * Returns the number of the EEPROM writes completed so far.
 686:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 687:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 688:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 689:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 690:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 691:Generated_Source\PSoC4/cy_em_eeprom.c **** * The number of writes performed to the EEPROM.
 692:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 693:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/cy_em_eeprom.c **** uint32 Cy_Em_EEPROM_NumWrites(cy_stc_eeprom_context_t * context)
 695:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1522              		.loc 1 695 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 8
 1525              		@ frame_needed = 1, uses_anonymous_args = 0
 1526 0000 80B5     		push	{r7, lr}
 1527              		.cfi_def_cfa_offset 8
 1528              		.cfi_offset 7, -8
 1529              		.cfi_offset 14, -4
 1530 0002 82B0     		sub	sp, sp, #8
 1531              		.cfi_def_cfa_offset 16
 1532 0004 00AF     		add	r7, sp, #0
 1533              		.cfi_def_cfa_register 7
 1534 0006 7860     		str	r0, [r7, #4]
 696:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(CY_GET_REG32(context->lastWrRowAddr));
 1535              		.loc 1 696 0
 1536 0008 7B68     		ldr	r3, [r7, #4]
 1537 000a 9B68     		ldr	r3, [r3, #8]
 1538 000c 1B68     		ldr	r3, [r3]
 697:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1539              		.loc 1 697 0
 1540 000e 1800     		movs	r0, r3
 1541 0010 BD46     		mov	sp, r7
 1542 0012 02B0     		add	sp, sp, #8
 1543              		@ sp needed
 1544 0014 80BD     		pop	{r7, pc}
 1545              		.cfi_endproc
 1546              	.LFE6:
 1547              		.size	Cy_Em_EEPROM_NumWrites, .-Cy_Em_EEPROM_NumWrites
 1548 0016 C046     		.section	.text.FindLastWrittenRow,"ax",%progbits
 1549              		.align	2
 1550              		.code	16
 1551              		.thumb_func
 1552              		.type	FindLastWrittenRow, %function
 1553              	FindLastWrittenRow:
 1554              	.LFB7:
 698:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 699:Generated_Source\PSoC4/cy_em_eeprom.c **** /** \} */
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 41


 700:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 701:Generated_Source\PSoC4/cy_em_eeprom.c **** /** \cond INTERNAL */
 702:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 703:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 704:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 705:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: FindLastWrittenRow
 706:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 707:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 708:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs a search of the last written row address of the EEPROM associated
 709:Generated_Source\PSoC4/cy_em_eeprom.c **** * with the context structure. If there were no writes to the EEPROm the
 710:Generated_Source\PSoC4/cy_em_eeprom.c **** * function returns the start address of the EEPROM. The row address is returned
 711:Generated_Source\PSoC4/cy_em_eeprom.c **** * in the input parameter.
 712:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 713:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param lastWrRowPtr
 714:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a memory where the last written row will be returned.
 715:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 716:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 717:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 718:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 719:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 720:Generated_Source\PSoC4/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context)
 721:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1555              		.loc 1 721 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 24
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 80B5     		push	{r7, lr}
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 86B0     		sub	sp, sp, #24
 1564              		.cfi_def_cfa_offset 32
 1565 0004 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
 1567 0006 7860     		str	r0, [r7, #4]
 1568 0008 3960     		str	r1, [r7]
 722:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum = 0u;
 1569              		.loc 1 722 0
 1570 000a 0023     		movs	r3, #0
 1571 000c BB60     		str	r3, [r7, #8]
 723:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 prevSeqNum = 0u;
 1572              		.loc 1 723 0
 1573 000e 0023     		movs	r3, #0
 1574 0010 7B61     		str	r3, [r7, #20]
 724:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 numRows;
 725:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1575              		.loc 1 725 0
 1576 0012 3B68     		ldr	r3, [r7]
 1577 0014 9B69     		ldr	r3, [r3, #24]
 1578 0016 FB60     		str	r3, [r7, #12]
 726:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 727:Generated_Source\PSoC4/cy_em_eeprom.c ****     *lastWrRowPtr = emEepromAddr;
 1579              		.loc 1 727 0
 1580 0018 7B68     		ldr	r3, [r7, #4]
 1581 001a FA68     		ldr	r2, [r7, #12]
 1582 001c 1A60     		str	r2, [r3]
 728:Generated_Source\PSoC4/cy_em_eeprom.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 42


 729:Generated_Source\PSoC4/cy_em_eeprom.c ****     for(numRows = 0u; numRows < (context->numberOfRows * context->wearLevelingFactor); numRows++)
 1583              		.loc 1 729 0
 1584 001e 0023     		movs	r3, #0
 1585 0020 3B61     		str	r3, [r7, #16]
 1586 0022 15E0     		b	.L74
 1587              	.L76:
 730:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 731:Generated_Source\PSoC4/cy_em_eeprom.c ****         seqNum = CY_GET_REG32(emEepromAddr);
 1588              		.loc 1 731 0
 1589 0024 FB68     		ldr	r3, [r7, #12]
 1590 0026 1B68     		ldr	r3, [r3]
 1591 0028 BB60     		str	r3, [r7, #8]
 732:Generated_Source\PSoC4/cy_em_eeprom.c ****         if((0u != seqNum) && (seqNum > prevSeqNum))
 1592              		.loc 1 732 0
 1593 002a BB68     		ldr	r3, [r7, #8]
 1594 002c 002B     		cmp	r3, #0
 1595 002e 08D0     		beq	.L75
 1596              		.loc 1 732 0 is_stmt 0 discriminator 1
 1597 0030 BA68     		ldr	r2, [r7, #8]
 1598 0032 7B69     		ldr	r3, [r7, #20]
 1599 0034 9A42     		cmp	r2, r3
 1600 0036 04D9     		bls	.L75
 733:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 734:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Some record in EEPROM was found. Store found sequence
 735:Generated_Source\PSoC4/cy_em_eeprom.c ****             * number and row address.
 736:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 737:Generated_Source\PSoC4/cy_em_eeprom.c ****             prevSeqNum = seqNum;
 1601              		.loc 1 737 0 is_stmt 1
 1602 0038 BB68     		ldr	r3, [r7, #8]
 1603 003a 7B61     		str	r3, [r7, #20]
 738:Generated_Source\PSoC4/cy_em_eeprom.c ****             *lastWrRowPtr = emEepromAddr;
 1604              		.loc 1 738 0
 1605 003c 7B68     		ldr	r3, [r7, #4]
 1606 003e FA68     		ldr	r2, [r7, #12]
 1607 0040 1A60     		str	r2, [r3]
 1608              	.L75:
 739:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 740:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 741:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Switch to the next row */
 742:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1609              		.loc 1 742 0 discriminator 2
 1610 0042 FB68     		ldr	r3, [r7, #12]
 1611 0044 0133     		adds	r3, r3, #1
 1612 0046 FF33     		adds	r3, r3, #255
 1613 0048 FB60     		str	r3, [r7, #12]
 729:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1614              		.loc 1 729 0 discriminator 2
 1615 004a 3B69     		ldr	r3, [r7, #16]
 1616 004c 0133     		adds	r3, r3, #1
 1617 004e 3B61     		str	r3, [r7, #16]
 1618              	.L74:
 729:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1619              		.loc 1 729 0 is_stmt 0 discriminator 1
 1620 0050 3B68     		ldr	r3, [r7]
 1621 0052 5A68     		ldr	r2, [r3, #4]
 1622 0054 3B68     		ldr	r3, [r7]
 1623 0056 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 43


 1624 0058 5A43     		muls	r2, r3
 1625 005a 3B69     		ldr	r3, [r7, #16]
 1626 005c 9A42     		cmp	r2, r3
 1627 005e E1D8     		bhi	.L76
 743:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 744:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1628              		.loc 1 744 0 is_stmt 1
 1629 0060 C046     		nop
 1630 0062 BD46     		mov	sp, r7
 1631 0064 06B0     		add	sp, sp, #24
 1632              		@ sp needed
 1633 0066 80BD     		pop	{r7, pc}
 1634              		.cfi_endproc
 1635              	.LFE7:
 1636              		.size	FindLastWrittenRow, .-FindLastWrittenRow
 1637              		.section	.text.GetRowAddrBySeqNum,"ax",%progbits
 1638              		.align	2
 1639              		.code	16
 1640              		.thumb_func
 1641              		.type	GetRowAddrBySeqNum, %function
 1642              	GetRowAddrBySeqNum:
 1643              	.LFB8:
 745:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 746:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 747:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 748:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetRowAddrBySeqNum
 749:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 750:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 751:Generated_Source\PSoC4/cy_em_eeprom.c **** * Returns the address of the row in EEPROM using its sequence number.
 752:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 753:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param seqNum
 754:Generated_Source\PSoC4/cy_em_eeprom.c **** * The sequence number of the row.
 755:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 756:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 757:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
 758:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 759:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 760:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the row or zero if the row with the sequence number was not
 761:Generated_Source\PSoC4/cy_em_eeprom.c **** * found.
 762:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 763:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 764:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context)
 765:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1644              		.loc 1 765 0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 16
 1647              		@ frame_needed = 1, uses_anonymous_args = 0
 1648 0000 80B5     		push	{r7, lr}
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 7, -8
 1651              		.cfi_offset 14, -4
 1652 0002 84B0     		sub	sp, sp, #16
 1653              		.cfi_def_cfa_offset 24
 1654 0004 00AF     		add	r7, sp, #0
 1655              		.cfi_def_cfa_register 7
 1656 0006 7860     		str	r0, [r7, #4]
 1657 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 44


 766:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1658              		.loc 1 766 0
 1659 000a 3B68     		ldr	r3, [r7]
 1660 000c 9B69     		ldr	r3, [r3, #24]
 1661 000e FB60     		str	r3, [r7, #12]
 767:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 768:Generated_Source\PSoC4/cy_em_eeprom.c ****     while(CY_GET_REG32(emEepromAddr) != seqNum)
 1662              		.loc 1 768 0
 1663 0010 0BE0     		b	.L78
 1664              	.L80:
 769:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 770:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Switch to the next row */
 771:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1665              		.loc 1 771 0
 1666 0012 FB68     		ldr	r3, [r7, #12]
 1667 0014 0133     		adds	r3, r3, #1
 1668 0016 FF33     		adds	r3, r3, #255
 1669 0018 FB60     		str	r3, [r7, #12]
 772:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 773:Generated_Source\PSoC4/cy_em_eeprom.c ****         if (CY_EM_EEPROM_ADDR_IN_RANGE !=
 774:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1670              		.loc 1 774 0
 1671 001a 3B68     		ldr	r3, [r7]
 1672 001c 1A68     		ldr	r2, [r3]
 773:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1673              		.loc 1 773 0
 1674 001e FB68     		ldr	r3, [r7, #12]
 1675 0020 9A42     		cmp	r2, r3
 1676 0022 02D8     		bhi	.L78
 775:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 776:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromAddr = 0u;
 1677              		.loc 1 776 0
 1678 0024 0023     		movs	r3, #0
 1679 0026 FB60     		str	r3, [r7, #12]
 777:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Exit the loop as we reached the end of EEPROM */
 778:Generated_Source\PSoC4/cy_em_eeprom.c ****             break;
 1680              		.loc 1 778 0
 1681 0028 04E0     		b	.L79
 1682              	.L78:
 768:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1683              		.loc 1 768 0
 1684 002a FB68     		ldr	r3, [r7, #12]
 1685 002c 1A68     		ldr	r2, [r3]
 1686 002e 7B68     		ldr	r3, [r7, #4]
 1687 0030 9A42     		cmp	r2, r3
 1688 0032 EED1     		bne	.L80
 1689              	.L79:
 779:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 780:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 781:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 782:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (emEepromAddr);
 1690              		.loc 1 782 0
 1691 0034 FB68     		ldr	r3, [r7, #12]
 783:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1692              		.loc 1 783 0
 1693 0036 1800     		movs	r0, r3
 1694 0038 BD46     		mov	sp, r7
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 45


 1695 003a 04B0     		add	sp, sp, #16
 1696              		@ sp needed
 1697 003c 80BD     		pop	{r7, pc}
 1698              		.cfi_endproc
 1699              	.LFE8:
 1700              		.size	GetRowAddrBySeqNum, .-GetRowAddrBySeqNum
 1701 003e C046     		.section	.text.GetNextRowToWrite,"ax",%progbits
 1702              		.align	2
 1703              		.code	16
 1704              		.thumb_func
 1705              		.type	GetNextRowToWrite, %function
 1706              	GetNextRowToWrite:
 1707              	.LFB9:
 784:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 785:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 786:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 787:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetNextRowToWrite
 788:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 789:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 790:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs a range check of the row that should be written and updates the
 791:Generated_Source\PSoC4/cy_em_eeprom.c **** * address to the row respectively. The similar actions are done for the read
 792:Generated_Source\PSoC4/cy_em_eeprom.c **** * address.
 793:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 794:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param seqNum
 795:Generated_Source\PSoC4/cy_em_eeprom.c **** * The sequence number of the last written row.
 796:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 797:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowToWrPtr
 798:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the last written row (input). The address of the row to be 
 799:Generated_Source\PSoC4/cy_em_eeprom.c **** * written (output).
 800:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 801:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowToRdPtr
 802:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the row from which the data should be read into the RAM buffer
 803:Generated_Source\PSoC4/cy_em_eeprom.c **** * in a later write operation. Out parameter.
 804:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 805:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 806:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 807:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 808:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 809:Generated_Source\PSoC4/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
 810:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 * rowToWrPtr, uint32 * rowToRdPtr, cy_stc_eeprom_context_t * context)
 811:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1708              		.loc 1 811 0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 16
 1711              		@ frame_needed = 1, uses_anonymous_args = 0
 1712 0000 80B5     		push	{r7, lr}
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 7, -8
 1715              		.cfi_offset 14, -4
 1716 0002 84B0     		sub	sp, sp, #16
 1717              		.cfi_def_cfa_offset 24
 1718 0004 00AF     		add	r7, sp, #0
 1719              		.cfi_def_cfa_register 7
 1720 0006 F860     		str	r0, [r7, #12]
 1721 0008 B960     		str	r1, [r7, #8]
 1722 000a 7A60     		str	r2, [r7, #4]
 1723 000c 3B60     		str	r3, [r7]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 46


 812:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Switch to the next row to be written if the current sequence number is
 813:Generated_Source\PSoC4/cy_em_eeprom.c ****     * not zero.
 814:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 815:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != seqNum)
 1724              		.loc 1 815 0
 1725 000e FB68     		ldr	r3, [r7, #12]
 1726 0010 002B     		cmp	r3, #0
 1727 0012 05D0     		beq	.L83
 816:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 817:Generated_Source\PSoC4/cy_em_eeprom.c ****         *rowToWrPtr = (*rowToWrPtr + CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 1728              		.loc 1 817 0
 1729 0014 BB68     		ldr	r3, [r7, #8]
 1730 0016 1B68     		ldr	r3, [r3]
 1731 0018 5A1C     		adds	r2, r3, #1
 1732 001a FF32     		adds	r2, r2, #255
 1733 001c BB68     		ldr	r3, [r7, #8]
 1734 001e 1A60     		str	r2, [r3]
 1735              	.L83:
 818:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 819:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 820:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* If the resulting row address is out of EEPROM, then switch to the base
 821:Generated_Source\PSoC4/cy_em_eeprom.c ****     * EEPROM address (Row#0).
 822:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 823:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CY_EM_EEPROM_ADDR_IN_RANGE !=
 824:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1736              		.loc 1 824 0
 1737 0020 BB68     		ldr	r3, [r7, #8]
 1738 0022 1A68     		ldr	r2, [r3]
 1739 0024 3B68     		ldr	r3, [r7]
 1740 0026 1B68     		ldr	r3, [r3]
 823:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1741              		.loc 1 823 0
 1742 0028 9A42     		cmp	r2, r3
 1743 002a 03D3     		bcc	.L84
 825:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 826:Generated_Source\PSoC4/cy_em_eeprom.c ****         *rowToWrPtr = context->userFlashStartAddr;
 1744              		.loc 1 826 0
 1745 002c 3B68     		ldr	r3, [r7]
 1746 002e 9A69     		ldr	r2, [r3, #24]
 1747 0030 BB68     		ldr	r3, [r7, #8]
 1748 0032 1A60     		str	r2, [r3]
 1749              	.L84:
 827:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 828:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 829:Generated_Source\PSoC4/cy_em_eeprom.c ****     *rowToRdPtr = 0u;
 1750              		.loc 1 829 0
 1751 0034 7B68     		ldr	r3, [r7, #4]
 1752 0036 0022     		movs	r2, #0
 1753 0038 1A60     		str	r2, [r3]
 830:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 831:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check if the sequence number is larger than the number of rows in the EEPROM.
 832:Generated_Source\PSoC4/cy_em_eeprom.c ****     * If not, do not update the row read address because there is no historic
 833:Generated_Source\PSoC4/cy_em_eeprom.c ****     * data to be read.
 834:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 835:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(context->numberOfRows <= seqNum)
 1754              		.loc 1 835 0
 1755 003a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 47


 1756 003c 5A68     		ldr	r2, [r3, #4]
 1757 003e FB68     		ldr	r3, [r7, #12]
 1758 0040 9A42     		cmp	r2, r3
 1759 0042 2FD8     		bhi	.L89
 836:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 837:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Check if wear leveling is used in EEPROM */
 838:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 1760              		.loc 1 838 0
 1761 0044 3B68     		ldr	r3, [r7]
 1762 0046 1B69     		ldr	r3, [r3, #16]
 1763 0048 012B     		cmp	r3, #1
 1764 004a 27D9     		bls	.L86
 839:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 840:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* The read row address should be taken from an EEPROM copy that became
 841:Generated_Source\PSoC4/cy_em_eeprom.c ****             * inactive recently. This condition check handles that.
 842:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 843:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((*rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)) <
 1765              		.loc 1 843 0
 1766 004c BB68     		ldr	r3, [r7, #8]
 1767 004e 1A68     		ldr	r2, [r3]
 1768 0050 3B68     		ldr	r3, [r7]
 1769 0052 5B68     		ldr	r3, [r3, #4]
 1770 0054 1B02     		lsls	r3, r3, #8
 1771 0056 D21A     		subs	r2, r2, r3
 844:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1772              		.loc 1 844 0
 1773 0058 3B68     		ldr	r3, [r7]
 1774 005a 9B69     		ldr	r3, [r3, #24]
 843:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1775              		.loc 1 843 0
 1776 005c 9A42     		cmp	r2, r3
 1777 005e 14D2     		bcs	.L87
 845:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 846:Generated_Source\PSoC4/cy_em_eeprom.c ****                 *rowToRdPtr = context->userFlashStartAddr +
 1778              		.loc 1 846 0
 1779 0060 3B68     		ldr	r3, [r7]
 1780 0062 9A69     		ldr	r2, [r3, #24]
 847:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1781              		.loc 1 847 0
 1782 0064 3B68     		ldr	r3, [r7]
 1783 0066 5968     		ldr	r1, [r3, #4]
 1784 0068 3B68     		ldr	r3, [r7]
 1785 006a 1B69     		ldr	r3, [r3, #16]
 1786 006c 0F48     		ldr	r0, .L90
 1787 006e 8446     		mov	ip, r0
 1788 0070 6344     		add	r3, r3, ip
 1789 0072 4B43     		muls	r3, r1
 1790 0074 1B02     		lsls	r3, r3, #8
 846:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1791              		.loc 1 846 0
 1792 0076 D218     		adds	r2, r2, r3
 848:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CY_EM_EEPROM_FLASH_SIZEOF_ROW) + (*rowToWrPtr - context->userFlashStartAddr
 1793              		.loc 1 848 0
 1794 0078 BB68     		ldr	r3, [r7, #8]
 1795 007a 1968     		ldr	r1, [r3]
 1796 007c 3B68     		ldr	r3, [r7]
 1797 007e 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 48


 1798 0080 CB1A     		subs	r3, r1, r3
 1799 0082 D218     		adds	r2, r2, r3
 846:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1800              		.loc 1 846 0
 1801 0084 7B68     		ldr	r3, [r7, #4]
 1802 0086 1A60     		str	r2, [r3]
 849:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 850:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 851:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 852:Generated_Source\PSoC4/cy_em_eeprom.c ****                 *rowToRdPtr = *rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)
 853:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 854:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 855:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
 856:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 857:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* If no wear leveling, always read from the same flash row that
 858:Generated_Source\PSoC4/cy_em_eeprom.c ****             * should be written.
 859:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 860:Generated_Source\PSoC4/cy_em_eeprom.c ****             *rowToRdPtr = *rowToWrPtr;
 861:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 862:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 863:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1803              		.loc 1 863 0
 1804 0088 0CE0     		b	.L89
 1805              	.L87:
 852:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 1806              		.loc 1 852 0
 1807 008a BB68     		ldr	r3, [r7, #8]
 1808 008c 1A68     		ldr	r2, [r3]
 1809 008e 3B68     		ldr	r3, [r7]
 1810 0090 5B68     		ldr	r3, [r3, #4]
 1811 0092 1B02     		lsls	r3, r3, #8
 1812 0094 D21A     		subs	r2, r2, r3
 1813 0096 7B68     		ldr	r3, [r7, #4]
 1814 0098 1A60     		str	r2, [r3]
 1815              		.loc 1 863 0
 1816 009a 03E0     		b	.L89
 1817              	.L86:
 860:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 1818              		.loc 1 860 0
 1819 009c BB68     		ldr	r3, [r7, #8]
 1820 009e 1A68     		ldr	r2, [r3]
 1821 00a0 7B68     		ldr	r3, [r7, #4]
 1822 00a2 1A60     		str	r2, [r3]
 1823              	.L89:
 1824              		.loc 1 863 0
 1825 00a4 C046     		nop
 1826 00a6 BD46     		mov	sp, r7
 1827 00a8 04B0     		add	sp, sp, #16
 1828              		@ sp needed
 1829 00aa 80BD     		pop	{r7, pc}
 1830              	.L91:
 1831              		.align	2
 1832              	.L90:
 1833 00ac FFFFFF00 		.word	16777215
 1834              		.cfi_endproc
 1835              	.LFE9:
 1836              		.size	GetNextRowToWrite, .-GetNextRowToWrite
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 49


 1837              		.section	.text.CalcChecksum,"ax",%progbits
 1838              		.align	2
 1839              		.code	16
 1840              		.thumb_func
 1841              		.type	CalcChecksum, %function
 1842              	CalcChecksum:
 1843              	.LFB10:
 864:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 865:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 866:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 867:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CalcChecksum
 868:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 869:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 870:Generated_Source\PSoC4/cy_em_eeprom.c **** * Implements CRC-8 that is used in checksum calculation for the redundant copy
 871:Generated_Source\PSoC4/cy_em_eeprom.c **** * algorithm.
 872:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 873:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowData
 874:Generated_Source\PSoC4/cy_em_eeprom.c **** * The row data to be used to calculate the checksum.
 875:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 876:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param len
 877:Generated_Source\PSoC4/cy_em_eeprom.c **** * The length of rowData.
 878:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 879:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 880:Generated_Source\PSoC4/cy_em_eeprom.c **** * The calculated value of CRC-8.
 881:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 882:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 883:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len)
 884:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1844              		.loc 1 884 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 16
 1847              		@ frame_needed = 1, uses_anonymous_args = 0
 1848 0000 80B5     		push	{r7, lr}
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 7, -8
 1851              		.cfi_offset 14, -4
 1852 0002 84B0     		sub	sp, sp, #16
 1853              		.cfi_def_cfa_offset 24
 1854 0004 00AF     		add	r7, sp, #0
 1855              		.cfi_def_cfa_register 7
 1856 0006 7860     		str	r0, [r7, #4]
 1857 0008 3960     		str	r1, [r7]
 885:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint8 crc = CY_EM_EEPROM_CRC8_SEED;
 1858              		.loc 1 885 0
 1859 000a 0F23     		movs	r3, #15
 1860 000c FB18     		adds	r3, r7, r3
 1861 000e FF22     		movs	r2, #255
 1862 0010 1A70     		strb	r2, [r3]
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint8 i;
 887:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint16 cnt = 0u;
 1863              		.loc 1 887 0
 1864 0012 0C23     		movs	r3, #12
 1865 0014 FB18     		adds	r3, r7, r3
 1866 0016 0022     		movs	r2, #0
 1867 0018 1A80     		strh	r2, [r3]
 888:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 889:Generated_Source\PSoC4/cy_em_eeprom.c ****     while(cnt != len)
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 50


 1868              		.loc 1 889 0
 1869 001a 3BE0     		b	.L93
 1870              	.L98:
 890:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 891:Generated_Source\PSoC4/cy_em_eeprom.c ****         crc ^= rowData[cnt];
 1871              		.loc 1 891 0
 1872 001c 0C23     		movs	r3, #12
 1873 001e FB18     		adds	r3, r7, r3
 1874 0020 1B88     		ldrh	r3, [r3]
 1875 0022 7A68     		ldr	r2, [r7, #4]
 1876 0024 D318     		adds	r3, r2, r3
 1877 0026 1978     		ldrb	r1, [r3]
 1878 0028 0F23     		movs	r3, #15
 1879 002a FB18     		adds	r3, r7, r3
 1880 002c 0F22     		movs	r2, #15
 1881 002e BA18     		adds	r2, r7, r2
 1882 0030 1278     		ldrb	r2, [r2]
 1883 0032 4A40     		eors	r2, r1
 1884 0034 1A70     		strb	r2, [r3]
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1885              		.loc 1 892 0
 1886 0036 0E23     		movs	r3, #14
 1887 0038 FB18     		adds	r3, r7, r3
 1888 003a 0022     		movs	r2, #0
 1889 003c 1A70     		strb	r2, [r3]
 1890 003e 1DE0     		b	.L94
 1891              	.L97:
 893:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 894:Generated_Source\PSoC4/cy_em_eeprom.c ****             crc = CY_EM_EEPROM_CALCULATE_CRC8(crc);
 1892              		.loc 1 894 0
 1893 0040 0F23     		movs	r3, #15
 1894 0042 FB18     		adds	r3, r7, r3
 1895 0044 1B78     		ldrb	r3, [r3]
 1896 0046 5BB2     		sxtb	r3, r3
 1897 0048 002B     		cmp	r3, #0
 1898 004a 08DA     		bge	.L95
 1899              		.loc 1 894 0 is_stmt 0 discriminator 1
 1900 004c 0F23     		movs	r3, #15
 1901 004e FB18     		adds	r3, r7, r3
 1902 0050 1B78     		ldrb	r3, [r3]
 1903 0052 DB18     		adds	r3, r3, r3
 1904 0054 DBB2     		uxtb	r3, r3
 1905 0056 3122     		movs	r2, #49
 1906 0058 5340     		eors	r3, r2
 1907 005a DBB2     		uxtb	r3, r3
 1908 005c 04E0     		b	.L96
 1909              	.L95:
 1910              		.loc 1 894 0 discriminator 2
 1911 005e 0F23     		movs	r3, #15
 1912 0060 FB18     		adds	r3, r7, r3
 1913 0062 1B78     		ldrb	r3, [r3]
 1914 0064 DB18     		adds	r3, r3, r3
 1915 0066 DBB2     		uxtb	r3, r3
 1916              	.L96:
 1917              		.loc 1 894 0 discriminator 4
 1918 0068 0F22     		movs	r2, #15
 1919 006a BA18     		adds	r2, r7, r2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 51


 1920 006c 1370     		strb	r3, [r2]
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1921              		.loc 1 892 0 is_stmt 1 discriminator 4
 1922 006e 0E23     		movs	r3, #14
 1923 0070 FB18     		adds	r3, r7, r3
 1924 0072 1A78     		ldrb	r2, [r3]
 1925 0074 0E23     		movs	r3, #14
 1926 0076 FB18     		adds	r3, r7, r3
 1927 0078 0132     		adds	r2, r2, #1
 1928 007a 1A70     		strb	r2, [r3]
 1929              	.L94:
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1930              		.loc 1 892 0 is_stmt 0 discriminator 2
 1931 007c 0E23     		movs	r3, #14
 1932 007e FB18     		adds	r3, r7, r3
 1933 0080 1B78     		ldrb	r3, [r3]
 1934 0082 072B     		cmp	r3, #7
 1935 0084 DCD9     		bls	.L97
 895:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 896:Generated_Source\PSoC4/cy_em_eeprom.c ****         cnt++;
 1936              		.loc 1 896 0 is_stmt 1
 1937 0086 0C23     		movs	r3, #12
 1938 0088 FB18     		adds	r3, r7, r3
 1939 008a 1A88     		ldrh	r2, [r3]
 1940 008c 0C23     		movs	r3, #12
 1941 008e FB18     		adds	r3, r7, r3
 1942 0090 0132     		adds	r2, r2, #1
 1943 0092 1A80     		strh	r2, [r3]
 1944              	.L93:
 889:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1945              		.loc 1 889 0
 1946 0094 0C23     		movs	r3, #12
 1947 0096 FB18     		adds	r3, r7, r3
 1948 0098 1A88     		ldrh	r2, [r3]
 1949 009a 3B68     		ldr	r3, [r7]
 1950 009c 9A42     		cmp	r2, r3
 1951 009e BDD1     		bne	.L98
 897:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 898:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 899:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (crc);
 1952              		.loc 1 899 0
 1953 00a0 0F23     		movs	r3, #15
 1954 00a2 FB18     		adds	r3, r7, r3
 1955 00a4 1B78     		ldrb	r3, [r3]
 900:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1956              		.loc 1 900 0
 1957 00a6 1800     		movs	r0, r3
 1958 00a8 BD46     		mov	sp, r7
 1959 00aa 04B0     		add	sp, sp, #16
 1960              		@ sp needed
 1961 00ac 80BD     		pop	{r7, pc}
 1962              		.cfi_endproc
 1963              	.LFE10:
 1964              		.size	CalcChecksum, .-CalcChecksum
 1965              		.section	.text.CheckRanges,"ax",%progbits
 1966              		.align	2
 1967              		.code	16
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 52


 1968              		.thumb_func
 1969              		.type	CheckRanges, %function
 1970              	CheckRanges:
 1971              	.LFB11:
 901:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 902:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 903:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 904:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CheckRanges
 905:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 906:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 907:Generated_Source\PSoC4/cy_em_eeprom.c **** * Checks if the EEPROM of the requested size can be placed in flash.
 908:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 909:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param config
 910:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
 911:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 912:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 913:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 914:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 915:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 916:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config)
 917:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1972              		.loc 1 917 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 24
 1975              		@ frame_needed = 1, uses_anonymous_args = 0
 1976 0000 80B5     		push	{r7, lr}
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 7, -8
 1979              		.cfi_offset 14, -4
 1980 0002 86B0     		sub	sp, sp, #24
 1981              		.cfi_def_cfa_offset 32
 1982 0004 00AF     		add	r7, sp, #0
 1983              		.cfi_def_cfa_register 7
 1984 0006 7860     		str	r0, [r7, #4]
 918:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_DATA;
 1985              		.loc 1 918 0
 1986 0008 1723     		movs	r3, #23
 1987 000a FB18     		adds	r3, r7, r3
 1988 000c 0322     		movs	r2, #3
 1989 000e 1A70     		strb	r2, [r3]
 919:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startAddr = config->userFlashStartAddr;
 1990              		.loc 1 919 0
 1991 0010 7B68     		ldr	r3, [r7, #4]
 1992 0012 DB68     		ldr	r3, [r3, #12]
 1993 0014 3B61     		str	r3, [r7, #16]
 920:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 endAddr = startAddr + CY_EM_EEPROM_GET_PHYSICAL_SIZE(config->eepromSize,
 1994              		.loc 1 920 0
 1995 0016 7B68     		ldr	r3, [r7, #4]
 1996 0018 1B68     		ldr	r3, [r3]
 1997 001a DA09     		lsrs	r2, r3, #7
 1998 001c 7B68     		ldr	r3, [r7, #4]
 1999 001e 1B68     		ldr	r3, [r3]
 2000 0020 7F21     		movs	r1, #127
 2001 0022 0B40     		ands	r3, r1
 2002 0024 01D0     		beq	.L101
 2003              		.loc 1 920 0 is_stmt 0 discriminator 1
 2004 0026 0123     		movs	r3, #1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 53


 2005 0028 00E0     		b	.L102
 2006              	.L101:
 2007              		.loc 1 920 0 discriminator 2
 2008 002a 0023     		movs	r3, #0
 2009              	.L102:
 2010              		.loc 1 920 0 discriminator 4
 2011 002c D218     		adds	r2, r2, r3
 2012 002e 7B68     		ldr	r3, [r7, #4]
 2013 0030 5B68     		ldr	r3, [r3, #4]
 2014 0032 5343     		muls	r3, r2
 2015 0034 7A68     		ldr	r2, [r7, #4]
 2016 0036 127A     		ldrb	r2, [r2, #8]
 2017 0038 0132     		adds	r2, r2, #1
 2018 003a 5343     		muls	r3, r2
 2019 003c 1A02     		lsls	r2, r3, #8
 2020 003e 3B69     		ldr	r3, [r7, #16]
 2021 0040 D318     		adds	r3, r2, r3
 2022 0042 FB60     		str	r3, [r7, #12]
 921:Generated_Source\PSoC4/cy_em_eeprom.c ****             config->wearLevelingFactor, config->redundantCopy);
 922:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 923:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Range check if there is enough flash for EEPROM */
 924:Generated_Source\PSoC4/cy_em_eeprom.c ****     if (CY_EM_EEPROM_IS_IN_FLASH_RANGE(startAddr, endAddr))
 2023              		.loc 1 924 0 is_stmt 1 discriminator 4
 2024 0044 3B69     		ldr	r3, [r7, #16]
 2025 0046 002B     		cmp	r3, #0
 2026 0048 08D0     		beq	.L103
 2027              		.loc 1 924 0 is_stmt 0 discriminator 1
 2028 004a FA68     		ldr	r2, [r7, #12]
 2029 004c 8023     		movs	r3, #128
 2030 004e DB02     		lsls	r3, r3, #11
 2031 0050 9A42     		cmp	r2, r3
 2032 0052 03D8     		bhi	.L103
 925:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 926:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2033              		.loc 1 926 0 is_stmt 1
 2034 0054 1723     		movs	r3, #23
 2035 0056 FB18     		adds	r3, r7, r3
 2036 0058 0022     		movs	r2, #0
 2037 005a 1A70     		strb	r2, [r3]
 2038              	.L103:
 927:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 928:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (ret);
 2039              		.loc 1 928 0
 2040 005c 1723     		movs	r3, #23
 2041 005e FB18     		adds	r3, r7, r3
 2042 0060 1B78     		ldrb	r3, [r3]
 929:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2043              		.loc 1 929 0
 2044 0062 1800     		movs	r0, r3
 2045 0064 BD46     		mov	sp, r7
 2046 0066 06B0     		add	sp, sp, #24
 2047              		@ sp needed
 2048 0068 80BD     		pop	{r7, pc}
 2049              		.cfi_endproc
 2050              	.LFE11:
 2051              		.size	CheckRanges, .-CheckRanges
 2052 006a C046     		.section	.text.WriteRow,"ax",%progbits
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 54


 2053              		.align	2
 2054              		.code	16
 2055              		.thumb_func
 2056              		.type	WriteRow, %function
 2057              	WriteRow:
 2058              	.LFB12:
 930:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 931:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 932:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 933:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: WriteRow
 934:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 935:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 936:Generated_Source\PSoC4/cy_em_eeprom.c **** * Writes one flash row starting from the specified row address.
 937:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 938:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowAdd
 939:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the flash row.
 940:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 941:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowData
 942:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the data to be written to the row.
 943:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 944:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 945:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 946:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 947:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 948:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 949:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 950:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 951:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr, uint32 *rowData,
 952:Generated_Source\PSoC4/cy_em_eeprom.c ****         cy_stc_eeprom_context_t * context)
 953:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2059              		.loc 1 953 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 32
 2062              		@ frame_needed = 1, uses_anonymous_args = 0
 2063 0000 80B5     		push	{r7, lr}
 2064              		.cfi_def_cfa_offset 8
 2065              		.cfi_offset 7, -8
 2066              		.cfi_offset 14, -4
 2067 0002 88B0     		sub	sp, sp, #32
 2068              		.cfi_def_cfa_offset 40
 2069 0004 00AF     		add	r7, sp, #0
 2070              		.cfi_def_cfa_register 7
 2071 0006 F860     		str	r0, [r7, #12]
 2072 0008 B960     		str	r1, [r7, #8]
 2073 000a 7A60     		str	r2, [r7, #4]
 954:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 2074              		.loc 1 954 0
 2075 000c 1F23     		movs	r3, #31
 2076 000e FB18     		adds	r3, r7, r3
 2077 0010 0422     		movs	r2, #4
 2078 0012 1A70     		strb	r2, [r3]
 955:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (!CY_PSOC6)
 956:Generated_Source\PSoC4/cy_em_eeprom.c ****     cystatus rc;
 957:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rowId;
 958:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if ((CY_PSOC3) || (CY_PSOC5))
 959:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 arrayId;
 960:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC3) */
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 55


 961:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 962:Generated_Source\PSoC4/cy_em_eeprom.c ****     context = context; /* To avoid compiler warning generation */
 963:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 964:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* For non-PSoC 6 devices, the Array ID and Row ID needed to write the row */
 965:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC3)
 966:Generated_Source\PSoC4/cy_em_eeprom.c ****         
 967:Generated_Source\PSoC4/cy_em_eeprom.c ****         rowAddr &= CY_EM_EEPROM_CODE_ADDR_MASK;
 968:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* ((CY_PSOC3) */
 969:Generated_Source\PSoC4/cy_em_eeprom.c ****     rowId = (rowAddr / CY_EM_EEPROM_FLASH_SIZEOF_ROW) % CY_EM_EEPROM_ROWS_IN_ARRAY;
 2079              		.loc 1 969 0
 2080 0014 FB68     		ldr	r3, [r7, #12]
 2081 0016 1B0A     		lsrs	r3, r3, #8
 2082 0018 DB05     		lsls	r3, r3, #23
 2083 001a DB0D     		lsrs	r3, r3, #23
 2084 001c BB61     		str	r3, [r7, #24]
 970:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 971:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Write the flash row */
 972:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC4)
 973:Generated_Source\PSoC4/cy_em_eeprom.c ****         rc = CySysFlashWriteRow(rowId, (uint8 *)rowData);
 2085              		.loc 1 973 0
 2086 001e BA68     		ldr	r2, [r7, #8]
 2087 0020 BB69     		ldr	r3, [r7, #24]
 2088 0022 1100     		movs	r1, r2
 2089 0024 1800     		movs	r0, r3
 2090 0026 FFF7FEFF 		bl	CySysFlashWriteRow
 2091 002a 0300     		movs	r3, r0
 2092 002c 7B61     		str	r3, [r7, #20]
 974:Generated_Source\PSoC4/cy_em_eeprom.c ****     #else
 975:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)CySetTemp();
 976:Generated_Source\PSoC4/cy_em_eeprom.c ****         arrayId = rowAddr / CY_FLASH_SIZEOF_ARRAY;
 977:Generated_Source\PSoC4/cy_em_eeprom.c ****         rc = CyWriteRowData((uint8)arrayId, (uint16)rowId, (uint8 *)rowData);
 978:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC4) */
 979:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 980:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CYRET_SUCCESS == rc)
 2093              		.loc 1 980 0
 2094 002e 7B69     		ldr	r3, [r7, #20]
 2095 0030 002B     		cmp	r3, #0
 2096 0032 03D1     		bne	.L106
 981:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 982:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2097              		.loc 1 982 0
 2098 0034 1F23     		movs	r3, #31
 2099 0036 FB18     		adds	r3, r7, r3
 2100 0038 0022     		movs	r2, #0
 2101 003a 1A70     		strb	r2, [r3]
 2102              	.L106:
 983:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 984:Generated_Source\PSoC4/cy_em_eeprom.c **** #else /* PSoC 6 */
 985:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != context->blockingWrite)
 986:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 987:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Do blocking write */
 988:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_FLASH_DRV_SUCCESS == Cy_Flash_WriteRow(rowAddr, (const uint32 *)rowData))
 989:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 990:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = CY_EM_EEPROM_SUCCESS;
 991:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 992:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 993:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 56


 994:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 995:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Initiate write */
 996:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartWrite(rowAddr, (const uint32 *)rowData))
 997:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 998:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
 999:Generated_Source\PSoC4/cy_em_eeprom.c ****             cy_en_flashdrv_status_t rc;
1000:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1001:Generated_Source\PSoC4/cy_em_eeprom.c ****             do
1002:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1003:Generated_Source\PSoC4/cy_em_eeprom.c ****                 CyDelay(1u);                         /* Wait 1ms */
1004:Generated_Source\PSoC4/cy_em_eeprom.c ****                 rc = Cy_Flash_IsWriteComplete();     /* Check if write completed */
1005:Generated_Source\PSoC4/cy_em_eeprom.c ****                 countMs--;
1006:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1007:Generated_Source\PSoC4/cy_em_eeprom.c ****             while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1008:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1009:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == rc)
1010:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1011:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1012:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1013:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1014:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1015:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1016:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1017:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (ret);
 2103              		.loc 1 1017 0
 2104 003c 1F23     		movs	r3, #31
 2105 003e FB18     		adds	r3, r7, r3
 2106 0040 1B78     		ldrb	r3, [r3]
1018:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2107              		.loc 1 1018 0
 2108 0042 1800     		movs	r0, r3
 2109 0044 BD46     		mov	sp, r7
 2110 0046 08B0     		add	sp, sp, #32
 2111              		@ sp needed
 2112 0048 80BD     		pop	{r7, pc}
 2113              		.cfi_endproc
 2114              	.LFE12:
 2115              		.size	WriteRow, .-WriteRow
 2116 004a C046     		.section	.text.EraseRow,"ax",%progbits
 2117              		.align	2
 2118              		.code	16
 2119              		.thumb_func
 2120              		.type	EraseRow, %function
 2121              	EraseRow:
 2122              	.LFB13:
1019:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1020:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1021:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1022:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: EraseRow
1023:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1024:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1025:Generated_Source\PSoC4/cy_em_eeprom.c **** * Erases one flash row starting from the specified row address. If the redundant
1026:Generated_Source\PSoC4/cy_em_eeprom.c **** * copy option is enabled the corresponding row in the redundant copy will also
1027:Generated_Source\PSoC4/cy_em_eeprom.c **** * be erased.
1028:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1029:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowAdd
1030:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the flash row.
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 57


1031:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1032:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param ramBuffAddr
1033:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the RAM buffer that contains zeroed data (used only for
1034:Generated_Source\PSoC4/cy_em_eeprom.c **** * non-PSoC 6 devices).
1035:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1036:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1037:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1038:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1039:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1040:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1041:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1042:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1043:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr, uint32 ramBuffAddr,
1044:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_stc_eeprom_context_t * context)
1045:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2123              		.loc 1 1045 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 24
 2126              		@ frame_needed = 1, uses_anonymous_args = 0
 2127 0000 90B5     		push	{r4, r7, lr}
 2128              		.cfi_def_cfa_offset 12
 2129              		.cfi_offset 4, -12
 2130              		.cfi_offset 7, -8
 2131              		.cfi_offset 14, -4
 2132 0002 87B0     		sub	sp, sp, #28
 2133              		.cfi_def_cfa_offset 40
 2134 0004 00AF     		add	r7, sp, #0
 2135              		.cfi_def_cfa_register 7
 2136 0006 F860     		str	r0, [r7, #12]
 2137 0008 B960     		str	r1, [r7, #8]
 2138 000a 7A60     		str	r2, [r7, #4]
1046:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = rowAddr;
 2139              		.loc 1 1046 0
 2140 000c FB68     		ldr	r3, [r7, #12]
 2141 000e 3B61     		str	r3, [r7, #16]
1047:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 2142              		.loc 1 1047 0
 2143 0010 1723     		movs	r3, #23
 2144 0012 FB18     		adds	r3, r7, r3
 2145 0014 0422     		movs	r2, #4
 2146 0016 1A70     		strb	r2, [r3]
1048:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CY_PSOC6)
1049:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i = 1u;
1050:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1051:Generated_Source\PSoC4/cy_em_eeprom.c ****     ramBuffAddr = ramBuffAddr; /* To avoid compiler warning */
1052:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1053:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != context->redundantCopy)
1054:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1055:Generated_Source\PSoC4/cy_em_eeprom.c ****         i++;
1056:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1057:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1058:Generated_Source\PSoC4/cy_em_eeprom.c ****     do
1059:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1060:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != context->blockingWrite)
1061:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1062:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Erase the flash row */
1063:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == Cy_Flash_EraseRow(emEepromRowAddr))
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 58


1064:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1065:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1066:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1067:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1068:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1069:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1070:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Initiate erase */
1071:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartErase(emEepromRowAddr))
1072:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1073:Generated_Source\PSoC4/cy_em_eeprom.c ****                 uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
1074:Generated_Source\PSoC4/cy_em_eeprom.c ****                 cy_en_flashdrv_status_t rc;
1075:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1076:Generated_Source\PSoC4/cy_em_eeprom.c ****                 do
1077:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
1078:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CyDelay(1u);                         /* Wait 1ms */
1079:Generated_Source\PSoC4/cy_em_eeprom.c ****                     rc = Cy_Flash_IsWriteComplete();     /* Check if erase completed */
1080:Generated_Source\PSoC4/cy_em_eeprom.c ****                     countMs--;
1081:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
1082:Generated_Source\PSoC4/cy_em_eeprom.c ****                 while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1083:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1084:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(CY_FLASH_DRV_SUCCESS == rc)
1085:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
1086:Generated_Source\PSoC4/cy_em_eeprom.c ****                     ret = CY_EM_EEPROM_SUCCESS;
1087:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
1088:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1089:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1090:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1091:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
1092:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1093:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Update the address to point to the redundant copy row */
1094:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
1095:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1096:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1097:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1098:Generated_Source\PSoC4/cy_em_eeprom.c ****             break;
1099:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1100:Generated_Source\PSoC4/cy_em_eeprom.c ****         i--;
1101:Generated_Source\PSoC4/cy_em_eeprom.c ****     } while (0u != i);
1102:Generated_Source\PSoC4/cy_em_eeprom.c **** #else
1103:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Write the data to the specified flash row */
1104:Generated_Source\PSoC4/cy_em_eeprom.c ****     ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 2147              		.loc 1 1104 0
 2148 0018 B968     		ldr	r1, [r7, #8]
 2149 001a 1723     		movs	r3, #23
 2150 001c FC18     		adds	r4, r7, r3
 2151 001e 7A68     		ldr	r2, [r7, #4]
 2152 0020 3B69     		ldr	r3, [r7, #16]
 2153 0022 1800     		movs	r0, r3
 2154 0024 FFF7FEFF 		bl	WriteRow
 2155 0028 0300     		movs	r3, r0
 2156 002a 2370     		strb	r3, [r4]
1105:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1106:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((CY_EM_EEPROM_SUCCESS == ret) && (0u != context->redundantCopy))
 2157              		.loc 1 1106 0
 2158 002c 1723     		movs	r3, #23
 2159 002e FB18     		adds	r3, r7, r3
 2160 0030 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 59


 2161 0032 002B     		cmp	r3, #0
 2162 0034 15D1     		bne	.L109
 2163              		.loc 1 1106 0 is_stmt 0 discriminator 1
 2164 0036 7B68     		ldr	r3, [r7, #4]
 2165 0038 1B7D     		ldrb	r3, [r3, #20]
 2166 003a 002B     		cmp	r3, #0
 2167 003c 11D0     		beq	.L109
1107:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1108:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Update the address to point to the redundant copy row */
1109:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2168              		.loc 1 1109 0 is_stmt 1
 2169 003e 7B68     		ldr	r3, [r7, #4]
 2170 0040 9B69     		ldr	r3, [r3, #24]
 2171 0042 3A69     		ldr	r2, [r7, #16]
 2172 0044 D21A     		subs	r2, r2, r3
 2173 0046 7B68     		ldr	r3, [r7, #4]
 2174 0048 1B68     		ldr	r3, [r3]
 2175 004a D318     		adds	r3, r2, r3
 2176 004c 3B61     		str	r3, [r7, #16]
1110:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 2177              		.loc 1 1110 0
 2178 004e B968     		ldr	r1, [r7, #8]
 2179 0050 1723     		movs	r3, #23
 2180 0052 FC18     		adds	r4, r7, r3
 2181 0054 7A68     		ldr	r2, [r7, #4]
 2182 0056 3B69     		ldr	r3, [r7, #16]
 2183 0058 1800     		movs	r0, r3
 2184 005a FFF7FEFF 		bl	WriteRow
 2185 005e 0300     		movs	r3, r0
 2186 0060 2370     		strb	r3, [r4]
 2187              	.L109:
1111:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1112:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1113:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CY_EM_EEPROM_SUCCESS == ret)
 2188              		.loc 1 1113 0
 2189 0062 1723     		movs	r3, #23
 2190 0064 FB18     		adds	r3, r7, r3
 2191 0066 1B78     		ldrb	r3, [r3]
 2192 0068 002B     		cmp	r3, #0
 2193 006a 02D1     		bne	.L110
1114:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1115:Generated_Source\PSoC4/cy_em_eeprom.c ****         context->lastWrRowAddr = rowAddr;
 2194              		.loc 1 1115 0
 2195 006c 7B68     		ldr	r3, [r7, #4]
 2196 006e FA68     		ldr	r2, [r7, #12]
 2197 0070 9A60     		str	r2, [r3, #8]
 2198              	.L110:
1116:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1117:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1118:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1119:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2199              		.loc 1 1119 0
 2200 0072 1723     		movs	r3, #23
 2201 0074 FB18     		adds	r3, r7, r3
 2202 0076 1B78     		ldrb	r3, [r3]
1120:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2203              		.loc 1 1120 0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 60


 2204 0078 1800     		movs	r0, r3
 2205 007a BD46     		mov	sp, r7
 2206 007c 07B0     		add	sp, sp, #28
 2207              		@ sp needed
 2208 007e 90BD     		pop	{r4, r7, pc}
 2209              		.cfi_endproc
 2210              	.LFE13:
 2211              		.size	EraseRow, .-EraseRow
 2212              		.section	.text.CheckCrcAndCopy,"ax",%progbits
 2213              		.align	2
 2214              		.code	16
 2215              		.thumb_func
 2216              		.type	CheckCrcAndCopy, %function
 2217              	CheckCrcAndCopy:
 2218              	.LFB14:
1121:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1122:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1123:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1124:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CheckCrcAndCopy
1125:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1126:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1127:Generated_Source\PSoC4/cy_em_eeprom.c **** * Checks the checksum of the specific row in EEPROM. If the CRC matches - copies
1128:Generated_Source\PSoC4/cy_em_eeprom.c **** * the data to the "datAddr" from EEPROM. f the CRC does not match checks the
1129:Generated_Source\PSoC4/cy_em_eeprom.c **** * CRC of the corresponding row in the EEPROM's redundant copy. If the CRC
1130:Generated_Source\PSoC4/cy_em_eeprom.c **** * matches - copies the data to the "datAddr" from EEPROM redundant copy. If the
1131:Generated_Source\PSoC4/cy_em_eeprom.c **** * CRC of the redundant copy does not match - returns bad checksum.
1132:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1133:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param startAddr
1134:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address that points to the start of the specified row.
1135:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1136:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param datAddr
1137:Generated_Source\PSoC4/cy_em_eeprom.c **** * The start address of where the row data will be copied if the CRC check
1138:Generated_Source\PSoC4/cy_em_eeprom.c **** * will succeed.
1139:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1140:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowOffset
1141:Generated_Source\PSoC4/cy_em_eeprom.c **** * The offset in the row from which the data should be copied.
1142:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1143:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param numBytes
1144:Generated_Source\PSoC4/cy_em_eeprom.c **** * The number of bytes to be copied.
1145:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1146:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1147:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1148:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1149:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1150:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1151:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1152:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
1153:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
1154:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1155:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
1156:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1157:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1158:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
1159:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 dstAddr, uint32 rowOffset, uint32 numBytes, cy_stc_eeprom_context_t * context)
1160:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2219              		.loc 1 1160 0
 2220              		.cfi_startproc
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 61


 2221              		@ args = 4, pretend = 0, frame = 280
 2222              		@ frame_needed = 1, uses_anonymous_args = 0
 2223 0000 90B5     		push	{r4, r7, lr}
 2224              		.cfi_def_cfa_offset 12
 2225              		.cfi_offset 4, -12
 2226              		.cfi_offset 7, -8
 2227              		.cfi_offset 14, -4
 2228 0002 C7B0     		sub	sp, sp, #284
 2229              		.cfi_def_cfa_offset 296
 2230 0004 00AF     		add	r7, sp, #0
 2231              		.cfi_def_cfa_register 7
 2232 0006 F860     		str	r0, [r7, #12]
 2233 0008 B960     		str	r1, [r7, #8]
 2234 000a 7A60     		str	r2, [r7, #4]
 2235 000c 3B60     		str	r3, [r7]
1161:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret;
1162:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1163:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1164:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Calculate the row address in the EEPROM's redundant copy */
1165:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rcStartRowAddr = (startAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2236              		.loc 1 1165 0
 2237 000e 9423     		movs	r3, #148
 2238 0010 5B00     		lsls	r3, r3, #1
 2239 0012 FB18     		adds	r3, r7, r3
 2240 0014 1B68     		ldr	r3, [r3]
 2241 0016 9B69     		ldr	r3, [r3, #24]
 2242 0018 FA68     		ldr	r2, [r7, #12]
 2243 001a D21A     		subs	r2, r2, r3
 2244 001c 9423     		movs	r3, #148
 2245 001e 5B00     		lsls	r3, r3, #1
 2246 0020 FB18     		adds	r3, r7, r3
 2247 0022 1B68     		ldr	r3, [r3]
 2248 0024 1B68     		ldr	r3, [r3]
 2249 0026 D318     		adds	r3, r2, r3
 2250 0028 8822     		movs	r2, #136
 2251 002a 5200     		lsls	r2, r2, #1
 2252 002c BA18     		adds	r2, r7, r2
 2253 002e 1360     		str	r3, [r2]
1166:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1167:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM */
1168:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((*(uint32 *)(startAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 2254              		.loc 1 1168 0
 2255 0030 FB68     		ldr	r3, [r7, #12]
 2256 0032 7C33     		adds	r3, r3, #124
 2257 0034 1C68     		ldr	r4, [r3]
1169:Generated_Source\PSoC4/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2258              		.loc 1 1169 0
 2259 0036 FB68     		ldr	r3, [r7, #12]
 2260 0038 8033     		adds	r3, r3, #128
 2261 003a 8021     		movs	r1, #128
 2262 003c 1800     		movs	r0, r3
 2263 003e FFF7FEFF 		bl	CalcChecksum
 2264 0042 0300     		movs	r3, r0
1168:Generated_Source\PSoC4/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2265              		.loc 1 1168 0
 2266 0044 9C42     		cmp	r4, r3
 2267 0046 0ED1     		bne	.L113
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 62


1170:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_EEPROM_DATA_LEN)))
1171:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1172:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)(dstAddr), (void *)(startAddr + rowOffset), numBytes);
 2268              		.loc 1 1172 0
 2269 0048 B868     		ldr	r0, [r7, #8]
 2270 004a FA68     		ldr	r2, [r7, #12]
 2271 004c 7B68     		ldr	r3, [r7, #4]
 2272 004e D318     		adds	r3, r2, r3
 2273 0050 1900     		movs	r1, r3
 2274 0052 3B68     		ldr	r3, [r7]
 2275 0054 1A00     		movs	r2, r3
 2276 0056 FFF7FEFF 		bl	memcpy
1173:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1174:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2277              		.loc 1 1174 0
 2278 005a 1823     		movs	r3, #24
 2279 005c FF33     		adds	r3, r3, #255
 2280 005e FB18     		adds	r3, r7, r3
 2281 0060 0022     		movs	r2, #0
 2282 0062 1A70     		strb	r2, [r3]
 2283 0064 41E0     		b	.L114
 2284              	.L113:
1175:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1176:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM's redundant copy */
1177:Generated_Source\PSoC4/cy_em_eeprom.c ****     else if((*(uint32 *)(rcStartRowAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 2285              		.loc 1 1177 0
 2286 0066 8823     		movs	r3, #136
 2287 0068 5B00     		lsls	r3, r3, #1
 2288 006a FB18     		adds	r3, r7, r3
 2289 006c 1B68     		ldr	r3, [r3]
 2290 006e 7C33     		adds	r3, r3, #124
 2291 0070 1C68     		ldr	r4, [r3]
1178:Generated_Source\PSoC4/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2292              		.loc 1 1178 0
 2293 0072 8823     		movs	r3, #136
 2294 0074 5B00     		lsls	r3, r3, #1
 2295 0076 FB18     		adds	r3, r7, r3
 2296 0078 1B68     		ldr	r3, [r3]
 2297 007a 8033     		adds	r3, r3, #128
 2298 007c 8021     		movs	r1, #128
 2299 007e 1800     		movs	r0, r3
 2300 0080 FFF7FEFF 		bl	CalcChecksum
 2301 0084 0300     		movs	r3, r0
1177:Generated_Source\PSoC4/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2302              		.loc 1 1177 0
 2303 0086 9C42     		cmp	r4, r3
 2304 0088 2AD1     		bne	.L115
1179:Generated_Source\PSoC4/cy_em_eeprom.c ****                 CY_EM_EEPROM_EEPROM_DATA_LEN)))
1180:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1181:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy the redundant copy row to RAM buffer to avoid read while write (RWW)
1182:Generated_Source\PSoC4/cy_em_eeprom.c ****         * flash exception. The RWW occurs while trying to write and read the data from
1183:Generated_Source\PSoC4/cy_em_eeprom.c ****         * same flash macro.
1184:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1185:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)(writeRamBuffer), (void *)(rcStartRowAddr), CY_EM_EEPROM_FLASH_SIZEOF_
 2305              		.loc 1 1185 0
 2306 008a 8823     		movs	r3, #136
 2307 008c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 63


 2308 008e FB18     		adds	r3, r7, r3
 2309 0090 1968     		ldr	r1, [r3]
 2310 0092 8023     		movs	r3, #128
 2311 0094 5A00     		lsls	r2, r3, #1
 2312 0096 1023     		movs	r3, #16
 2313 0098 FB18     		adds	r3, r7, r3
 2314 009a 1800     		movs	r0, r3
 2315 009c FFF7FEFF 		bl	memcpy
1186:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1187:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Restore bad row data from the RAM buffer */
1188:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(startAddr, (uint32 *)writeRamBuffer, context);
 2316              		.loc 1 1188 0
 2317 00a0 1823     		movs	r3, #24
 2318 00a2 FF33     		adds	r3, r3, #255
 2319 00a4 FC18     		adds	r4, r7, r3
 2320 00a6 9423     		movs	r3, #148
 2321 00a8 5B00     		lsls	r3, r3, #1
 2322 00aa FB18     		adds	r3, r7, r3
 2323 00ac 1A68     		ldr	r2, [r3]
 2324 00ae 1023     		movs	r3, #16
 2325 00b0 F918     		adds	r1, r7, r3
 2326 00b2 FB68     		ldr	r3, [r7, #12]
 2327 00b4 1800     		movs	r0, r3
 2328 00b6 FFF7FEFF 		bl	WriteRow
 2329 00ba 0300     		movs	r3, r0
 2330 00bc 2370     		strb	r3, [r4]
1189:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1190:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 2331              		.loc 1 1190 0
 2332 00be 1823     		movs	r3, #24
 2333 00c0 FF33     		adds	r3, r3, #255
 2334 00c2 FB18     		adds	r3, r7, r3
 2335 00c4 1B78     		ldrb	r3, [r3]
 2336 00c6 002B     		cmp	r3, #0
 2337 00c8 0FD1     		bne	.L114
1191:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1192:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memcpy((void *)(dstAddr), (void *)(writeRamBuffer + rowOffset), numBytes);
 2338              		.loc 1 1192 0
 2339 00ca B868     		ldr	r0, [r7, #8]
 2340 00cc 7B68     		ldr	r3, [r7, #4]
 2341 00ce 9B00     		lsls	r3, r3, #2
 2342 00d0 1022     		movs	r2, #16
 2343 00d2 BA18     		adds	r2, r7, r2
 2344 00d4 D318     		adds	r3, r2, r3
 2345 00d6 3A68     		ldr	r2, [r7]
 2346 00d8 1900     		movs	r1, r3
 2347 00da FFF7FEFF 		bl	memcpy
 2348 00de 04E0     		b	.L114
 2349              	.L115:
1193:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1194:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1195:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1196:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1197:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_BAD_CHECKSUM;
 2350              		.loc 1 1197 0
 2351 00e0 1823     		movs	r3, #24
 2352 00e2 FF33     		adds	r3, r3, #255
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 64


 2353 00e4 FB18     		adds	r3, r7, r3
 2354 00e6 0222     		movs	r2, #2
 2355 00e8 1A70     		strb	r2, [r3]
 2356              	.L114:
1198:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1199:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1200:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2357              		.loc 1 1200 0
 2358 00ea 1823     		movs	r3, #24
 2359 00ec FF33     		adds	r3, r3, #255
 2360 00ee FB18     		adds	r3, r7, r3
 2361 00f0 1B78     		ldrb	r3, [r3]
1201:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2362              		.loc 1 1201 0
 2363 00f2 1800     		movs	r0, r3
 2364 00f4 BD46     		mov	sp, r7
 2365 00f6 47B0     		add	sp, sp, #284
 2366              		@ sp needed
 2367 00f8 90BD     		pop	{r4, r7, pc}
 2368              		.cfi_endproc
 2369              	.LFE14:
 2370              		.size	CheckCrcAndCopy, .-CheckCrcAndCopy
 2371 00fa C046     		.section	.text.GetAddresses,"ax",%progbits
 2372              		.align	2
 2373              		.code	16
 2374              		.thumb_func
 2375              		.type	GetAddresses, %function
 2376              	GetAddresses:
 2377              	.LFB15:
1202:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1203:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1204:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1205:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetAddresses
1206:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1207:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1208:Generated_Source\PSoC4/cy_em_eeprom.c **** * Calculates the start and end address of the row's EEPROM data to be updated.
1209:Generated_Source\PSoC4/cy_em_eeprom.c **** * The start and end are not absolute addresses but a relative addresses in a
1210:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row.
1211:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1212:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param startAddr
1213:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the EEPROM data start address will be returned.
1214:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1215:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param endAddr
1216:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the EEPROM data end address will be returned.
1217:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1218:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param offset
1219:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the calculated offset of the EEPROM header data
1220:Generated_Source\PSoC4/cy_em_eeprom.c **** * will be returned.
1221:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1222:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowNum
1223:Generated_Source\PSoC4/cy_em_eeprom.c **** * The row number that is about to be written.
1224:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1225:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
1226:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the EEPROM header data in the currently analyzed row that may
1227:Generated_Source\PSoC4/cy_em_eeprom.c **** * concern to the row about to be written.
1228:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1229:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param len
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 65


1230:Generated_Source\PSoC4/cy_em_eeprom.c **** * The length of the EEPROM header data in the currently analyzed row that may
1231:Generated_Source\PSoC4/cy_em_eeprom.c **** * concern to the row about to be written.
1232:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1233:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1234:Generated_Source\PSoC4/cy_em_eeprom.c **** * Zero indicates that the currently analyzed row has the data to be written to
1235:Generated_Source\PSoC4/cy_em_eeprom.c **** * the active EEPROM row data locations. Non zero value indicates that there is
1236:Generated_Source\PSoC4/cy_em_eeprom.c **** * no data to be written
1237:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1238:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1239:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, uint32 *endAddr, uint32 *offset, uint32 rowNum,
1240:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 addr, uint32 len)
1241:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2378              		.loc 1 1241 0
 2379              		.cfi_startproc
 2380              		@ args = 8, pretend = 0, frame = 24
 2381              		@ frame_needed = 1, uses_anonymous_args = 0
 2382 0000 80B5     		push	{r7, lr}
 2383              		.cfi_def_cfa_offset 8
 2384              		.cfi_offset 7, -8
 2385              		.cfi_offset 14, -4
 2386 0002 86B0     		sub	sp, sp, #24
 2387              		.cfi_def_cfa_offset 32
 2388 0004 00AF     		add	r7, sp, #0
 2389              		.cfi_def_cfa_register 7
 2390 0006 F860     		str	r0, [r7, #12]
 2391 0008 B960     		str	r1, [r7, #8]
 2392 000a 7A60     		str	r2, [r7, #4]
 2393 000c 3B60     		str	r3, [r7]
1242:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 skip = 0u;
 2394              		.loc 1 1242 0
 2395 000e 0023     		movs	r3, #0
 2396 0010 7B61     		str	r3, [r7, #20]
1243:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1244:Generated_Source\PSoC4/cy_em_eeprom.c ****     *offset =0u;
 2397              		.loc 1 1244 0
 2398 0012 7B68     		ldr	r3, [r7, #4]
 2399 0014 0022     		movs	r2, #0
 2400 0016 1A60     		str	r2, [r3]
1245:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1246:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr, rowNum))
 2401              		.loc 1 1246 0
 2402 0018 3B68     		ldr	r3, [r7]
 2403 001a DA01     		lsls	r2, r3, #7
 2404 001c 3B6A     		ldr	r3, [r7, #32]
 2405 001e 9A42     		cmp	r2, r3
 2406 0020 08D8     		bhi	.L119
 2407              		.loc 1 1246 0 is_stmt 0 discriminator 1
 2408 0022 3B68     		ldr	r3, [r7]
 2409 0024 0133     		adds	r3, r3, #1
 2410 0026 DB01     		lsls	r3, r3, #7
 2411 0028 5A1E     		subs	r2, r3, #1
 2412 002a 3B6A     		ldr	r3, [r7, #32]
 2413 002c 9A42     		cmp	r2, r3
 2414 002e 01D3     		bcc	.L119
 2415              		.loc 1 1246 0 discriminator 3
 2416 0030 0123     		movs	r3, #1
 2417 0032 00E0     		b	.L120
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 66


 2418              	.L119:
 2419              		.loc 1 1246 0 discriminator 4
 2420 0034 0023     		movs	r3, #0
 2421              	.L120:
 2422              		.loc 1 1246 0 discriminator 6
 2423 0036 002B     		cmp	r3, #0
 2424 0038 27D0     		beq	.L121
1247:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1248:Generated_Source\PSoC4/cy_em_eeprom.c ****         *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN + (addr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 2425              		.loc 1 1248 0 is_stmt 1
 2426 003a 3B6A     		ldr	r3, [r7, #32]
 2427 003c 7F22     		movs	r2, #127
 2428 003e 1340     		ands	r3, r2
 2429 0040 8033     		adds	r3, r3, #128
 2430 0042 1A00     		movs	r2, r3
 2431 0044 FB68     		ldr	r3, [r7, #12]
 2432 0046 1A60     		str	r2, [r3]
1249:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1250:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2433              		.loc 1 1250 0
 2434 0048 3A6A     		ldr	r2, [r7, #32]
 2435 004a 7B6A     		ldr	r3, [r7, #36]
 2436 004c D218     		adds	r2, r2, r3
 2437 004e 3B68     		ldr	r3, [r7]
 2438 0050 DB01     		lsls	r3, r3, #7
 2439 0052 9A42     		cmp	r2, r3
 2440 0054 0AD3     		bcc	.L122
 2441              		.loc 1 1250 0 is_stmt 0 discriminator 1
 2442 0056 3A6A     		ldr	r2, [r7, #32]
 2443 0058 7B6A     		ldr	r3, [r7, #36]
 2444 005a D218     		adds	r2, r2, r3
 2445 005c 3B68     		ldr	r3, [r7]
 2446 005e 0133     		adds	r3, r3, #1
 2447 0060 DB01     		lsls	r3, r3, #7
 2448 0062 013B     		subs	r3, r3, #1
 2449 0064 9A42     		cmp	r2, r3
 2450 0066 01D8     		bhi	.L122
 2451              		.loc 1 1250 0 discriminator 3
 2452 0068 0123     		movs	r3, #1
 2453 006a 00E0     		b	.L123
 2454              	.L122:
 2455              		.loc 1 1250 0 discriminator 4
 2456 006c 0023     		movs	r3, #0
 2457              	.L123:
 2458              		.loc 1 1250 0 discriminator 6
 2459 006e 002B     		cmp	r3, #0
 2460 0070 06D0     		beq	.L124
1251:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1252:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = *startAddr + len;
 2461              		.loc 1 1252 0 is_stmt 1
 2462 0072 FB68     		ldr	r3, [r7, #12]
 2463 0074 1A68     		ldr	r2, [r3]
 2464 0076 7B6A     		ldr	r3, [r7, #36]
 2465 0078 D218     		adds	r2, r2, r3
 2466 007a BB68     		ldr	r3, [r7, #8]
 2467 007c 1A60     		str	r2, [r3]
 2468 007e 36E0     		b	.L126
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 67


 2469              	.L124:
1253:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1254:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1255:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1256:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 2470              		.loc 1 1256 0
 2471 0080 BB68     		ldr	r3, [r7, #8]
 2472 0082 8022     		movs	r2, #128
 2473 0084 5200     		lsls	r2, r2, #1
 2474 0086 1A60     		str	r2, [r3]
 2475 0088 31E0     		b	.L126
 2476              	.L121:
1257:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1258:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1259:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1260:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1261:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1262:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2477              		.loc 1 1262 0
 2478 008a 3A6A     		ldr	r2, [r7, #32]
 2479 008c 7B6A     		ldr	r3, [r7, #36]
 2480 008e D218     		adds	r2, r2, r3
 2481 0090 3B68     		ldr	r3, [r7]
 2482 0092 DB01     		lsls	r3, r3, #7
 2483 0094 9A42     		cmp	r2, r3
 2484 0096 0AD3     		bcc	.L127
 2485              		.loc 1 1262 0 is_stmt 0 discriminator 1
 2486 0098 3A6A     		ldr	r2, [r7, #32]
 2487 009a 7B6A     		ldr	r3, [r7, #36]
 2488 009c D218     		adds	r2, r2, r3
 2489 009e 3B68     		ldr	r3, [r7]
 2490 00a0 0133     		adds	r3, r3, #1
 2491 00a2 DB01     		lsls	r3, r3, #7
 2492 00a4 013B     		subs	r3, r3, #1
 2493 00a6 9A42     		cmp	r2, r3
 2494 00a8 01D8     		bhi	.L127
 2495              		.loc 1 1262 0 discriminator 3
 2496 00aa 0123     		movs	r3, #1
 2497 00ac 00E0     		b	.L128
 2498              	.L127:
 2499              		.loc 1 1262 0 discriminator 4
 2500 00ae 0023     		movs	r3, #0
 2501              	.L128:
 2502              		.loc 1 1262 0 discriminator 6
 2503 00b0 002B     		cmp	r3, #0
 2504 00b2 19D0     		beq	.L129
1263:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1264:Generated_Source\PSoC4/cy_em_eeprom.c ****             *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN;
 2505              		.loc 1 1264 0 is_stmt 1
 2506 00b4 FB68     		ldr	r3, [r7, #12]
 2507 00b6 8022     		movs	r2, #128
 2508 00b8 1A60     		str	r2, [r3]
1265:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = (*startAddr + len) - (*startAddr - (addr % CY_EM_EEPROM_EEPROM_DATA_LEN));
 2509              		.loc 1 1265 0
 2510 00ba FB68     		ldr	r3, [r7, #12]
 2511 00bc 1A68     		ldr	r2, [r3]
 2512 00be 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 68


 2513 00c0 D218     		adds	r2, r2, r3
 2514 00c2 3B6A     		ldr	r3, [r7, #32]
 2515 00c4 7F21     		movs	r1, #127
 2516 00c6 1940     		ands	r1, r3
 2517 00c8 FB68     		ldr	r3, [r7, #12]
 2518 00ca 1B68     		ldr	r3, [r3]
 2519 00cc CB1A     		subs	r3, r1, r3
 2520 00ce D218     		adds	r2, r2, r3
 2521 00d0 BB68     		ldr	r3, [r7, #8]
 2522 00d2 1A60     		str	r2, [r3]
1266:Generated_Source\PSoC4/cy_em_eeprom.c ****             *offset = len - (*endAddr - *startAddr);
 2523              		.loc 1 1266 0
 2524 00d4 FB68     		ldr	r3, [r7, #12]
 2525 00d6 1A68     		ldr	r2, [r3]
 2526 00d8 BB68     		ldr	r3, [r7, #8]
 2527 00da 1B68     		ldr	r3, [r3]
 2528 00dc D21A     		subs	r2, r2, r3
 2529 00de 7B6A     		ldr	r3, [r7, #36]
 2530 00e0 D218     		adds	r2, r2, r3
 2531 00e2 7B68     		ldr	r3, [r7, #4]
 2532 00e4 1A60     		str	r2, [r3]
 2533 00e6 02E0     		b	.L126
 2534              	.L129:
1267:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1268:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1269:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1270:Generated_Source\PSoC4/cy_em_eeprom.c ****             skip++;
 2535              		.loc 1 1270 0
 2536 00e8 7B69     		ldr	r3, [r7, #20]
 2537 00ea 0133     		adds	r3, r3, #1
 2538 00ec 7B61     		str	r3, [r7, #20]
 2539              	.L126:
1271:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1272:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1273:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1274:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (skip);
 2540              		.loc 1 1274 0
 2541 00ee 7B69     		ldr	r3, [r7, #20]
1275:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2542              		.loc 1 1275 0
 2543 00f0 1800     		movs	r0, r3
 2544 00f2 BD46     		mov	sp, r7
 2545 00f4 06B0     		add	sp, sp, #24
 2546              		@ sp needed
 2547 00f6 80BD     		pop	{r7, pc}
 2548              		.cfi_endproc
 2549              	.LFE15:
 2550              		.size	GetAddresses, .-GetAddresses
 2551              		.text
 2552              	.Letext0:
 2553              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2554              		.file 3 "Generated_Source\\PSoC4\\cy_em_eeprom.h"
 2555              		.section	.debug_info,"",%progbits
 2556              	.Ldebug_info0:
 2557 0000 B2090000 		.4byte	0x9b2
 2558 0004 0400     		.2byte	0x4
 2559 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 69


 2560 000a 04       		.byte	0x4
 2561 000b 01       		.uleb128 0x1
 2562 000c 32030000 		.4byte	.LASF98
 2563 0010 0C       		.byte	0xc
 2564 0011 C8000000 		.4byte	.LASF99
 2565 0015 22020000 		.4byte	.LASF100
 2566 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2567 001d 00000000 		.4byte	0
 2568 0021 00000000 		.4byte	.Ldebug_line0
 2569 0025 02       		.uleb128 0x2
 2570 0026 01       		.byte	0x1
 2571 0027 06       		.byte	0x6
 2572 0028 9B000000 		.4byte	.LASF0
 2573 002c 02       		.uleb128 0x2
 2574 002d 01       		.byte	0x1
 2575 002e 08       		.byte	0x8
 2576 002f C4040000 		.4byte	.LASF1
 2577 0033 02       		.uleb128 0x2
 2578 0034 02       		.byte	0x2
 2579 0035 05       		.byte	0x5
 2580 0036 DA040000 		.4byte	.LASF2
 2581 003a 02       		.uleb128 0x2
 2582 003b 02       		.byte	0x2
 2583 003c 07       		.byte	0x7
 2584 003d D8020000 		.4byte	.LASF3
 2585 0041 02       		.uleb128 0x2
 2586 0042 04       		.byte	0x4
 2587 0043 05       		.byte	0x5
 2588 0044 1D010000 		.4byte	.LASF4
 2589 0048 02       		.uleb128 0x2
 2590 0049 04       		.byte	0x4
 2591 004a 07       		.byte	0x7
 2592 004b E1010000 		.4byte	.LASF5
 2593 004f 02       		.uleb128 0x2
 2594 0050 08       		.byte	0x8
 2595 0051 05       		.byte	0x5
 2596 0052 8D000000 		.4byte	.LASF6
 2597 0056 02       		.uleb128 0x2
 2598 0057 08       		.byte	0x8
 2599 0058 07       		.byte	0x7
 2600 0059 66000000 		.4byte	.LASF7
 2601 005d 03       		.uleb128 0x3
 2602 005e 04       		.byte	0x4
 2603 005f 05       		.byte	0x5
 2604 0060 696E7400 		.ascii	"int\000"
 2605 0064 02       		.uleb128 0x2
 2606 0065 04       		.byte	0x4
 2607 0066 07       		.byte	0x7
 2608 0067 CB010000 		.4byte	.LASF8
 2609 006b 04       		.uleb128 0x4
 2610 006c 39010000 		.4byte	.LASF9
 2611 0070 02       		.byte	0x2
 2612 0071 E401     		.2byte	0x1e4
 2613 0073 2C000000 		.4byte	0x2c
 2614 0077 04       		.uleb128 0x4
 2615 0078 00000000 		.4byte	.LASF10
 2616 007c 02       		.byte	0x2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 70


 2617 007d E501     		.2byte	0x1e5
 2618 007f 3A000000 		.4byte	0x3a
 2619 0083 04       		.uleb128 0x4
 2620 0084 53010000 		.4byte	.LASF11
 2621 0088 02       		.byte	0x2
 2622 0089 E601     		.2byte	0x1e6
 2623 008b 48000000 		.4byte	0x48
 2624 008f 02       		.uleb128 0x2
 2625 0090 04       		.byte	0x4
 2626 0091 04       		.byte	0x4
 2627 0092 96040000 		.4byte	.LASF12
 2628 0096 02       		.uleb128 0x2
 2629 0097 08       		.byte	0x8
 2630 0098 04       		.byte	0x4
 2631 0099 3F010000 		.4byte	.LASF13
 2632 009d 02       		.uleb128 0x2
 2633 009e 01       		.byte	0x1
 2634 009f 08       		.byte	0x8
 2635 00a0 4D050000 		.4byte	.LASF14
 2636 00a4 04       		.uleb128 0x4
 2637 00a5 2C060000 		.4byte	.LASF15
 2638 00a9 02       		.byte	0x2
 2639 00aa 8602     		.2byte	0x286
 2640 00ac 48000000 		.4byte	0x48
 2641 00b0 04       		.uleb128 0x4
 2642 00b1 D2030000 		.4byte	.LASF16
 2643 00b5 02       		.byte	0x2
 2644 00b6 9002     		.2byte	0x290
 2645 00b8 BC000000 		.4byte	0xbc
 2646 00bc 05       		.uleb128 0x5
 2647 00bd 83000000 		.4byte	0x83
 2648 00c1 02       		.uleb128 0x2
 2649 00c2 08       		.byte	0x8
 2650 00c3 04       		.byte	0x4
 2651 00c4 21040000 		.4byte	.LASF17
 2652 00c8 02       		.uleb128 0x2
 2653 00c9 04       		.byte	0x4
 2654 00ca 07       		.byte	0x7
 2655 00cb 18040000 		.4byte	.LASF18
 2656 00cf 06       		.uleb128 0x6
 2657 00d0 04       		.byte	0x4
 2658 00d1 07       		.uleb128 0x7
 2659 00d2 10       		.byte	0x10
 2660 00d3 03       		.byte	0x3
 2661 00d4 BB       		.byte	0xbb
 2662 00d5 16010000 		.4byte	0x116
 2663 00d9 08       		.uleb128 0x8
 2664 00da 82000000 		.4byte	.LASF19
 2665 00de 03       		.byte	0x3
 2666 00df BE       		.byte	0xbe
 2667 00e0 83000000 		.4byte	0x83
 2668 00e4 00       		.byte	0
 2669 00e5 08       		.uleb128 0x8
 2670 00e6 CA050000 		.4byte	.LASF20
 2671 00ea 03       		.byte	0x3
 2672 00eb C3       		.byte	0xc3
 2673 00ec 83000000 		.4byte	0x83
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 71


 2674 00f0 04       		.byte	0x4
 2675 00f1 08       		.uleb128 0x8
 2676 00f2 B4010000 		.4byte	.LASF21
 2677 00f6 03       		.byte	0x3
 2678 00f7 C6       		.byte	0xc6
 2679 00f8 6B000000 		.4byte	0x6b
 2680 00fc 08       		.byte	0x8
 2681 00fd 08       		.uleb128 0x8
 2682 00fe 0C060000 		.4byte	.LASF22
 2683 0102 03       		.byte	0x3
 2684 0103 CB       		.byte	0xcb
 2685 0104 6B000000 		.4byte	0x6b
 2686 0108 09       		.byte	0x9
 2687 0109 08       		.uleb128 0x8
 2688 010a 26010000 		.4byte	.LASF23
 2689 010e 03       		.byte	0x3
 2690 010f CE       		.byte	0xce
 2691 0110 83000000 		.4byte	0x83
 2692 0114 0C       		.byte	0xc
 2693 0115 00       		.byte	0
 2694 0116 09       		.uleb128 0x9
 2695 0117 AC050000 		.4byte	.LASF24
 2696 011b 03       		.byte	0x3
 2697 011c CF       		.byte	0xcf
 2698 011d D1000000 		.4byte	0xd1
 2699 0121 07       		.uleb128 0x7
 2700 0122 1C       		.byte	0x1c
 2701 0123 03       		.byte	0x3
 2702 0124 D6       		.byte	0xd6
 2703 0125 8A010000 		.4byte	0x18a
 2704 0129 08       		.uleb128 0x8
 2705 012a BA040000 		.4byte	.LASF25
 2706 012e 03       		.byte	0x3
 2707 012f DB       		.byte	0xdb
 2708 0130 83000000 		.4byte	0x83
 2709 0134 00       		.byte	0
 2710 0135 08       		.uleb128 0x8
 2711 0136 4F000000 		.4byte	.LASF26
 2712 013a 03       		.byte	0x3
 2713 013b E0       		.byte	0xe0
 2714 013c 83000000 		.4byte	0x83
 2715 0140 04       		.byte	0x4
 2716 0141 08       		.uleb128 0x8
 2717 0142 86050000 		.4byte	.LASF27
 2718 0146 03       		.byte	0x3
 2719 0147 E3       		.byte	0xe3
 2720 0148 83000000 		.4byte	0x83
 2721 014c 08       		.byte	0x8
 2722 014d 08       		.uleb128 0x8
 2723 014e 82000000 		.4byte	.LASF19
 2724 0152 03       		.byte	0x3
 2725 0153 E6       		.byte	0xe6
 2726 0154 83000000 		.4byte	0x83
 2727 0158 0C       		.byte	0xc
 2728 0159 08       		.uleb128 0x8
 2729 015a CA050000 		.4byte	.LASF20
 2730 015e 03       		.byte	0x3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 72


 2731 015f EB       		.byte	0xeb
 2732 0160 83000000 		.4byte	0x83
 2733 0164 10       		.byte	0x10
 2734 0165 08       		.uleb128 0x8
 2735 0166 B4010000 		.4byte	.LASF21
 2736 016a 03       		.byte	0x3
 2737 016b EE       		.byte	0xee
 2738 016c 6B000000 		.4byte	0x6b
 2739 0170 14       		.byte	0x14
 2740 0171 08       		.uleb128 0x8
 2741 0172 0C060000 		.4byte	.LASF22
 2742 0176 03       		.byte	0x3
 2743 0177 F3       		.byte	0xf3
 2744 0178 6B000000 		.4byte	0x6b
 2745 017c 15       		.byte	0x15
 2746 017d 08       		.uleb128 0x8
 2747 017e 26010000 		.4byte	.LASF23
 2748 0182 03       		.byte	0x3
 2749 0183 F6       		.byte	0xf6
 2750 0184 83000000 		.4byte	0x83
 2751 0188 18       		.byte	0x18
 2752 0189 00       		.byte	0
 2753 018a 09       		.uleb128 0x9
 2754 018b 5A040000 		.4byte	.LASF28
 2755 018f 03       		.byte	0x3
 2756 0190 F7       		.byte	0xf7
 2757 0191 21010000 		.4byte	0x121
 2758 0195 0A       		.uleb128 0xa
 2759 0196 01       		.byte	0x1
 2760 0197 2C000000 		.4byte	0x2c
 2761 019b 03       		.byte	0x3
 2762 019c 1401     		.2byte	0x114
 2763 019e C1010000 		.4byte	0x1c1
 2764 01a2 0B       		.uleb128 0xb
 2765 01a3 F7050000 		.4byte	.LASF29
 2766 01a7 00       		.byte	0
 2767 01a8 0B       		.uleb128 0xb
 2768 01a9 E7030000 		.4byte	.LASF30
 2769 01ad 01       		.byte	0x1
 2770 01ae 0B       		.uleb128 0xb
 2771 01af FE030000 		.4byte	.LASF31
 2772 01b3 02       		.byte	0x2
 2773 01b4 0B       		.uleb128 0xb
 2774 01b5 A4040000 		.4byte	.LASF32
 2775 01b9 03       		.byte	0x3
 2776 01ba 0B       		.uleb128 0xb
 2777 01bb EE000000 		.4byte	.LASF33
 2778 01bf 04       		.byte	0x4
 2779 01c0 00       		.byte	0
 2780 01c1 04       		.uleb128 0x4
 2781 01c2 1A000000 		.4byte	.LASF34
 2782 01c6 03       		.byte	0x3
 2783 01c7 1A01     		.2byte	0x11a
 2784 01c9 95010000 		.4byte	0x195
 2785 01cd 0C       		.uleb128 0xc
 2786 01ce 13050000 		.4byte	.LASF37
 2787 01d2 01       		.byte	0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 73


 2788 01d3 49       		.byte	0x49
 2789 01d4 C1010000 		.4byte	0x1c1
 2790 01d8 00000000 		.4byte	.LFB2
 2791 01dc C6000000 		.4byte	.LFE2-.LFB2
 2792 01e0 01       		.uleb128 0x1
 2793 01e1 9C       		.byte	0x9c
 2794 01e2 11020000 		.4byte	0x211
 2795 01e6 0D       		.uleb128 0xd
 2796 01e7 52050000 		.4byte	.LASF35
 2797 01eb 01       		.byte	0x1
 2798 01ec 49       		.byte	0x49
 2799 01ed 11020000 		.4byte	0x211
 2800 01f1 02       		.uleb128 0x2
 2801 01f2 91       		.byte	0x91
 2802 01f3 64       		.sleb128 -28
 2803 01f4 0D       		.uleb128 0xd
 2804 01f5 7E050000 		.4byte	.LASF36
 2805 01f9 01       		.byte	0x1
 2806 01fa 49       		.byte	0x49
 2807 01fb 17020000 		.4byte	0x217
 2808 01ff 02       		.uleb128 0x2
 2809 0200 91       		.byte	0x91
 2810 0201 60       		.sleb128 -32
 2811 0202 0E       		.uleb128 0xe
 2812 0203 72657400 		.ascii	"ret\000"
 2813 0207 01       		.byte	0x1
 2814 0208 4B       		.byte	0x4b
 2815 0209 C1010000 		.4byte	0x1c1
 2816 020d 02       		.uleb128 0x2
 2817 020e 91       		.byte	0x91
 2818 020f 6F       		.sleb128 -17
 2819 0210 00       		.byte	0
 2820 0211 0F       		.uleb128 0xf
 2821 0212 04       		.byte	0x4
 2822 0213 16010000 		.4byte	0x116
 2823 0217 0F       		.uleb128 0xf
 2824 0218 04       		.byte	0x4
 2825 0219 8A010000 		.4byte	0x18a
 2826 021d 0C       		.uleb128 0xc
 2827 021e 00020000 		.4byte	.LASF38
 2828 0222 01       		.byte	0x1
 2829 0223 88       		.byte	0x88
 2830 0224 C1010000 		.4byte	0x1c1
 2831 0228 00000000 		.4byte	.LFB3
 2832 022c FC020000 		.4byte	.LFE3-.LFB3
 2833 0230 01       		.uleb128 0x1
 2834 0231 9C       		.byte	0x9c
 2835 0232 A1030000 		.4byte	0x3a1
 2836 0236 0D       		.uleb128 0xd
 2837 0237 7D000000 		.4byte	.LASF39
 2838 023b 01       		.byte	0x1
 2839 023c 88       		.byte	0x88
 2840 023d 83000000 		.4byte	0x83
 2841 0241 03       		.uleb128 0x3
 2842 0242 91       		.byte	0x91
 2843 0243 A47F     		.sleb128 -92
 2844 0245 0D       		.uleb128 0xd
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 74


 2845 0246 1A030000 		.4byte	.LASF40
 2846 024a 01       		.byte	0x1
 2847 024b 88       		.byte	0x88
 2848 024c CF000000 		.4byte	0xcf
 2849 0250 03       		.uleb128 0x3
 2850 0251 91       		.byte	0x91
 2851 0252 A07F     		.sleb128 -96
 2852 0254 0D       		.uleb128 0xd
 2853 0255 C3000000 		.4byte	.LASF41
 2854 0259 01       		.byte	0x1
 2855 025a 88       		.byte	0x88
 2856 025b 83000000 		.4byte	0x83
 2857 025f 03       		.uleb128 0x3
 2858 0260 91       		.byte	0x91
 2859 0261 9C7F     		.sleb128 -100
 2860 0263 0D       		.uleb128 0xd
 2861 0264 7E050000 		.4byte	.LASF36
 2862 0268 01       		.byte	0x1
 2863 0269 88       		.byte	0x88
 2864 026a 17020000 		.4byte	0x217
 2865 026e 03       		.uleb128 0x3
 2866 026f 91       		.byte	0x91
 2867 0270 987F     		.sleb128 -104
 2868 0272 0E       		.uleb128 0xe
 2869 0273 72657400 		.ascii	"ret\000"
 2870 0277 01       		.byte	0x1
 2871 0278 8A       		.byte	0x8a
 2872 0279 C1010000 		.4byte	0x1c1
 2873 027d 02       		.uleb128 0x2
 2874 027e 91       		.byte	0x91
 2875 027f 6F       		.sleb128 -17
 2876 0280 0E       		.uleb128 0xe
 2877 0281 6900     		.ascii	"i\000"
 2878 0283 01       		.byte	0x1
 2879 0284 8B       		.byte	0x8b
 2880 0285 83000000 		.4byte	0x83
 2881 0289 02       		.uleb128 0x2
 2882 028a 91       		.byte	0x91
 2883 028b 68       		.sleb128 -24
 2884 028c 10       		.uleb128 0x10
 2885 028d 59050000 		.4byte	.LASF42
 2886 0291 01       		.byte	0x1
 2887 0292 8C       		.byte	0x8c
 2888 0293 83000000 		.4byte	0x83
 2889 0297 02       		.uleb128 0x2
 2890 0298 91       		.byte	0x91
 2891 0299 64       		.sleb128 -28
 2892 029a 10       		.uleb128 0x10
 2893 029b C0030000 		.4byte	.LASF43
 2894 029f 01       		.byte	0x1
 2895 02a0 8D       		.byte	0x8d
 2896 02a1 83000000 		.4byte	0x83
 2897 02a5 03       		.uleb128 0x3
 2898 02a6 91       		.byte	0x91
 2899 02a7 BC7F     		.sleb128 -68
 2900 02a9 10       		.uleb128 0x10
 2901 02aa 9F050000 		.4byte	.LASF44
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 75


 2902 02ae 01       		.byte	0x1
 2903 02af 8E       		.byte	0x8e
 2904 02b0 83000000 		.4byte	0x83
 2905 02b4 03       		.uleb128 0x3
 2906 02b5 91       		.byte	0x91
 2907 02b6 B07F     		.sleb128 -80
 2908 02b8 10       		.uleb128 0x10
 2909 02b9 25030000 		.4byte	.LASF45
 2910 02bd 01       		.byte	0x1
 2911 02be 8F       		.byte	0x8f
 2912 02bf 83000000 		.4byte	0x83
 2913 02c3 02       		.uleb128 0x2
 2914 02c4 91       		.byte	0x91
 2915 02c5 60       		.sleb128 -32
 2916 02c6 10       		.uleb128 0x10
 2917 02c7 5A010000 		.4byte	.LASF46
 2918 02cb 01       		.byte	0x1
 2919 02cc 90       		.byte	0x90
 2920 02cd 83000000 		.4byte	0x83
 2921 02d1 03       		.uleb128 0x3
 2922 02d2 91       		.byte	0x91
 2923 02d3 B87F     		.sleb128 -72
 2924 02d5 10       		.uleb128 0x10
 2925 02d6 1A060000 		.4byte	.LASF47
 2926 02da 01       		.byte	0x1
 2927 02db 91       		.byte	0x91
 2928 02dc 83000000 		.4byte	0x83
 2929 02e0 02       		.uleb128 0x2
 2930 02e1 91       		.byte	0x91
 2931 02e2 5C       		.sleb128 -36
 2932 02e3 10       		.uleb128 0x10
 2933 02e4 FD040000 		.4byte	.LASF48
 2934 02e8 01       		.byte	0x1
 2935 02e9 92       		.byte	0x92
 2936 02ea 83000000 		.4byte	0x83
 2937 02ee 02       		.uleb128 0x2
 2938 02ef 91       		.byte	0x91
 2939 02f0 58       		.sleb128 -40
 2940 02f1 10       		.uleb128 0x10
 2941 02f2 66060000 		.4byte	.LASF49
 2942 02f6 01       		.byte	0x1
 2943 02f7 93       		.byte	0x93
 2944 02f8 83000000 		.4byte	0x83
 2945 02fc 02       		.uleb128 0x2
 2946 02fd 91       		.byte	0x91
 2947 02fe 54       		.sleb128 -44
 2948 02ff 11       		.uleb128 0x11
 2949 0300 42000000 		.4byte	.LBB2
 2950 0304 AC020000 		.4byte	.LBE2-.LBB2
 2951 0308 10       		.uleb128 0x10
 2952 0309 DD050000 		.4byte	.LASF50
 2953 030d 01       		.byte	0x1
 2954 030e 98       		.byte	0x98
 2955 030f 83000000 		.4byte	0x83
 2956 0313 02       		.uleb128 0x2
 2957 0314 91       		.byte	0x91
 2958 0315 50       		.sleb128 -48
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 76


 2959 0316 10       		.uleb128 0x10
 2960 0317 C3050000 		.4byte	.LASF51
 2961 031b 01       		.byte	0x1
 2962 031c 99       		.byte	0x99
 2963 031d 83000000 		.4byte	0x83
 2964 0321 02       		.uleb128 0x2
 2965 0322 91       		.byte	0x91
 2966 0323 4C       		.sleb128 -52
 2967 0324 10       		.uleb128 0x10
 2968 0325 53040000 		.4byte	.LASF52
 2969 0329 01       		.byte	0x1
 2970 032a 9B       		.byte	0x9b
 2971 032b 83000000 		.4byte	0x83
 2972 032f 02       		.uleb128 0x2
 2973 0330 91       		.byte	0x91
 2974 0331 44       		.sleb128 -60
 2975 0332 11       		.uleb128 0x11
 2976 0333 5A000000 		.4byte	.LBB3
 2977 0337 8C020000 		.4byte	.LBE3-.LBB3
 2978 033b 10       		.uleb128 0x10
 2979 033c 7D010000 		.4byte	.LASF53
 2980 0340 01       		.byte	0x1
 2981 0341 9F       		.byte	0x9f
 2982 0342 83000000 		.4byte	0x83
 2983 0346 02       		.uleb128 0x2
 2984 0347 91       		.byte	0x91
 2985 0348 48       		.sleb128 -56
 2986 0349 10       		.uleb128 0x10
 2987 034a 4A060000 		.4byte	.LASF54
 2988 034e 01       		.byte	0x1
 2989 034f A4       		.byte	0xa4
 2990 0350 83000000 		.4byte	0x83
 2991 0354 02       		.uleb128 0x2
 2992 0355 91       		.byte	0x91
 2993 0356 40       		.sleb128 -64
 2994 0357 12       		.uleb128 0x12
 2995 0358 F4000000 		.4byte	.LBB4
 2996 035c 26000000 		.4byte	.LBE4-.LBB4
 2997 0360 74030000 		.4byte	0x374
 2998 0364 10       		.uleb128 0x10
 2999 0365 94010000 		.4byte	.LASF55
 3000 0369 01       		.byte	0x1
 3001 036a C1       		.byte	0xc1
 3002 036b 83000000 		.4byte	0x83
 3003 036f 03       		.uleb128 0x3
 3004 0370 91       		.byte	0x91
 3005 0371 B47F     		.sleb128 -76
 3006 0373 00       		.byte	0
 3007 0374 11       		.uleb128 0x11
 3008 0375 2E020000 		.4byte	.LBB5
 3009 0379 A8000000 		.4byte	.LBE5-.LBB5
 3010 037d 13       		.uleb128 0x13
 3011 037e 68050000 		.4byte	.LASF56
 3012 0382 01       		.byte	0x1
 3013 0383 1501     		.2byte	0x115
 3014 0385 83000000 		.4byte	0x83
 3015 0389 03       		.uleb128 0x3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 77


 3016 038a 91       		.byte	0x91
 3017 038b AC7F     		.sleb128 -84
 3018 038d 13       		.uleb128 0x13
 3019 038e 9C040000 		.4byte	.LASF57
 3020 0392 01       		.byte	0x1
 3021 0393 1601     		.2byte	0x116
 3022 0395 83000000 		.4byte	0x83
 3023 0399 03       		.uleb128 0x3
 3024 039a 91       		.byte	0x91
 3025 039b A87F     		.sleb128 -88
 3026 039d 00       		.byte	0
 3027 039e 00       		.byte	0
 3028 039f 00       		.byte	0
 3029 03a0 00       		.byte	0
 3030 03a1 14       		.uleb128 0x14
 3031 03a2 40040000 		.4byte	.LASF58
 3032 03a6 01       		.byte	0x1
 3033 03a7 7A01     		.2byte	0x17a
 3034 03a9 C1010000 		.4byte	0x1c1
 3035 03ad 00000000 		.4byte	.LFB4
 3036 03b1 D8030000 		.4byte	.LFE4-.LFB4
 3037 03b5 01       		.uleb128 0x1
 3038 03b6 9C       		.byte	0x9c
 3039 03b7 19050000 		.4byte	0x519
 3040 03bb 15       		.uleb128 0x15
 3041 03bc 7D000000 		.4byte	.LASF39
 3042 03c0 01       		.byte	0x1
 3043 03c1 7A01     		.2byte	0x17a
 3044 03c3 83000000 		.4byte	0x83
 3045 03c7 03       		.uleb128 0x3
 3046 03c8 91       		.byte	0x91
 3047 03c9 AC7D     		.sleb128 -340
 3048 03cb 15       		.uleb128 0x15
 3049 03cc 1A030000 		.4byte	.LASF40
 3050 03d0 01       		.byte	0x1
 3051 03d1 7A01     		.2byte	0x17a
 3052 03d3 CF000000 		.4byte	0xcf
 3053 03d7 03       		.uleb128 0x3
 3054 03d8 91       		.byte	0x91
 3055 03d9 A87D     		.sleb128 -344
 3056 03db 15       		.uleb128 0x15
 3057 03dc C3000000 		.4byte	.LASF41
 3058 03e0 01       		.byte	0x1
 3059 03e1 7A01     		.2byte	0x17a
 3060 03e3 83000000 		.4byte	0x83
 3061 03e7 03       		.uleb128 0x3
 3062 03e8 91       		.byte	0x91
 3063 03e9 A47D     		.sleb128 -348
 3064 03eb 15       		.uleb128 0x15
 3065 03ec 7E050000 		.4byte	.LASF36
 3066 03f0 01       		.byte	0x1
 3067 03f1 7A01     		.2byte	0x17a
 3068 03f3 17020000 		.4byte	0x217
 3069 03f7 03       		.uleb128 0x3
 3070 03f8 91       		.byte	0x91
 3071 03f9 A07D     		.sleb128 -352
 3072 03fb 16       		.uleb128 0x16
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 78


 3073 03fc 72657400 		.ascii	"ret\000"
 3074 0400 01       		.byte	0x1
 3075 0401 7C01     		.2byte	0x17c
 3076 0403 C1010000 		.4byte	0x1c1
 3077 0407 02       		.uleb128 0x2
 3078 0408 91       		.byte	0x91
 3079 0409 6F       		.sleb128 -17
 3080 040a 16       		.uleb128 0x16
 3081 040b 6900     		.ascii	"i\000"
 3082 040d 01       		.byte	0x1
 3083 040e 7D01     		.2byte	0x17d
 3084 0410 83000000 		.4byte	0x83
 3085 0414 02       		.uleb128 0x2
 3086 0415 91       		.byte	0x91
 3087 0416 68       		.sleb128 -24
 3088 0417 13       		.uleb128 0x13
 3089 0418 90040000 		.4byte	.LASF59
 3090 041c 01       		.byte	0x1
 3091 041d 7E01     		.2byte	0x17e
 3092 041f 83000000 		.4byte	0x83
 3093 0423 02       		.uleb128 0x2
 3094 0424 91       		.byte	0x91
 3095 0425 64       		.sleb128 -28
 3096 0426 13       		.uleb128 0x13
 3097 0427 EB020000 		.4byte	.LASF60
 3098 042b 01       		.byte	0x1
 3099 042c 7F01     		.2byte	0x17f
 3100 042e 83000000 		.4byte	0x83
 3101 0432 02       		.uleb128 0x2
 3102 0433 91       		.byte	0x91
 3103 0434 48       		.sleb128 -56
 3104 0435 13       		.uleb128 0x13
 3105 0436 25050000 		.4byte	.LASF61
 3106 043a 01       		.byte	0x1
 3107 043b 8001     		.2byte	0x180
 3108 043d 19050000 		.4byte	0x519
 3109 0441 03       		.uleb128 0x3
 3110 0442 91       		.byte	0x91
 3111 0443 C47D     		.sleb128 -316
 3112 0445 13       		.uleb128 0x13
 3113 0446 68050000 		.4byte	.LASF56
 3114 044a 01       		.byte	0x1
 3115 044b 8101     		.2byte	0x181
 3116 044d 83000000 		.4byte	0x83
 3117 0451 03       		.uleb128 0x3
 3118 0452 91       		.byte	0x91
 3119 0453 C07D     		.sleb128 -320
 3120 0455 13       		.uleb128 0x13
 3121 0456 9C040000 		.4byte	.LASF57
 3122 045a 01       		.byte	0x1
 3123 045b 8201     		.2byte	0x182
 3124 045d 83000000 		.4byte	0x83
 3125 0461 03       		.uleb128 0x3
 3126 0462 91       		.byte	0x91
 3127 0463 BC7D     		.sleb128 -324
 3128 0465 13       		.uleb128 0x13
 3129 0466 94050000 		.4byte	.LASF62
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 79


 3130 046a 01       		.byte	0x1
 3131 046b 8301     		.2byte	0x183
 3132 046d 83000000 		.4byte	0x83
 3133 0471 02       		.uleb128 0x2
 3134 0472 91       		.byte	0x91
 3135 0473 60       		.sleb128 -32
 3136 0474 13       		.uleb128 0x13
 3137 0475 56060000 		.4byte	.LASF63
 3138 0479 01       		.byte	0x1
 3139 047a 8401     		.2byte	0x184
 3140 047c 83000000 		.4byte	0x83
 3141 0480 03       		.uleb128 0x3
 3142 0481 91       		.byte	0x91
 3143 0482 B87D     		.sleb128 -328
 3144 0484 13       		.uleb128 0x13
 3145 0485 08030000 		.4byte	.LASF64
 3146 0489 01       		.byte	0x1
 3147 048a 8501     		.2byte	0x185
 3148 048c 83000000 		.4byte	0x83
 3149 0490 03       		.uleb128 0x3
 3150 0491 91       		.byte	0x91
 3151 0492 B47D     		.sleb128 -332
 3152 0494 13       		.uleb128 0x13
 3153 0495 12000000 		.4byte	.LASF65
 3154 0499 01       		.byte	0x1
 3155 049a 8601     		.2byte	0x186
 3156 049c CF000000 		.4byte	0xcf
 3157 04a0 02       		.uleb128 0x2
 3158 04a1 91       		.byte	0x91
 3159 04a2 4C       		.sleb128 -52
 3160 04a3 13       		.uleb128 0x13
 3161 04a4 66060000 		.4byte	.LASF49
 3162 04a8 01       		.byte	0x1
 3163 04a9 8701     		.2byte	0x187
 3164 04ab 83000000 		.4byte	0x83
 3165 04af 02       		.uleb128 0x2
 3166 04b0 91       		.byte	0x91
 3167 04b1 5C       		.sleb128 -36
 3168 04b2 11       		.uleb128 0x11
 3169 04b3 50000000 		.4byte	.LBB6
 3170 04b7 72030000 		.4byte	.LBE6-.LBB6
 3171 04bb 13       		.uleb128 0x13
 3172 04bc 5C000000 		.4byte	.LASF66
 3173 04c0 01       		.byte	0x1
 3174 04c1 8C01     		.2byte	0x18c
 3175 04c3 83000000 		.4byte	0x83
 3176 04c7 02       		.uleb128 0x2
 3177 04c8 91       		.byte	0x91
 3178 04c9 54       		.sleb128 -44
 3179 04ca 13       		.uleb128 0x13
 3180 04cb 6A010000 		.4byte	.LASF67
 3181 04cf 01       		.byte	0x1
 3182 04d0 8D01     		.2byte	0x18d
 3183 04d2 83000000 		.4byte	0x83
 3184 04d6 03       		.uleb128 0x3
 3185 04d7 91       		.byte	0x91
 3186 04d8 B07D     		.sleb128 -336
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 80


 3187 04da 17       		.uleb128 0x17
 3188 04db 00000000 		.4byte	.Ldebug_ranges0+0
 3189 04df 13       		.uleb128 0x13
 3190 04e0 EF040000 		.4byte	.LASF68
 3191 04e4 01       		.byte	0x1
 3192 04e5 9101     		.2byte	0x191
 3193 04e7 83000000 		.4byte	0x83
 3194 04eb 02       		.uleb128 0x2
 3195 04ec 91       		.byte	0x91
 3196 04ed 58       		.sleb128 -40
 3197 04ee 13       		.uleb128 0x13
 3198 04ef 53040000 		.4byte	.LASF52
 3199 04f3 01       		.byte	0x1
 3200 04f4 9301     		.2byte	0x193
 3201 04f6 83000000 		.4byte	0x83
 3202 04fa 02       		.uleb128 0x2
 3203 04fb 91       		.byte	0x91
 3204 04fc 50       		.sleb128 -48
 3205 04fd 11       		.uleb128 0x11
 3206 04fe 88020000 		.4byte	.LBB8
 3207 0502 42000000 		.4byte	.LBE8-.LBB8
 3208 0506 13       		.uleb128 0x13
 3209 0507 C2010000 		.4byte	.LASF69
 3210 050b 01       		.byte	0x1
 3211 050c F301     		.2byte	0x1f3
 3212 050e 83000000 		.4byte	0x83
 3213 0512 02       		.uleb128 0x2
 3214 0513 91       		.byte	0x91
 3215 0514 44       		.sleb128 -60
 3216 0515 00       		.byte	0
 3217 0516 00       		.byte	0
 3218 0517 00       		.byte	0
 3219 0518 00       		.byte	0
 3220 0519 18       		.uleb128 0x18
 3221 051a 83000000 		.4byte	0x83
 3222 051e 29050000 		.4byte	0x529
 3223 0522 19       		.uleb128 0x19
 3224 0523 C8000000 		.4byte	0xc8
 3225 0527 3F       		.byte	0x3f
 3226 0528 00       		.byte	0
 3227 0529 14       		.uleb128 0x14
 3228 052a 2D040000 		.4byte	.LASF70
 3229 052e 01       		.byte	0x1
 3230 052f 4F02     		.2byte	0x24f
 3231 0531 C1010000 		.4byte	0x1c1
 3232 0535 00000000 		.4byte	.LFB5
 3233 0539 48010000 		.4byte	.LFE5-.LFB5
 3234 053d 01       		.uleb128 0x1
 3235 053e 9C       		.byte	0x9c
 3236 053f C6050000 		.4byte	0x5c6
 3237 0543 15       		.uleb128 0x15
 3238 0544 7E050000 		.4byte	.LASF36
 3239 0548 01       		.byte	0x1
 3240 0549 4F02     		.2byte	0x24f
 3241 054b 17020000 		.4byte	0x217
 3242 054f 03       		.uleb128 0x3
 3243 0550 91       		.byte	0x91
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 81


 3244 0551 D47D     		.sleb128 -300
 3245 0553 16       		.uleb128 0x16
 3246 0554 6900     		.ascii	"i\000"
 3247 0556 01       		.byte	0x1
 3248 0557 5102     		.2byte	0x251
 3249 0559 83000000 		.4byte	0x83
 3250 055d 02       		.uleb128 0x2
 3251 055e 91       		.byte	0x91
 3252 055f 6C       		.sleb128 -20
 3253 0560 13       		.uleb128 0x13
 3254 0561 53040000 		.4byte	.LASF52
 3255 0565 01       		.byte	0x1
 3256 0566 5202     		.2byte	0x252
 3257 0568 83000000 		.4byte	0x83
 3258 056c 02       		.uleb128 0x2
 3259 056d 91       		.byte	0x91
 3260 056e 64       		.sleb128 -28
 3261 056f 13       		.uleb128 0x13
 3262 0570 56060000 		.4byte	.LASF63
 3263 0574 01       		.byte	0x1
 3264 0575 5302     		.2byte	0x253
 3265 0577 83000000 		.4byte	0x83
 3266 057b 02       		.uleb128 0x2
 3267 057c 91       		.byte	0x91
 3268 057d 5C       		.sleb128 -36
 3269 057e 13       		.uleb128 0x13
 3270 057f 08030000 		.4byte	.LASF64
 3271 0583 01       		.byte	0x1
 3272 0584 5402     		.2byte	0x254
 3273 0586 83000000 		.4byte	0x83
 3274 058a 02       		.uleb128 0x2
 3275 058b 91       		.byte	0x91
 3276 058c 58       		.sleb128 -40
 3277 058d 16       		.uleb128 0x16
 3278 058e 72657400 		.ascii	"ret\000"
 3279 0592 01       		.byte	0x1
 3280 0593 5502     		.2byte	0x255
 3281 0595 C1010000 		.4byte	0x1c1
 3282 0599 02       		.uleb128 0x2
 3283 059a 91       		.byte	0x91
 3284 059b 6B       		.sleb128 -21
 3285 059c 13       		.uleb128 0x13
 3286 059d 25050000 		.4byte	.LASF61
 3287 05a1 01       		.byte	0x1
 3288 05a2 5602     		.2byte	0x256
 3289 05a4 19050000 		.4byte	0x519
 3290 05a8 03       		.uleb128 0x3
 3291 05a9 91       		.byte	0x91
 3292 05aa D87D     		.sleb128 -296
 3293 05ac 11       		.uleb128 0x11
 3294 05ad 56000000 		.4byte	.LBB10
 3295 05b1 DE000000 		.4byte	.LBE10-.LBB10
 3296 05b5 13       		.uleb128 0x13
 3297 05b6 5C000000 		.4byte	.LASF66
 3298 05ba 01       		.byte	0x1
 3299 05bb 6302     		.2byte	0x263
 3300 05bd 83000000 		.4byte	0x83
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 82


 3301 05c1 02       		.uleb128 0x2
 3302 05c2 91       		.byte	0x91
 3303 05c3 60       		.sleb128 -32
 3304 05c4 00       		.byte	0
 3305 05c5 00       		.byte	0
 3306 05c6 1A       		.uleb128 0x1a
 3307 05c7 06010000 		.4byte	.LASF71
 3308 05cb 01       		.byte	0x1
 3309 05cc B602     		.2byte	0x2b6
 3310 05ce 83000000 		.4byte	0x83
 3311 05d2 00000000 		.4byte	.LFB6
 3312 05d6 16000000 		.4byte	.LFE6-.LFB6
 3313 05da 01       		.uleb128 0x1
 3314 05db 9C       		.byte	0x9c
 3315 05dc F0050000 		.4byte	0x5f0
 3316 05e0 15       		.uleb128 0x15
 3317 05e1 7E050000 		.4byte	.LASF36
 3318 05e5 01       		.byte	0x1
 3319 05e6 B602     		.2byte	0x2b6
 3320 05e8 17020000 		.4byte	0x217
 3321 05ec 02       		.uleb128 0x2
 3322 05ed 91       		.byte	0x91
 3323 05ee 74       		.sleb128 -12
 3324 05ef 00       		.byte	0
 3325 05f0 1B       		.uleb128 0x1b
 3326 05f1 B0000000 		.4byte	.LASF76
 3327 05f5 01       		.byte	0x1
 3328 05f6 D002     		.2byte	0x2d0
 3329 05f8 00000000 		.4byte	.LFB7
 3330 05fc 68000000 		.4byte	.LFE7-.LFB7
 3331 0600 01       		.uleb128 0x1
 3332 0601 9C       		.byte	0x9c
 3333 0602 61060000 		.4byte	0x661
 3334 0606 15       		.uleb128 0x15
 3335 0607 46010000 		.4byte	.LASF72
 3336 060b 01       		.byte	0x1
 3337 060c D002     		.2byte	0x2d0
 3338 060e 61060000 		.4byte	0x661
 3339 0612 02       		.uleb128 0x2
 3340 0613 91       		.byte	0x91
 3341 0614 64       		.sleb128 -28
 3342 0615 15       		.uleb128 0x15
 3343 0616 7E050000 		.4byte	.LASF36
 3344 061a 01       		.byte	0x1
 3345 061b D002     		.2byte	0x2d0
 3346 061d 17020000 		.4byte	0x217
 3347 0621 02       		.uleb128 0x2
 3348 0622 91       		.byte	0x91
 3349 0623 60       		.sleb128 -32
 3350 0624 13       		.uleb128 0x13
 3351 0625 53040000 		.4byte	.LASF52
 3352 0629 01       		.byte	0x1
 3353 062a D202     		.2byte	0x2d2
 3354 062c 83000000 		.4byte	0x83
 3355 0630 02       		.uleb128 0x2
 3356 0631 91       		.byte	0x91
 3357 0632 68       		.sleb128 -24
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 83


 3358 0633 13       		.uleb128 0x13
 3359 0634 E4040000 		.4byte	.LASF73
 3360 0638 01       		.byte	0x1
 3361 0639 D302     		.2byte	0x2d3
 3362 063b 83000000 		.4byte	0x83
 3363 063f 02       		.uleb128 0x2
 3364 0640 91       		.byte	0x91
 3365 0641 74       		.sleb128 -12
 3366 0642 13       		.uleb128 0x13
 3367 0643 8C010000 		.4byte	.LASF74
 3368 0647 01       		.byte	0x1
 3369 0648 D402     		.2byte	0x2d4
 3370 064a 83000000 		.4byte	0x83
 3371 064e 02       		.uleb128 0x2
 3372 064f 91       		.byte	0x91
 3373 0650 70       		.sleb128 -16
 3374 0651 13       		.uleb128 0x13
 3375 0652 33000000 		.4byte	.LASF75
 3376 0656 01       		.byte	0x1
 3377 0657 D502     		.2byte	0x2d5
 3378 0659 83000000 		.4byte	0x83
 3379 065d 02       		.uleb128 0x2
 3380 065e 91       		.byte	0x91
 3381 065f 6C       		.sleb128 -20
 3382 0660 00       		.byte	0
 3383 0661 0F       		.uleb128 0xf
 3384 0662 04       		.byte	0x4
 3385 0663 83000000 		.4byte	0x83
 3386 0667 1C       		.uleb128 0x1c
 3387 0668 E4050000 		.4byte	.LASF80
 3388 066c 01       		.byte	0x1
 3389 066d FC02     		.2byte	0x2fc
 3390 066f 83000000 		.4byte	0x83
 3391 0673 00000000 		.4byte	.LFB8
 3392 0677 3E000000 		.4byte	.LFE8-.LFB8
 3393 067b 01       		.uleb128 0x1
 3394 067c 9C       		.byte	0x9c
 3395 067d AF060000 		.4byte	0x6af
 3396 0681 15       		.uleb128 0x15
 3397 0682 53040000 		.4byte	.LASF52
 3398 0686 01       		.byte	0x1
 3399 0687 FC02     		.2byte	0x2fc
 3400 0689 83000000 		.4byte	0x83
 3401 068d 02       		.uleb128 0x2
 3402 068e 91       		.byte	0x91
 3403 068f 6C       		.sleb128 -20
 3404 0690 15       		.uleb128 0x15
 3405 0691 7E050000 		.4byte	.LASF36
 3406 0695 01       		.byte	0x1
 3407 0696 FC02     		.2byte	0x2fc
 3408 0698 17020000 		.4byte	0x217
 3409 069c 02       		.uleb128 0x2
 3410 069d 91       		.byte	0x91
 3411 069e 68       		.sleb128 -24
 3412 069f 13       		.uleb128 0x13
 3413 06a0 33000000 		.4byte	.LASF75
 3414 06a4 01       		.byte	0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 84


 3415 06a5 FE02     		.2byte	0x2fe
 3416 06a7 83000000 		.4byte	0x83
 3417 06ab 02       		.uleb128 0x2
 3418 06ac 91       		.byte	0x91
 3419 06ad 74       		.sleb128 -12
 3420 06ae 00       		.byte	0
 3421 06af 1B       		.uleb128 0x1b
 3422 06b0 72040000 		.4byte	.LASF77
 3423 06b4 01       		.byte	0x1
 3424 06b5 2903     		.2byte	0x329
 3425 06b7 00000000 		.4byte	.LFB9
 3426 06bb B0000000 		.4byte	.LFE9-.LFB9
 3427 06bf 01       		.uleb128 0x1
 3428 06c0 9C       		.byte	0x9c
 3429 06c1 02070000 		.4byte	0x702
 3430 06c5 15       		.uleb128 0x15
 3431 06c6 53040000 		.4byte	.LASF52
 3432 06ca 01       		.byte	0x1
 3433 06cb 2903     		.2byte	0x329
 3434 06cd 83000000 		.4byte	0x83
 3435 06d1 02       		.uleb128 0x2
 3436 06d2 91       		.byte	0x91
 3437 06d3 74       		.sleb128 -12
 3438 06d4 15       		.uleb128 0x15
 3439 06d5 07000000 		.4byte	.LASF78
 3440 06d9 01       		.byte	0x1
 3441 06da 2A03     		.2byte	0x32a
 3442 06dc 61060000 		.4byte	0x661
 3443 06e0 02       		.uleb128 0x2
 3444 06e1 91       		.byte	0x91
 3445 06e2 70       		.sleb128 -16
 3446 06e3 15       		.uleb128 0x15
 3447 06e4 FD020000 		.4byte	.LASF79
 3448 06e8 01       		.byte	0x1
 3449 06e9 2A03     		.2byte	0x32a
 3450 06eb 61060000 		.4byte	0x661
 3451 06ef 02       		.uleb128 0x2
 3452 06f0 91       		.byte	0x91
 3453 06f1 6C       		.sleb128 -20
 3454 06f2 15       		.uleb128 0x15
 3455 06f3 7E050000 		.4byte	.LASF36
 3456 06f7 01       		.byte	0x1
 3457 06f8 2A03     		.2byte	0x32a
 3458 06fa 17020000 		.4byte	0x217
 3459 06fe 02       		.uleb128 0x2
 3460 06ff 91       		.byte	0x91
 3461 0700 68       		.sleb128 -24
 3462 0701 00       		.byte	0
 3463 0702 1C       		.uleb128 0x1c
 3464 0703 35060000 		.4byte	.LASF81
 3465 0707 01       		.byte	0x1
 3466 0708 7303     		.2byte	0x373
 3467 070a 6B000000 		.4byte	0x6b
 3468 070e 00000000 		.4byte	.LFB10
 3469 0712 AE000000 		.4byte	.LFE10-.LFB10
 3470 0716 01       		.uleb128 0x1
 3471 0717 9C       		.byte	0x9c
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 85


 3472 0718 66070000 		.4byte	0x766
 3473 071c 15       		.uleb128 0x15
 3474 071d 42060000 		.4byte	.LASF82
 3475 0721 01       		.byte	0x1
 3476 0722 7303     		.2byte	0x373
 3477 0724 66070000 		.4byte	0x766
 3478 0728 02       		.uleb128 0x2
 3479 0729 91       		.byte	0x91
 3480 072a 6C       		.sleb128 -20
 3481 072b 1D       		.uleb128 0x1d
 3482 072c 6C656E00 		.ascii	"len\000"
 3483 0730 01       		.byte	0x1
 3484 0731 7303     		.2byte	0x373
 3485 0733 83000000 		.4byte	0x83
 3486 0737 02       		.uleb128 0x2
 3487 0738 91       		.byte	0x91
 3488 0739 68       		.sleb128 -24
 3489 073a 16       		.uleb128 0x16
 3490 073b 63726300 		.ascii	"crc\000"
 3491 073f 01       		.byte	0x1
 3492 0740 7503     		.2byte	0x375
 3493 0742 6B000000 		.4byte	0x6b
 3494 0746 02       		.uleb128 0x2
 3495 0747 91       		.byte	0x91
 3496 0748 77       		.sleb128 -9
 3497 0749 16       		.uleb128 0x16
 3498 074a 6900     		.ascii	"i\000"
 3499 074c 01       		.byte	0x1
 3500 074d 7603     		.2byte	0x376
 3501 074f 6B000000 		.4byte	0x6b
 3502 0753 02       		.uleb128 0x2
 3503 0754 91       		.byte	0x91
 3504 0755 76       		.sleb128 -10
 3505 0756 16       		.uleb128 0x16
 3506 0757 636E7400 		.ascii	"cnt\000"
 3507 075b 01       		.byte	0x1
 3508 075c 7703     		.2byte	0x377
 3509 075e 77000000 		.4byte	0x77
 3510 0762 02       		.uleb128 0x2
 3511 0763 91       		.byte	0x91
 3512 0764 74       		.sleb128 -12
 3513 0765 00       		.byte	0
 3514 0766 0F       		.uleb128 0xf
 3515 0767 04       		.byte	0x4
 3516 0768 6B000000 		.4byte	0x6b
 3517 076c 1C       		.uleb128 0x1c
 3518 076d 84040000 		.4byte	.LASF83
 3519 0771 01       		.byte	0x1
 3520 0772 9403     		.2byte	0x394
 3521 0774 C1010000 		.4byte	0x1c1
 3522 0778 00000000 		.4byte	.LFB11
 3523 077c 6A000000 		.4byte	.LFE11-.LFB11
 3524 0780 01       		.uleb128 0x1
 3525 0781 9C       		.byte	0x9c
 3526 0782 C3070000 		.4byte	0x7c3
 3527 0786 15       		.uleb128 0x15
 3528 0787 52050000 		.4byte	.LASF35
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 86


 3529 078b 01       		.byte	0x1
 3530 078c 9403     		.2byte	0x394
 3531 078e 11020000 		.4byte	0x211
 3532 0792 02       		.uleb128 0x2
 3533 0793 91       		.byte	0x91
 3534 0794 64       		.sleb128 -28
 3535 0795 16       		.uleb128 0x16
 3536 0796 72657400 		.ascii	"ret\000"
 3537 079a 01       		.byte	0x1
 3538 079b 9603     		.2byte	0x396
 3539 079d C1010000 		.4byte	0x1c1
 3540 07a1 02       		.uleb128 0x2
 3541 07a2 91       		.byte	0x91
 3542 07a3 77       		.sleb128 -9
 3543 07a4 13       		.uleb128 0x13
 3544 07a5 68050000 		.4byte	.LASF56
 3545 07a9 01       		.byte	0x1
 3546 07aa 9703     		.2byte	0x397
 3547 07ac 83000000 		.4byte	0x83
 3548 07b0 02       		.uleb128 0x2
 3549 07b1 91       		.byte	0x91
 3550 07b2 70       		.sleb128 -16
 3551 07b3 13       		.uleb128 0x13
 3552 07b4 9C040000 		.4byte	.LASF57
 3553 07b8 01       		.byte	0x1
 3554 07b9 9803     		.2byte	0x398
 3555 07bb 83000000 		.4byte	0x83
 3556 07bf 02       		.uleb128 0x2
 3557 07c0 91       		.byte	0x91
 3558 07c1 6C       		.sleb128 -20
 3559 07c2 00       		.byte	0
 3560 07c3 1E       		.uleb128 0x1e
 3561 07c4 A7000000 		.4byte	.LASF84
 3562 07c8 01       		.byte	0x1
 3563 07c9 B703     		.2byte	0x3b7
 3564 07cb C1010000 		.4byte	0x1c1
 3565 07cf 00000000 		.4byte	.LFB12
 3566 07d3 4A000000 		.4byte	.LFE12-.LFB12
 3567 07d7 01       		.uleb128 0x1
 3568 07d8 9C       		.byte	0x9c
 3569 07d9 37080000 		.4byte	0x837
 3570 07dd 15       		.uleb128 0x15
 3571 07de D2040000 		.4byte	.LASF85
 3572 07e2 01       		.byte	0x1
 3573 07e3 B703     		.2byte	0x3b7
 3574 07e5 83000000 		.4byte	0x83
 3575 07e9 02       		.uleb128 0x2
 3576 07ea 91       		.byte	0x91
 3577 07eb 64       		.sleb128 -28
 3578 07ec 15       		.uleb128 0x15
 3579 07ed 42060000 		.4byte	.LASF82
 3580 07f1 01       		.byte	0x1
 3581 07f2 B703     		.2byte	0x3b7
 3582 07f4 61060000 		.4byte	0x661
 3583 07f8 02       		.uleb128 0x2
 3584 07f9 91       		.byte	0x91
 3585 07fa 60       		.sleb128 -32
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 87


 3586 07fb 15       		.uleb128 0x15
 3587 07fc 7E050000 		.4byte	.LASF36
 3588 0800 01       		.byte	0x1
 3589 0801 B803     		.2byte	0x3b8
 3590 0803 17020000 		.4byte	0x217
 3591 0807 02       		.uleb128 0x2
 3592 0808 91       		.byte	0x91
 3593 0809 5C       		.sleb128 -36
 3594 080a 16       		.uleb128 0x16
 3595 080b 72657400 		.ascii	"ret\000"
 3596 080f 01       		.byte	0x1
 3597 0810 BA03     		.2byte	0x3ba
 3598 0812 C1010000 		.4byte	0x1c1
 3599 0816 02       		.uleb128 0x2
 3600 0817 91       		.byte	0x91
 3601 0818 77       		.sleb128 -9
 3602 0819 16       		.uleb128 0x16
 3603 081a 726300   		.ascii	"rc\000"
 3604 081d 01       		.byte	0x1
 3605 081e BC03     		.2byte	0x3bc
 3606 0820 A4000000 		.4byte	0xa4
 3607 0824 02       		.uleb128 0x2
 3608 0825 91       		.byte	0x91
 3609 0826 6C       		.sleb128 -20
 3610 0827 13       		.uleb128 0x13
 3611 0828 D8030000 		.4byte	.LASF86
 3612 082c 01       		.byte	0x1
 3613 082d BD03     		.2byte	0x3bd
 3614 082f 83000000 		.4byte	0x83
 3615 0833 02       		.uleb128 0x2
 3616 0834 91       		.byte	0x91
 3617 0835 70       		.sleb128 -16
 3618 0836 00       		.byte	0
 3619 0837 1E       		.uleb128 0x1e
 3620 0838 DE030000 		.4byte	.LASF87
 3621 083c 01       		.byte	0x1
 3622 083d 1304     		.2byte	0x413
 3623 083f C1010000 		.4byte	0x1c1
 3624 0843 00000000 		.4byte	.LFB13
 3625 0847 80000000 		.4byte	.LFE13-.LFB13
 3626 084b 01       		.uleb128 0x1
 3627 084c 9C       		.byte	0x9c
 3628 084d 9D080000 		.4byte	0x89d
 3629 0851 15       		.uleb128 0x15
 3630 0852 D2040000 		.4byte	.LASF85
 3631 0856 01       		.byte	0x1
 3632 0857 1304     		.2byte	0x413
 3633 0859 83000000 		.4byte	0x83
 3634 085d 02       		.uleb128 0x2
 3635 085e 91       		.byte	0x91
 3636 085f 64       		.sleb128 -28
 3637 0860 15       		.uleb128 0x15
 3638 0861 A8010000 		.4byte	.LASF88
 3639 0865 01       		.byte	0x1
 3640 0866 1304     		.2byte	0x413
 3641 0868 83000000 		.4byte	0x83
 3642 086c 02       		.uleb128 0x2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 88


 3643 086d 91       		.byte	0x91
 3644 086e 60       		.sleb128 -32
 3645 086f 15       		.uleb128 0x15
 3646 0870 7E050000 		.4byte	.LASF36
 3647 0874 01       		.byte	0x1
 3648 0875 1404     		.2byte	0x414
 3649 0877 17020000 		.4byte	0x217
 3650 087b 02       		.uleb128 0x2
 3651 087c 91       		.byte	0x91
 3652 087d 5C       		.sleb128 -36
 3653 087e 13       		.uleb128 0x13
 3654 087f 56060000 		.4byte	.LASF63
 3655 0883 01       		.byte	0x1
 3656 0884 1604     		.2byte	0x416
 3657 0886 83000000 		.4byte	0x83
 3658 088a 02       		.uleb128 0x2
 3659 088b 91       		.byte	0x91
 3660 088c 68       		.sleb128 -24
 3661 088d 16       		.uleb128 0x16
 3662 088e 72657400 		.ascii	"ret\000"
 3663 0892 01       		.byte	0x1
 3664 0893 1704     		.2byte	0x417
 3665 0895 C1010000 		.4byte	0x1c1
 3666 0899 02       		.uleb128 0x2
 3667 089a 91       		.byte	0x91
 3668 089b 6F       		.sleb128 -17
 3669 089c 00       		.byte	0
 3670 089d 1E       		.uleb128 0x1e
 3671 089e 12020000 		.4byte	.LASF89
 3672 08a2 01       		.byte	0x1
 3673 08a3 8604     		.2byte	0x486
 3674 08a5 C1010000 		.4byte	0x1c1
 3675 08a9 00000000 		.4byte	.LFB14
 3676 08ad FA000000 		.4byte	.LFE14-.LFB14
 3677 08b1 01       		.uleb128 0x1
 3678 08b2 9C       		.byte	0x9c
 3679 08b3 35090000 		.4byte	0x935
 3680 08b7 15       		.uleb128 0x15
 3681 08b8 68050000 		.4byte	.LASF56
 3682 08bc 01       		.byte	0x1
 3683 08bd 8604     		.2byte	0x486
 3684 08bf 83000000 		.4byte	0x83
 3685 08c3 03       		.uleb128 0x3
 3686 08c4 91       		.byte	0x91
 3687 08c5 E47D     		.sleb128 -284
 3688 08c7 15       		.uleb128 0x15
 3689 08c8 40000000 		.4byte	.LASF90
 3690 08cc 01       		.byte	0x1
 3691 08cd 8704     		.2byte	0x487
 3692 08cf 83000000 		.4byte	0x83
 3693 08d3 03       		.uleb128 0x3
 3694 08d4 91       		.byte	0x91
 3695 08d5 E07D     		.sleb128 -288
 3696 08d7 15       		.uleb128 0x15
 3697 08d8 34050000 		.4byte	.LASF91
 3698 08dc 01       		.byte	0x1
 3699 08dd 8704     		.2byte	0x487
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 89


 3700 08df 83000000 		.4byte	0x83
 3701 08e3 03       		.uleb128 0x3
 3702 08e4 91       		.byte	0x91
 3703 08e5 DC7D     		.sleb128 -292
 3704 08e7 15       		.uleb128 0x15
 3705 08e8 D8010000 		.4byte	.LASF92
 3706 08ec 01       		.byte	0x1
 3707 08ed 8704     		.2byte	0x487
 3708 08ef 83000000 		.4byte	0x83
 3709 08f3 03       		.uleb128 0x3
 3710 08f4 91       		.byte	0x91
 3711 08f5 D87D     		.sleb128 -296
 3712 08f7 15       		.uleb128 0x15
 3713 08f8 7E050000 		.4byte	.LASF36
 3714 08fc 01       		.byte	0x1
 3715 08fd 8704     		.2byte	0x487
 3716 08ff 17020000 		.4byte	0x217
 3717 0903 02       		.uleb128 0x2
 3718 0904 91       		.byte	0x91
 3719 0905 00       		.sleb128 0
 3720 0906 16       		.uleb128 0x16
 3721 0907 72657400 		.ascii	"ret\000"
 3722 090b 01       		.byte	0x1
 3723 090c 8904     		.2byte	0x489
 3724 090e C1010000 		.4byte	0x1c1
 3725 0912 02       		.uleb128 0x2
 3726 0913 91       		.byte	0x91
 3727 0914 6F       		.sleb128 -17
 3728 0915 13       		.uleb128 0x13
 3729 0916 25050000 		.4byte	.LASF61
 3730 091a 01       		.byte	0x1
 3731 091b 8A04     		.2byte	0x48a
 3732 091d 19050000 		.4byte	0x519
 3733 0921 03       		.uleb128 0x3
 3734 0922 91       		.byte	0x91
 3735 0923 E87D     		.sleb128 -280
 3736 0925 13       		.uleb128 0x13
 3737 0926 3E050000 		.4byte	.LASF93
 3738 092a 01       		.byte	0x1
 3739 092b 8D04     		.2byte	0x48d
 3740 092d 83000000 		.4byte	0x83
 3741 0931 02       		.uleb128 0x2
 3742 0932 91       		.byte	0x91
 3743 0933 68       		.sleb128 -24
 3744 0934 00       		.byte	0
 3745 0935 1F       		.uleb128 0x1f
 3746 0936 F3010000 		.4byte	.LASF94
 3747 093a 01       		.byte	0x1
 3748 093b D704     		.2byte	0x4d7
 3749 093d 83000000 		.4byte	0x83
 3750 0941 00000000 		.4byte	.LFB15
 3751 0945 F8000000 		.4byte	.LFE15-.LFB15
 3752 0949 01       		.uleb128 0x1
 3753 094a 9C       		.byte	0x9c
 3754 094b 15       		.uleb128 0x15
 3755 094c 68050000 		.4byte	.LASF56
 3756 0950 01       		.byte	0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 90


 3757 0951 D704     		.2byte	0x4d7
 3758 0953 61060000 		.4byte	0x661
 3759 0957 02       		.uleb128 0x2
 3760 0958 91       		.byte	0x91
 3761 0959 6C       		.sleb128 -20
 3762 095a 15       		.uleb128 0x15
 3763 095b 9C040000 		.4byte	.LASF57
 3764 095f 01       		.byte	0x1
 3765 0960 D704     		.2byte	0x4d7
 3766 0962 61060000 		.4byte	0x661
 3767 0966 02       		.uleb128 0x2
 3768 0967 91       		.byte	0x91
 3769 0968 68       		.sleb128 -24
 3770 0969 15       		.uleb128 0x15
 3771 096a 77050000 		.4byte	.LASF95
 3772 096e 01       		.byte	0x1
 3773 096f D704     		.2byte	0x4d7
 3774 0971 61060000 		.4byte	0x661
 3775 0975 02       		.uleb128 0x2
 3776 0976 91       		.byte	0x91
 3777 0977 64       		.sleb128 -28
 3778 0978 15       		.uleb128 0x15
 3779 0979 48000000 		.4byte	.LASF96
 3780 097d 01       		.byte	0x1
 3781 097e D704     		.2byte	0x4d7
 3782 0980 83000000 		.4byte	0x83
 3783 0984 02       		.uleb128 0x2
 3784 0985 91       		.byte	0x91
 3785 0986 60       		.sleb128 -32
 3786 0987 15       		.uleb128 0x15
 3787 0988 7D000000 		.4byte	.LASF39
 3788 098c 01       		.byte	0x1
 3789 098d D804     		.2byte	0x4d8
 3790 098f 83000000 		.4byte	0x83
 3791 0993 02       		.uleb128 0x2
 3792 0994 91       		.byte	0x91
 3793 0995 00       		.sleb128 0
 3794 0996 1D       		.uleb128 0x1d
 3795 0997 6C656E00 		.ascii	"len\000"
 3796 099b 01       		.byte	0x1
 3797 099c D804     		.2byte	0x4d8
 3798 099e 83000000 		.4byte	0x83
 3799 09a2 02       		.uleb128 0x2
 3800 09a3 91       		.byte	0x91
 3801 09a4 04       		.sleb128 4
 3802 09a5 13       		.uleb128 0x13
 3803 09a6 72050000 		.4byte	.LASF97
 3804 09aa 01       		.byte	0x1
 3805 09ab DA04     		.2byte	0x4da
 3806 09ad 83000000 		.4byte	0x83
 3807 09b1 02       		.uleb128 0x2
 3808 09b2 91       		.byte	0x91
 3809 09b3 74       		.sleb128 -12
 3810 09b4 00       		.byte	0
 3811 09b5 00       		.byte	0
 3812              		.section	.debug_abbrev,"",%progbits
 3813              	.Ldebug_abbrev0:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 91


 3814 0000 01       		.uleb128 0x1
 3815 0001 11       		.uleb128 0x11
 3816 0002 01       		.byte	0x1
 3817 0003 25       		.uleb128 0x25
 3818 0004 0E       		.uleb128 0xe
 3819 0005 13       		.uleb128 0x13
 3820 0006 0B       		.uleb128 0xb
 3821 0007 03       		.uleb128 0x3
 3822 0008 0E       		.uleb128 0xe
 3823 0009 1B       		.uleb128 0x1b
 3824 000a 0E       		.uleb128 0xe
 3825 000b 55       		.uleb128 0x55
 3826 000c 17       		.uleb128 0x17
 3827 000d 11       		.uleb128 0x11
 3828 000e 01       		.uleb128 0x1
 3829 000f 10       		.uleb128 0x10
 3830 0010 17       		.uleb128 0x17
 3831 0011 00       		.byte	0
 3832 0012 00       		.byte	0
 3833 0013 02       		.uleb128 0x2
 3834 0014 24       		.uleb128 0x24
 3835 0015 00       		.byte	0
 3836 0016 0B       		.uleb128 0xb
 3837 0017 0B       		.uleb128 0xb
 3838 0018 3E       		.uleb128 0x3e
 3839 0019 0B       		.uleb128 0xb
 3840 001a 03       		.uleb128 0x3
 3841 001b 0E       		.uleb128 0xe
 3842 001c 00       		.byte	0
 3843 001d 00       		.byte	0
 3844 001e 03       		.uleb128 0x3
 3845 001f 24       		.uleb128 0x24
 3846 0020 00       		.byte	0
 3847 0021 0B       		.uleb128 0xb
 3848 0022 0B       		.uleb128 0xb
 3849 0023 3E       		.uleb128 0x3e
 3850 0024 0B       		.uleb128 0xb
 3851 0025 03       		.uleb128 0x3
 3852 0026 08       		.uleb128 0x8
 3853 0027 00       		.byte	0
 3854 0028 00       		.byte	0
 3855 0029 04       		.uleb128 0x4
 3856 002a 16       		.uleb128 0x16
 3857 002b 00       		.byte	0
 3858 002c 03       		.uleb128 0x3
 3859 002d 0E       		.uleb128 0xe
 3860 002e 3A       		.uleb128 0x3a
 3861 002f 0B       		.uleb128 0xb
 3862 0030 3B       		.uleb128 0x3b
 3863 0031 05       		.uleb128 0x5
 3864 0032 49       		.uleb128 0x49
 3865 0033 13       		.uleb128 0x13
 3866 0034 00       		.byte	0
 3867 0035 00       		.byte	0
 3868 0036 05       		.uleb128 0x5
 3869 0037 35       		.uleb128 0x35
 3870 0038 00       		.byte	0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 92


 3871 0039 49       		.uleb128 0x49
 3872 003a 13       		.uleb128 0x13
 3873 003b 00       		.byte	0
 3874 003c 00       		.byte	0
 3875 003d 06       		.uleb128 0x6
 3876 003e 0F       		.uleb128 0xf
 3877 003f 00       		.byte	0
 3878 0040 0B       		.uleb128 0xb
 3879 0041 0B       		.uleb128 0xb
 3880 0042 00       		.byte	0
 3881 0043 00       		.byte	0
 3882 0044 07       		.uleb128 0x7
 3883 0045 13       		.uleb128 0x13
 3884 0046 01       		.byte	0x1
 3885 0047 0B       		.uleb128 0xb
 3886 0048 0B       		.uleb128 0xb
 3887 0049 3A       		.uleb128 0x3a
 3888 004a 0B       		.uleb128 0xb
 3889 004b 3B       		.uleb128 0x3b
 3890 004c 0B       		.uleb128 0xb
 3891 004d 01       		.uleb128 0x1
 3892 004e 13       		.uleb128 0x13
 3893 004f 00       		.byte	0
 3894 0050 00       		.byte	0
 3895 0051 08       		.uleb128 0x8
 3896 0052 0D       		.uleb128 0xd
 3897 0053 00       		.byte	0
 3898 0054 03       		.uleb128 0x3
 3899 0055 0E       		.uleb128 0xe
 3900 0056 3A       		.uleb128 0x3a
 3901 0057 0B       		.uleb128 0xb
 3902 0058 3B       		.uleb128 0x3b
 3903 0059 0B       		.uleb128 0xb
 3904 005a 49       		.uleb128 0x49
 3905 005b 13       		.uleb128 0x13
 3906 005c 38       		.uleb128 0x38
 3907 005d 0B       		.uleb128 0xb
 3908 005e 00       		.byte	0
 3909 005f 00       		.byte	0
 3910 0060 09       		.uleb128 0x9
 3911 0061 16       		.uleb128 0x16
 3912 0062 00       		.byte	0
 3913 0063 03       		.uleb128 0x3
 3914 0064 0E       		.uleb128 0xe
 3915 0065 3A       		.uleb128 0x3a
 3916 0066 0B       		.uleb128 0xb
 3917 0067 3B       		.uleb128 0x3b
 3918 0068 0B       		.uleb128 0xb
 3919 0069 49       		.uleb128 0x49
 3920 006a 13       		.uleb128 0x13
 3921 006b 00       		.byte	0
 3922 006c 00       		.byte	0
 3923 006d 0A       		.uleb128 0xa
 3924 006e 04       		.uleb128 0x4
 3925 006f 01       		.byte	0x1
 3926 0070 0B       		.uleb128 0xb
 3927 0071 0B       		.uleb128 0xb
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 93


 3928 0072 49       		.uleb128 0x49
 3929 0073 13       		.uleb128 0x13
 3930 0074 3A       		.uleb128 0x3a
 3931 0075 0B       		.uleb128 0xb
 3932 0076 3B       		.uleb128 0x3b
 3933 0077 05       		.uleb128 0x5
 3934 0078 01       		.uleb128 0x1
 3935 0079 13       		.uleb128 0x13
 3936 007a 00       		.byte	0
 3937 007b 00       		.byte	0
 3938 007c 0B       		.uleb128 0xb
 3939 007d 28       		.uleb128 0x28
 3940 007e 00       		.byte	0
 3941 007f 03       		.uleb128 0x3
 3942 0080 0E       		.uleb128 0xe
 3943 0081 1C       		.uleb128 0x1c
 3944 0082 0B       		.uleb128 0xb
 3945 0083 00       		.byte	0
 3946 0084 00       		.byte	0
 3947 0085 0C       		.uleb128 0xc
 3948 0086 2E       		.uleb128 0x2e
 3949 0087 01       		.byte	0x1
 3950 0088 3F       		.uleb128 0x3f
 3951 0089 19       		.uleb128 0x19
 3952 008a 03       		.uleb128 0x3
 3953 008b 0E       		.uleb128 0xe
 3954 008c 3A       		.uleb128 0x3a
 3955 008d 0B       		.uleb128 0xb
 3956 008e 3B       		.uleb128 0x3b
 3957 008f 0B       		.uleb128 0xb
 3958 0090 27       		.uleb128 0x27
 3959 0091 19       		.uleb128 0x19
 3960 0092 49       		.uleb128 0x49
 3961 0093 13       		.uleb128 0x13
 3962 0094 11       		.uleb128 0x11
 3963 0095 01       		.uleb128 0x1
 3964 0096 12       		.uleb128 0x12
 3965 0097 06       		.uleb128 0x6
 3966 0098 40       		.uleb128 0x40
 3967 0099 18       		.uleb128 0x18
 3968 009a 9642     		.uleb128 0x2116
 3969 009c 19       		.uleb128 0x19
 3970 009d 01       		.uleb128 0x1
 3971 009e 13       		.uleb128 0x13
 3972 009f 00       		.byte	0
 3973 00a0 00       		.byte	0
 3974 00a1 0D       		.uleb128 0xd
 3975 00a2 05       		.uleb128 0x5
 3976 00a3 00       		.byte	0
 3977 00a4 03       		.uleb128 0x3
 3978 00a5 0E       		.uleb128 0xe
 3979 00a6 3A       		.uleb128 0x3a
 3980 00a7 0B       		.uleb128 0xb
 3981 00a8 3B       		.uleb128 0x3b
 3982 00a9 0B       		.uleb128 0xb
 3983 00aa 49       		.uleb128 0x49
 3984 00ab 13       		.uleb128 0x13
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 94


 3985 00ac 02       		.uleb128 0x2
 3986 00ad 18       		.uleb128 0x18
 3987 00ae 00       		.byte	0
 3988 00af 00       		.byte	0
 3989 00b0 0E       		.uleb128 0xe
 3990 00b1 34       		.uleb128 0x34
 3991 00b2 00       		.byte	0
 3992 00b3 03       		.uleb128 0x3
 3993 00b4 08       		.uleb128 0x8
 3994 00b5 3A       		.uleb128 0x3a
 3995 00b6 0B       		.uleb128 0xb
 3996 00b7 3B       		.uleb128 0x3b
 3997 00b8 0B       		.uleb128 0xb
 3998 00b9 49       		.uleb128 0x49
 3999 00ba 13       		.uleb128 0x13
 4000 00bb 02       		.uleb128 0x2
 4001 00bc 18       		.uleb128 0x18
 4002 00bd 00       		.byte	0
 4003 00be 00       		.byte	0
 4004 00bf 0F       		.uleb128 0xf
 4005 00c0 0F       		.uleb128 0xf
 4006 00c1 00       		.byte	0
 4007 00c2 0B       		.uleb128 0xb
 4008 00c3 0B       		.uleb128 0xb
 4009 00c4 49       		.uleb128 0x49
 4010 00c5 13       		.uleb128 0x13
 4011 00c6 00       		.byte	0
 4012 00c7 00       		.byte	0
 4013 00c8 10       		.uleb128 0x10
 4014 00c9 34       		.uleb128 0x34
 4015 00ca 00       		.byte	0
 4016 00cb 03       		.uleb128 0x3
 4017 00cc 0E       		.uleb128 0xe
 4018 00cd 3A       		.uleb128 0x3a
 4019 00ce 0B       		.uleb128 0xb
 4020 00cf 3B       		.uleb128 0x3b
 4021 00d0 0B       		.uleb128 0xb
 4022 00d1 49       		.uleb128 0x49
 4023 00d2 13       		.uleb128 0x13
 4024 00d3 02       		.uleb128 0x2
 4025 00d4 18       		.uleb128 0x18
 4026 00d5 00       		.byte	0
 4027 00d6 00       		.byte	0
 4028 00d7 11       		.uleb128 0x11
 4029 00d8 0B       		.uleb128 0xb
 4030 00d9 01       		.byte	0x1
 4031 00da 11       		.uleb128 0x11
 4032 00db 01       		.uleb128 0x1
 4033 00dc 12       		.uleb128 0x12
 4034 00dd 06       		.uleb128 0x6
 4035 00de 00       		.byte	0
 4036 00df 00       		.byte	0
 4037 00e0 12       		.uleb128 0x12
 4038 00e1 0B       		.uleb128 0xb
 4039 00e2 01       		.byte	0x1
 4040 00e3 11       		.uleb128 0x11
 4041 00e4 01       		.uleb128 0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 95


 4042 00e5 12       		.uleb128 0x12
 4043 00e6 06       		.uleb128 0x6
 4044 00e7 01       		.uleb128 0x1
 4045 00e8 13       		.uleb128 0x13
 4046 00e9 00       		.byte	0
 4047 00ea 00       		.byte	0
 4048 00eb 13       		.uleb128 0x13
 4049 00ec 34       		.uleb128 0x34
 4050 00ed 00       		.byte	0
 4051 00ee 03       		.uleb128 0x3
 4052 00ef 0E       		.uleb128 0xe
 4053 00f0 3A       		.uleb128 0x3a
 4054 00f1 0B       		.uleb128 0xb
 4055 00f2 3B       		.uleb128 0x3b
 4056 00f3 05       		.uleb128 0x5
 4057 00f4 49       		.uleb128 0x49
 4058 00f5 13       		.uleb128 0x13
 4059 00f6 02       		.uleb128 0x2
 4060 00f7 18       		.uleb128 0x18
 4061 00f8 00       		.byte	0
 4062 00f9 00       		.byte	0
 4063 00fa 14       		.uleb128 0x14
 4064 00fb 2E       		.uleb128 0x2e
 4065 00fc 01       		.byte	0x1
 4066 00fd 3F       		.uleb128 0x3f
 4067 00fe 19       		.uleb128 0x19
 4068 00ff 03       		.uleb128 0x3
 4069 0100 0E       		.uleb128 0xe
 4070 0101 3A       		.uleb128 0x3a
 4071 0102 0B       		.uleb128 0xb
 4072 0103 3B       		.uleb128 0x3b
 4073 0104 05       		.uleb128 0x5
 4074 0105 27       		.uleb128 0x27
 4075 0106 19       		.uleb128 0x19
 4076 0107 49       		.uleb128 0x49
 4077 0108 13       		.uleb128 0x13
 4078 0109 11       		.uleb128 0x11
 4079 010a 01       		.uleb128 0x1
 4080 010b 12       		.uleb128 0x12
 4081 010c 06       		.uleb128 0x6
 4082 010d 40       		.uleb128 0x40
 4083 010e 18       		.uleb128 0x18
 4084 010f 9642     		.uleb128 0x2116
 4085 0111 19       		.uleb128 0x19
 4086 0112 01       		.uleb128 0x1
 4087 0113 13       		.uleb128 0x13
 4088 0114 00       		.byte	0
 4089 0115 00       		.byte	0
 4090 0116 15       		.uleb128 0x15
 4091 0117 05       		.uleb128 0x5
 4092 0118 00       		.byte	0
 4093 0119 03       		.uleb128 0x3
 4094 011a 0E       		.uleb128 0xe
 4095 011b 3A       		.uleb128 0x3a
 4096 011c 0B       		.uleb128 0xb
 4097 011d 3B       		.uleb128 0x3b
 4098 011e 05       		.uleb128 0x5
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 96


 4099 011f 49       		.uleb128 0x49
 4100 0120 13       		.uleb128 0x13
 4101 0121 02       		.uleb128 0x2
 4102 0122 18       		.uleb128 0x18
 4103 0123 00       		.byte	0
 4104 0124 00       		.byte	0
 4105 0125 16       		.uleb128 0x16
 4106 0126 34       		.uleb128 0x34
 4107 0127 00       		.byte	0
 4108 0128 03       		.uleb128 0x3
 4109 0129 08       		.uleb128 0x8
 4110 012a 3A       		.uleb128 0x3a
 4111 012b 0B       		.uleb128 0xb
 4112 012c 3B       		.uleb128 0x3b
 4113 012d 05       		.uleb128 0x5
 4114 012e 49       		.uleb128 0x49
 4115 012f 13       		.uleb128 0x13
 4116 0130 02       		.uleb128 0x2
 4117 0131 18       		.uleb128 0x18
 4118 0132 00       		.byte	0
 4119 0133 00       		.byte	0
 4120 0134 17       		.uleb128 0x17
 4121 0135 0B       		.uleb128 0xb
 4122 0136 01       		.byte	0x1
 4123 0137 55       		.uleb128 0x55
 4124 0138 17       		.uleb128 0x17
 4125 0139 00       		.byte	0
 4126 013a 00       		.byte	0
 4127 013b 18       		.uleb128 0x18
 4128 013c 01       		.uleb128 0x1
 4129 013d 01       		.byte	0x1
 4130 013e 49       		.uleb128 0x49
 4131 013f 13       		.uleb128 0x13
 4132 0140 01       		.uleb128 0x1
 4133 0141 13       		.uleb128 0x13
 4134 0142 00       		.byte	0
 4135 0143 00       		.byte	0
 4136 0144 19       		.uleb128 0x19
 4137 0145 21       		.uleb128 0x21
 4138 0146 00       		.byte	0
 4139 0147 49       		.uleb128 0x49
 4140 0148 13       		.uleb128 0x13
 4141 0149 2F       		.uleb128 0x2f
 4142 014a 0B       		.uleb128 0xb
 4143 014b 00       		.byte	0
 4144 014c 00       		.byte	0
 4145 014d 1A       		.uleb128 0x1a
 4146 014e 2E       		.uleb128 0x2e
 4147 014f 01       		.byte	0x1
 4148 0150 3F       		.uleb128 0x3f
 4149 0151 19       		.uleb128 0x19
 4150 0152 03       		.uleb128 0x3
 4151 0153 0E       		.uleb128 0xe
 4152 0154 3A       		.uleb128 0x3a
 4153 0155 0B       		.uleb128 0xb
 4154 0156 3B       		.uleb128 0x3b
 4155 0157 05       		.uleb128 0x5
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 97


 4156 0158 27       		.uleb128 0x27
 4157 0159 19       		.uleb128 0x19
 4158 015a 49       		.uleb128 0x49
 4159 015b 13       		.uleb128 0x13
 4160 015c 11       		.uleb128 0x11
 4161 015d 01       		.uleb128 0x1
 4162 015e 12       		.uleb128 0x12
 4163 015f 06       		.uleb128 0x6
 4164 0160 40       		.uleb128 0x40
 4165 0161 18       		.uleb128 0x18
 4166 0162 9742     		.uleb128 0x2117
 4167 0164 19       		.uleb128 0x19
 4168 0165 01       		.uleb128 0x1
 4169 0166 13       		.uleb128 0x13
 4170 0167 00       		.byte	0
 4171 0168 00       		.byte	0
 4172 0169 1B       		.uleb128 0x1b
 4173 016a 2E       		.uleb128 0x2e
 4174 016b 01       		.byte	0x1
 4175 016c 03       		.uleb128 0x3
 4176 016d 0E       		.uleb128 0xe
 4177 016e 3A       		.uleb128 0x3a
 4178 016f 0B       		.uleb128 0xb
 4179 0170 3B       		.uleb128 0x3b
 4180 0171 05       		.uleb128 0x5
 4181 0172 27       		.uleb128 0x27
 4182 0173 19       		.uleb128 0x19
 4183 0174 11       		.uleb128 0x11
 4184 0175 01       		.uleb128 0x1
 4185 0176 12       		.uleb128 0x12
 4186 0177 06       		.uleb128 0x6
 4187 0178 40       		.uleb128 0x40
 4188 0179 18       		.uleb128 0x18
 4189 017a 9742     		.uleb128 0x2117
 4190 017c 19       		.uleb128 0x19
 4191 017d 01       		.uleb128 0x1
 4192 017e 13       		.uleb128 0x13
 4193 017f 00       		.byte	0
 4194 0180 00       		.byte	0
 4195 0181 1C       		.uleb128 0x1c
 4196 0182 2E       		.uleb128 0x2e
 4197 0183 01       		.byte	0x1
 4198 0184 03       		.uleb128 0x3
 4199 0185 0E       		.uleb128 0xe
 4200 0186 3A       		.uleb128 0x3a
 4201 0187 0B       		.uleb128 0xb
 4202 0188 3B       		.uleb128 0x3b
 4203 0189 05       		.uleb128 0x5
 4204 018a 27       		.uleb128 0x27
 4205 018b 19       		.uleb128 0x19
 4206 018c 49       		.uleb128 0x49
 4207 018d 13       		.uleb128 0x13
 4208 018e 11       		.uleb128 0x11
 4209 018f 01       		.uleb128 0x1
 4210 0190 12       		.uleb128 0x12
 4211 0191 06       		.uleb128 0x6
 4212 0192 40       		.uleb128 0x40
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 98


 4213 0193 18       		.uleb128 0x18
 4214 0194 9742     		.uleb128 0x2117
 4215 0196 19       		.uleb128 0x19
 4216 0197 01       		.uleb128 0x1
 4217 0198 13       		.uleb128 0x13
 4218 0199 00       		.byte	0
 4219 019a 00       		.byte	0
 4220 019b 1D       		.uleb128 0x1d
 4221 019c 05       		.uleb128 0x5
 4222 019d 00       		.byte	0
 4223 019e 03       		.uleb128 0x3
 4224 019f 08       		.uleb128 0x8
 4225 01a0 3A       		.uleb128 0x3a
 4226 01a1 0B       		.uleb128 0xb
 4227 01a2 3B       		.uleb128 0x3b
 4228 01a3 05       		.uleb128 0x5
 4229 01a4 49       		.uleb128 0x49
 4230 01a5 13       		.uleb128 0x13
 4231 01a6 02       		.uleb128 0x2
 4232 01a7 18       		.uleb128 0x18
 4233 01a8 00       		.byte	0
 4234 01a9 00       		.byte	0
 4235 01aa 1E       		.uleb128 0x1e
 4236 01ab 2E       		.uleb128 0x2e
 4237 01ac 01       		.byte	0x1
 4238 01ad 03       		.uleb128 0x3
 4239 01ae 0E       		.uleb128 0xe
 4240 01af 3A       		.uleb128 0x3a
 4241 01b0 0B       		.uleb128 0xb
 4242 01b1 3B       		.uleb128 0x3b
 4243 01b2 05       		.uleb128 0x5
 4244 01b3 27       		.uleb128 0x27
 4245 01b4 19       		.uleb128 0x19
 4246 01b5 49       		.uleb128 0x49
 4247 01b6 13       		.uleb128 0x13
 4248 01b7 11       		.uleb128 0x11
 4249 01b8 01       		.uleb128 0x1
 4250 01b9 12       		.uleb128 0x12
 4251 01ba 06       		.uleb128 0x6
 4252 01bb 40       		.uleb128 0x40
 4253 01bc 18       		.uleb128 0x18
 4254 01bd 9642     		.uleb128 0x2116
 4255 01bf 19       		.uleb128 0x19
 4256 01c0 01       		.uleb128 0x1
 4257 01c1 13       		.uleb128 0x13
 4258 01c2 00       		.byte	0
 4259 01c3 00       		.byte	0
 4260 01c4 1F       		.uleb128 0x1f
 4261 01c5 2E       		.uleb128 0x2e
 4262 01c6 01       		.byte	0x1
 4263 01c7 03       		.uleb128 0x3
 4264 01c8 0E       		.uleb128 0xe
 4265 01c9 3A       		.uleb128 0x3a
 4266 01ca 0B       		.uleb128 0xb
 4267 01cb 3B       		.uleb128 0x3b
 4268 01cc 05       		.uleb128 0x5
 4269 01cd 27       		.uleb128 0x27
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 99


 4270 01ce 19       		.uleb128 0x19
 4271 01cf 49       		.uleb128 0x49
 4272 01d0 13       		.uleb128 0x13
 4273 01d1 11       		.uleb128 0x11
 4274 01d2 01       		.uleb128 0x1
 4275 01d3 12       		.uleb128 0x12
 4276 01d4 06       		.uleb128 0x6
 4277 01d5 40       		.uleb128 0x40
 4278 01d6 18       		.uleb128 0x18
 4279 01d7 9742     		.uleb128 0x2117
 4280 01d9 19       		.uleb128 0x19
 4281 01da 00       		.byte	0
 4282 01db 00       		.byte	0
 4283 01dc 00       		.byte	0
 4284              		.section	.debug_aranges,"",%progbits
 4285 0000 84000000 		.4byte	0x84
 4286 0004 0200     		.2byte	0x2
 4287 0006 00000000 		.4byte	.Ldebug_info0
 4288 000a 04       		.byte	0x4
 4289 000b 00       		.byte	0
 4290 000c 0000     		.2byte	0
 4291 000e 0000     		.2byte	0
 4292 0010 00000000 		.4byte	.LFB2
 4293 0014 C6000000 		.4byte	.LFE2-.LFB2
 4294 0018 00000000 		.4byte	.LFB3
 4295 001c FC020000 		.4byte	.LFE3-.LFB3
 4296 0020 00000000 		.4byte	.LFB4
 4297 0024 D8030000 		.4byte	.LFE4-.LFB4
 4298 0028 00000000 		.4byte	.LFB5
 4299 002c 48010000 		.4byte	.LFE5-.LFB5
 4300 0030 00000000 		.4byte	.LFB6
 4301 0034 16000000 		.4byte	.LFE6-.LFB6
 4302 0038 00000000 		.4byte	.LFB7
 4303 003c 68000000 		.4byte	.LFE7-.LFB7
 4304 0040 00000000 		.4byte	.LFB8
 4305 0044 3E000000 		.4byte	.LFE8-.LFB8
 4306 0048 00000000 		.4byte	.LFB9
 4307 004c B0000000 		.4byte	.LFE9-.LFB9
 4308 0050 00000000 		.4byte	.LFB10
 4309 0054 AE000000 		.4byte	.LFE10-.LFB10
 4310 0058 00000000 		.4byte	.LFB11
 4311 005c 6A000000 		.4byte	.LFE11-.LFB11
 4312 0060 00000000 		.4byte	.LFB12
 4313 0064 4A000000 		.4byte	.LFE12-.LFB12
 4314 0068 00000000 		.4byte	.LFB13
 4315 006c 80000000 		.4byte	.LFE13-.LFB13
 4316 0070 00000000 		.4byte	.LFB14
 4317 0074 FA000000 		.4byte	.LFE14-.LFB14
 4318 0078 00000000 		.4byte	.LFB15
 4319 007c F8000000 		.4byte	.LFE15-.LFB15
 4320 0080 00000000 		.4byte	0
 4321 0084 00000000 		.4byte	0
 4322              		.section	.debug_ranges,"",%progbits
 4323              	.Ldebug_ranges0:
 4324 0000 78000000 		.4byte	.LBB7
 4325 0004 96030000 		.4byte	.LBE7
 4326 0008 C0030000 		.4byte	.LBB9
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 100


 4327 000c C2030000 		.4byte	.LBE9
 4328 0010 00000000 		.4byte	0
 4329 0014 00000000 		.4byte	0
 4330 0018 00000000 		.4byte	.LFB2
 4331 001c C6000000 		.4byte	.LFE2
 4332 0020 00000000 		.4byte	.LFB3
 4333 0024 FC020000 		.4byte	.LFE3
 4334 0028 00000000 		.4byte	.LFB4
 4335 002c D8030000 		.4byte	.LFE4
 4336 0030 00000000 		.4byte	.LFB5
 4337 0034 48010000 		.4byte	.LFE5
 4338 0038 00000000 		.4byte	.LFB6
 4339 003c 16000000 		.4byte	.LFE6
 4340 0040 00000000 		.4byte	.LFB7
 4341 0044 68000000 		.4byte	.LFE7
 4342 0048 00000000 		.4byte	.LFB8
 4343 004c 3E000000 		.4byte	.LFE8
 4344 0050 00000000 		.4byte	.LFB9
 4345 0054 B0000000 		.4byte	.LFE9
 4346 0058 00000000 		.4byte	.LFB10
 4347 005c AE000000 		.4byte	.LFE10
 4348 0060 00000000 		.4byte	.LFB11
 4349 0064 6A000000 		.4byte	.LFE11
 4350 0068 00000000 		.4byte	.LFB12
 4351 006c 4A000000 		.4byte	.LFE12
 4352 0070 00000000 		.4byte	.LFB13
 4353 0074 80000000 		.4byte	.LFE13
 4354 0078 00000000 		.4byte	.LFB14
 4355 007c FA000000 		.4byte	.LFE14
 4356 0080 00000000 		.4byte	.LFB15
 4357 0084 F8000000 		.4byte	.LFE15
 4358 0088 00000000 		.4byte	0
 4359 008c 00000000 		.4byte	0
 4360              		.section	.debug_line,"",%progbits
 4361              	.Ldebug_line0:
 4362 0000 40040000 		.section	.debug_str,"MS",%progbits,1
 4362      02005B00 
 4362      00000201 
 4362      FB0E0D00 
 4362      01010101 
 4363              	.LASF10:
 4364 0000 75696E74 		.ascii	"uint16\000"
 4364      313600
 4365              	.LASF78:
 4366 0007 726F7754 		.ascii	"rowToWrPtr\000"
 4366      6F577250 
 4366      747200
 4367              	.LASF65:
 4368 0012 746D7044 		.ascii	"tmpData\000"
 4368      61746100 
 4369              	.LASF34:
 4370 001a 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 4370      6E5F656D 
 4370      5F656570 
 4370      726F6D5F 
 4370      73746174 
 4371              	.LASF75:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 101


 4372 0033 656D4565 		.ascii	"emEepromAddr\000"
 4372      70726F6D 
 4372      41646472 
 4372      00
 4373              	.LASF90:
 4374 0040 64737441 		.ascii	"dstAddr\000"
 4374      64647200 
 4375              	.LASF96:
 4376 0048 726F774E 		.ascii	"rowNum\000"
 4376      756D00
 4377              	.LASF26:
 4378 004f 6E756D62 		.ascii	"numberOfRows\000"
 4378      65724F66 
 4378      526F7773 
 4378      00
 4379              	.LASF66:
 4380 005c 6E756D57 		.ascii	"numWrites\000"
 4380      72697465 
 4380      7300
 4381              	.LASF7:
 4382 0066 6C6F6E67 		.ascii	"long long unsigned int\000"
 4382      206C6F6E 
 4382      6720756E 
 4382      7369676E 
 4382      65642069 
 4383              	.LASF39:
 4384 007d 61646472 		.ascii	"addr\000"
 4384      00
 4385              	.LASF19:
 4386 0082 65657072 		.ascii	"eepromSize\000"
 4386      6F6D5369 
 4386      7A6500
 4387              	.LASF6:
 4388 008d 6C6F6E67 		.ascii	"long long int\000"
 4388      206C6F6E 
 4388      6720696E 
 4388      7400
 4389              	.LASF0:
 4390 009b 7369676E 		.ascii	"signed char\000"
 4390      65642063 
 4390      68617200 
 4391              	.LASF84:
 4392 00a7 57726974 		.ascii	"WriteRow\000"
 4392      65526F77 
 4392      00
 4393              	.LASF76:
 4394 00b0 46696E64 		.ascii	"FindLastWrittenRow\000"
 4394      4C617374 
 4394      57726974 
 4394      74656E52 
 4394      6F7700
 4395              	.LASF41:
 4396 00c3 73697A65 		.ascii	"size\000"
 4396      00
 4397              	.LASF99:
 4398 00c8 47656E65 		.ascii	"Generated_Source\\PSoC4\\cy_em_eeprom.c\000"
 4398      72617465 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 102


 4398      645F536F 
 4398      75726365 
 4398      5C50536F 
 4399              	.LASF33:
 4400 00ee 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 4400      4D5F4545 
 4400      50524F4D 
 4400      5F575249 
 4400      54455F46 
 4401              	.LASF71:
 4402 0106 43795F45 		.ascii	"Cy_Em_EEPROM_NumWrites\000"
 4402      6D5F4545 
 4402      50524F4D 
 4402      5F4E756D 
 4402      57726974 
 4403              	.LASF4:
 4404 011d 6C6F6E67 		.ascii	"long int\000"
 4404      20696E74 
 4404      00
 4405              	.LASF23:
 4406 0126 75736572 		.ascii	"userFlashStartAddr\000"
 4406      466C6173 
 4406      68537461 
 4406      72744164 
 4406      647200
 4407              	.LASF9:
 4408 0139 75696E74 		.ascii	"uint8\000"
 4408      3800
 4409              	.LASF13:
 4410 013f 646F7562 		.ascii	"double\000"
 4410      6C6500
 4411              	.LASF72:
 4412 0146 6C617374 		.ascii	"lastWrRowPtr\000"
 4412      5772526F 
 4412      77507472 
 4412      00
 4413              	.LASF11:
 4414 0153 75696E74 		.ascii	"uint32\000"
 4414      333200
 4415              	.LASF46:
 4416 015a 61637445 		.ascii	"actEepromRowNum\000"
 4416      6570726F 
 4416      6D526F77 
 4416      4E756D00 
 4417              	.LASF67:
 4418 016a 65654865 		.ascii	"eeHeaderDataOffset\000"
 4418      61646572 
 4418      44617461 
 4418      4F666673 
 4418      657400
 4419              	.LASF53:
 4420 017d 75706461 		.ascii	"updateAddrFlag\000"
 4420      74654164 
 4420      6472466C 
 4420      616700
 4421              	.LASF74:
 4422 018c 6E756D52 		.ascii	"numRows\000"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 103


 4422      6F777300 
 4423              	.LASF55:
 4424 0194 64617461 		.ascii	"dataEndEepromRowNum\000"
 4424      456E6445 
 4424      6570726F 
 4424      6D526F77 
 4424      4E756D00 
 4425              	.LASF88:
 4426 01a8 72616D42 		.ascii	"ramBuffAddr\000"
 4426      75666641 
 4426      64647200 
 4427              	.LASF21:
 4428 01b4 72656475 		.ascii	"redundantCopy\000"
 4428      6E64616E 
 4428      74436F70 
 4428      7900
 4429              	.LASF69:
 4430 01c2 64617461 		.ascii	"dataAddr\000"
 4430      41646472 
 4430      00
 4431              	.LASF8:
 4432 01cb 756E7369 		.ascii	"unsigned int\000"
 4432      676E6564 
 4432      20696E74 
 4432      00
 4433              	.LASF92:
 4434 01d8 6E756D42 		.ascii	"numBytes\000"
 4434      79746573 
 4434      00
 4435              	.LASF5:
 4436 01e1 6C6F6E67 		.ascii	"long unsigned int\000"
 4436      20756E73 
 4436      69676E65 
 4436      6420696E 
 4436      7400
 4437              	.LASF94:
 4438 01f3 47657441 		.ascii	"GetAddresses\000"
 4438      64647265 
 4438      73736573 
 4438      00
 4439              	.LASF38:
 4440 0200 43795F45 		.ascii	"Cy_Em_EEPROM_Read\000"
 4440      6D5F4545 
 4440      50524F4D 
 4440      5F526561 
 4440      6400
 4441              	.LASF89:
 4442 0212 43686563 		.ascii	"CheckCrcAndCopy\000"
 4442      6B437263 
 4442      416E6443 
 4442      6F707900 
 4443              	.LASF100:
 4444 0222 433A5C55 		.ascii	"C:\\Users\\Benakapoi\\Downloads\\PSoC-4-BLE-master\\"
 4444      73657273 
 4444      5C42656E 
 4444      616B6170 
 4444      6F695C44 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 104


 4445 0251 50536F43 		.ascii	"PSoC-4-BLE-master\\100_Projects_in_100_Days\\Day020"
 4445      2D342D42 
 4445      4C452D6D 
 4445      61737465 
 4445      725C3130 
 4446 0282 5F424C45 		.ascii	"_BLE_UART\\UART_to_BLE_central\\Archive\\2\\UART_to"
 4446      5F554152 
 4446      545C5541 
 4446      52545F74 
 4446      6F5F424C 
 4447 02b1 5F424C45 		.ascii	"_BLE_central\\UART_to_BLE_central.cydsn\000"
 4447      5F63656E 
 4447      7472616C 
 4447      5C554152 
 4447      545F746F 
 4448              	.LASF3:
 4449 02d8 73686F72 		.ascii	"short unsigned int\000"
 4449      7420756E 
 4449      7369676E 
 4449      65642069 
 4449      6E7400
 4450              	.LASF60:
 4451 02eb 61637445 		.ascii	"actEmEepromRowNum\000"
 4451      6D456570 
 4451      726F6D52 
 4451      6F774E75 
 4451      6D00
 4452              	.LASF79:
 4453 02fd 726F7754 		.ascii	"rowToRdPtr\000"
 4453      6F526450 
 4453      747200
 4454              	.LASF64:
 4455 0308 656D4565 		.ascii	"emEepromRowRdAddr\000"
 4455      70726F6D 
 4455      526F7752 
 4455      64416464 
 4455      7200
 4456              	.LASF40:
 4457 031a 65657072 		.ascii	"eepromData\000"
 4457      6F6D4461 
 4457      746100
 4458              	.LASF45:
 4459 0325 73746172 		.ascii	"startRowAddr\000"
 4459      74526F77 
 4459      41646472 
 4459      00
 4460              	.LASF98:
 4461 0332 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4461      43313120 
 4461      352E342E 
 4461      31203230 
 4461      31363036 
 4462 0365 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4462      20726576 
 4462      6973696F 
 4462      6E203233 
 4462      37373135 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 105


 4463 0398 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4463      66756E63 
 4463      74696F6E 
 4463      2D736563 
 4463      74696F6E 
 4464              	.LASF43:
 4465 03c0 63757245 		.ascii	"curEepromBaseAddr\000"
 4465      6570726F 
 4465      6D426173 
 4465      65416464 
 4465      7200
 4466              	.LASF16:
 4467 03d2 72656733 		.ascii	"reg32\000"
 4467      3200
 4468              	.LASF86:
 4469 03d8 726F7749 		.ascii	"rowId\000"
 4469      6400
 4470              	.LASF87:
 4471 03de 45726173 		.ascii	"EraseRow\000"
 4471      65526F77 
 4471      00
 4472              	.LASF30:
 4473 03e7 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 4473      4D5F4545 
 4473      50524F4D 
 4473      5F424144 
 4473      5F504152 
 4474              	.LASF31:
 4475 03fe 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 4475      4D5F4545 
 4475      50524F4D 
 4475      5F424144 
 4475      5F434845 
 4476              	.LASF18:
 4477 0418 73697A65 		.ascii	"sizetype\000"
 4477      74797065 
 4477      00
 4478              	.LASF17:
 4479 0421 6C6F6E67 		.ascii	"long double\000"
 4479      20646F75 
 4479      626C6500 
 4480              	.LASF70:
 4481 042d 43795F45 		.ascii	"Cy_Em_EEPROM_Erase\000"
 4481      6D5F4545 
 4481      50524F4D 
 4481      5F457261 
 4481      736500
 4482              	.LASF58:
 4483 0440 43795F45 		.ascii	"Cy_Em_EEPROM_Write\000"
 4483      6D5F4545 
 4483      50524F4D 
 4483      5F577269 
 4483      746500
 4484              	.LASF52:
 4485 0453 7365714E 		.ascii	"seqNum\000"
 4485      756D00
 4486              	.LASF28:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 106


 4487 045a 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 4487      74635F65 
 4487      6570726F 
 4487      6D5F636F 
 4487      6E746578 
 4488              	.LASF77:
 4489 0472 4765744E 		.ascii	"GetNextRowToWrite\000"
 4489      65787452 
 4489      6F77546F 
 4489      57726974 
 4489      6500
 4490              	.LASF83:
 4491 0484 43686563 		.ascii	"CheckRanges\000"
 4491      6B52616E 
 4491      67657300 
 4492              	.LASF59:
 4493 0490 7772436E 		.ascii	"wrCnt\000"
 4493      7400
 4494              	.LASF12:
 4495 0496 666C6F61 		.ascii	"float\000"
 4495      7400
 4496              	.LASF57:
 4497 049c 656E6441 		.ascii	"endAddr\000"
 4497      64647200 
 4498              	.LASF32:
 4499 04a4 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 4499      4D5F4545 
 4499      50524F4D 
 4499      5F424144 
 4499      5F444154 
 4500              	.LASF25:
 4501 04ba 776C456E 		.ascii	"wlEndAddr\000"
 4501      64416464 
 4501      7200
 4502              	.LASF1:
 4503 04c4 756E7369 		.ascii	"unsigned char\000"
 4503      676E6564 
 4503      20636861 
 4503      7200
 4504              	.LASF85:
 4505 04d2 726F7741 		.ascii	"rowAddr\000"
 4505      64647200 
 4506              	.LASF2:
 4507 04da 73686F72 		.ascii	"short int\000"
 4507      7420696E 
 4507      7400
 4508              	.LASF73:
 4509 04e4 70726576 		.ascii	"prevSeqNum\000"
 4509      5365714E 
 4509      756D00
 4510              	.LASF68:
 4511 04ef 736B6970 		.ascii	"skipOperation\000"
 4511      4F706572 
 4511      6174696F 
 4511      6E00
 4512              	.LASF48:
 4513 04fd 64617461 		.ascii	"dataStartEepromRowNum\000"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 107


 4513      53746172 
 4513      74456570 
 4513      726F6D52 
 4513      6F774E75 
 4514              	.LASF37:
 4515 0513 43795F45 		.ascii	"Cy_Em_EEPROM_Init\000"
 4515      6D5F4545 
 4515      50524F4D 
 4515      5F496E69 
 4515      7400
 4516              	.LASF61:
 4517 0525 77726974 		.ascii	"writeRamBuffer\000"
 4517      6552616D 
 4517      42756666 
 4517      657200
 4518              	.LASF91:
 4519 0534 726F774F 		.ascii	"rowOffset\000"
 4519      66667365 
 4519      7400
 4520              	.LASF93:
 4521 053e 72635374 		.ascii	"rcStartRowAddr\000"
 4521      61727452 
 4521      6F774164 
 4521      647200
 4522              	.LASF14:
 4523 054d 63686172 		.ascii	"char\000"
 4523      00
 4524              	.LASF35:
 4525 0552 636F6E66 		.ascii	"config\000"
 4525      696700
 4526              	.LASF42:
 4527 0559 6E756D42 		.ascii	"numBytesToRead\000"
 4527      79746573 
 4527      546F5265 
 4527      616400
 4528              	.LASF56:
 4529 0568 73746172 		.ascii	"startAddr\000"
 4529      74416464 
 4529      7200
 4530              	.LASF97:
 4531 0572 736B6970 		.ascii	"skip\000"
 4531      00
 4532              	.LASF95:
 4533 0577 6F666673 		.ascii	"offset\000"
 4533      657400
 4534              	.LASF36:
 4535 057e 636F6E74 		.ascii	"context\000"
 4535      65787400 
 4536              	.LASF27:
 4537 0586 6C617374 		.ascii	"lastWrRowAddr\000"
 4537      5772526F 
 4537      77416464 
 4537      7200
 4538              	.LASF62:
 4539 0594 746D7052 		.ascii	"tmpRowAddr\000"
 4539      6F774164 
 4539      647200
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 108


 4540              	.LASF44:
 4541 059f 63757252 		.ascii	"curRowOffset\000"
 4541      6F774F66 
 4541      66736574 
 4541      00
 4542              	.LASF24:
 4543 05ac 63795F73 		.ascii	"cy_stc_eeprom_config_t\000"
 4543      74635F65 
 4543      6570726F 
 4543      6D5F636F 
 4543      6E666967 
 4544              	.LASF51:
 4545 05c3 72645369 		.ascii	"rdSize\000"
 4545      7A6500
 4546              	.LASF20:
 4547 05ca 77656172 		.ascii	"wearLevelingFactor\000"
 4547      4C657665 
 4547      6C696E67 
 4547      46616374 
 4547      6F7200
 4548              	.LASF50:
 4549 05dd 72644164 		.ascii	"rdAddr\000"
 4549      647200
 4550              	.LASF80:
 4551 05e4 47657452 		.ascii	"GetRowAddrBySeqNum\000"
 4551      6F774164 
 4551      64724279 
 4551      5365714E 
 4551      756D00
 4552              	.LASF29:
 4553 05f7 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 4553      4D5F4545 
 4553      50524F4D 
 4553      5F535543 
 4553      43455353 
 4554              	.LASF22:
 4555 060c 626C6F63 		.ascii	"blockingWrite\000"
 4555      6B696E67 
 4555      57726974 
 4555      6500
 4556              	.LASF47:
 4557 061a 63757252 		.ascii	"curRdEepromRowNum\000"
 4557      64456570 
 4557      726F6D52 
 4557      6F774E75 
 4557      6D00
 4558              	.LASF15:
 4559 062c 63797374 		.ascii	"cystatus\000"
 4559      61747573 
 4559      00
 4560              	.LASF81:
 4561 0635 43616C63 		.ascii	"CalcChecksum\000"
 4561      43686563 
 4561      6B73756D 
 4561      00
 4562              	.LASF82:
 4563 0642 726F7744 		.ascii	"rowData\000"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccDKHpmp.s 			page 109


 4563      61746100 
 4564              	.LASF54:
 4565 064a 6E756D52 		.ascii	"numRowReads\000"
 4565      6F775265 
 4565      61647300 
 4566              	.LASF63:
 4567 0656 656D4565 		.ascii	"emEepromRowAddr\000"
 4567      70726F6D 
 4567      526F7741 
 4567      64647200 
 4568              	.LASF49:
 4569 0666 65654461 		.ascii	"eeData\000"
 4569      746100
 4570              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
