ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_SPI_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	UART_rxBufferHead,4,4
  20              		.comm	UART_rxBufferTail,4,4
  21              		.comm	UART_rxBufferOverflow,1,1
  22              		.comm	UART_txBufferHead,4,4
  23              		.comm	UART_txBufferTail,4,4
  24              		.comm	UART_rxBufferInternal,2049,4
  25              		.comm	UART_txBufferInternal,2048,4
  26              		.section	.text.UART_SpiUartReadRxData,"ax",%progbits
  27              		.align	2
  28              		.global	UART_SpiUartReadRxData
  29              		.code	16
  30              		.thumb_func
  31              		.type	UART_SpiUartReadRxData, %function
  32              	UART_SpiUartReadRxData:
  33              	.LFB2:
  34              		.file 1 "Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_SPI_UART.c **** * \file UART_SPI_UART.c
   3:Generated_Source\PSoC4/UART_SPI_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:Generated_Source\PSoC4/UART_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  19:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  22:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 2


  24:Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  26:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  29:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  31:Generated_Source\PSoC4/UART_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \addtogroup group_globals
  33:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  39:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  42:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
  45:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  47:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  49:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  54:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  58:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  59:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  60:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  62:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 3


  81:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  83:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  35              		.loc 1 84 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 8
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 82B0     		sub	sp, sp, #8
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  47              		.loc 1 85 0
  48 0006 0023     		movs	r3, #0
  49 0008 7B60     		str	r3, [r7, #4]
  86:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  87:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  90:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  50              		.loc 1 93 0
  51 000a 0F4B     		ldr	r3, .L5
  52 000c 1A68     		ldr	r2, [r3]
  53 000e 0F4B     		ldr	r3, .L5+4
  54 0010 1B68     		ldr	r3, [r3]
  55 0012 9A42     		cmp	r2, r3
  56 0014 12D0     		beq	.L2
  94:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  57              		.loc 1 98 0
  58 0016 0D4B     		ldr	r3, .L5+4
  59 0018 1B68     		ldr	r3, [r3]
  60 001a 0133     		adds	r3, r3, #1
  61 001c 3B60     		str	r3, [r7]
  99:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 100:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
  62              		.loc 1 100 0
  63 001e 3B68     		ldr	r3, [r7]
  64 0020 0B4A     		ldr	r2, .L5+8
  65 0022 9342     		cmp	r3, r2
  66 0024 01D1     		bne	.L3
 101:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
  67              		.loc 1 102 0
  68 0026 0023     		movs	r3, #0
  69 0028 3B60     		str	r3, [r7]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 4


  70              	.L3:
 103:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 105:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
  71              		.loc 1 106 0
  72 002a 0A4A     		ldr	r2, .L5+12
  73 002c 3B68     		ldr	r3, [r7]
  74 002e D318     		adds	r3, r2, r3
  75 0030 1B78     		ldrb	r3, [r3]
  76 0032 DBB2     		uxtb	r3, r3
  77 0034 7B60     		str	r3, [r7, #4]
 107:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 108:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
  78              		.loc 1 109 0
  79 0036 054B     		ldr	r3, .L5+4
  80 0038 3A68     		ldr	r2, [r7]
  81 003a 1A60     		str	r2, [r3]
  82              	.L2:
 110:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 111:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 124:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 130:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 131:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 133:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
  83              		.loc 1 133 0
  84 003c 7B68     		ldr	r3, [r7, #4]
 134:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  85              		.loc 1 134 0
  86 003e 1800     		movs	r0, r3
  87 0040 BD46     		mov	sp, r7
  88 0042 02B0     		add	sp, sp, #8
  89              		@ sp needed
  90 0044 80BD     		pop	{r7, pc}
  91              	.L6:
  92 0046 C046     		.align	2
  93              	.L5:
  94 0048 00000000 		.word	UART_rxBufferHead
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 5


  95 004c 00000000 		.word	UART_rxBufferTail
  96 0050 01080000 		.word	2049
  97 0054 00000000 		.word	UART_rxBufferInternal
  98              		.cfi_endproc
  99              	.LFE2:
 100              		.size	UART_SpiUartReadRxData, .-UART_SpiUartReadRxData
 101              		.section	.text.UART_SpiUartGetRxBufferSize,"ax",%progbits
 102              		.align	2
 103              		.global	UART_SpiUartGetRxBufferSize
 104              		.code	16
 105              		.thumb_func
 106              		.type	UART_SpiUartGetRxBufferSize, %function
 107              	UART_SpiUartGetRxBufferSize:
 108              	.LFB3:
 135:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 136:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 137:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 147:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 109              		.loc 1 158 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 8
 112              		@ frame_needed = 1, uses_anonymous_args = 0
 113 0000 80B5     		push	{r7, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 7, -8
 116              		.cfi_offset 14, -4
 117 0002 82B0     		sub	sp, sp, #8
 118              		.cfi_def_cfa_offset 16
 119 0004 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
 159:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 164:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 6


 166:Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 121              		.loc 1 166 0
 122 0006 0D4B     		ldr	r3, .L11
 123 0008 1B68     		ldr	r3, [r3]
 124 000a 3B60     		str	r3, [r7]
 167:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 168:Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 125              		.loc 1 168 0
 126 000c 0C4B     		ldr	r3, .L11+4
 127 000e 1B68     		ldr	r3, [r3]
 128 0010 3A68     		ldr	r2, [r7]
 129 0012 9A42     		cmp	r2, r3
 130 0014 05D3     		bcc	.L8
 169:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 131              		.loc 1 170 0
 132 0016 0A4B     		ldr	r3, .L11+4
 133 0018 1B68     		ldr	r3, [r3]
 134 001a 3A68     		ldr	r2, [r7]
 135 001c D31A     		subs	r3, r2, r3
 136 001e 7B60     		str	r3, [r7, #4]
 137 0020 07E0     		b	.L9
 138              	.L8:
 171:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 139              		.loc 1 174 0
 140 0022 074B     		ldr	r3, .L11+4
 141 0024 1B68     		ldr	r3, [r3]
 142 0026 3A68     		ldr	r2, [r7]
 143 0028 D31A     		subs	r3, r2, r3
 144 002a 064A     		ldr	r2, .L11+8
 145 002c 9446     		mov	ip, r2
 146 002e 6344     		add	r3, r3, ip
 147 0030 7B60     		str	r3, [r7, #4]
 148              	.L9:
 175:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 177:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
 180:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 183:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 149              		.loc 1 183 0
 150 0032 7B68     		ldr	r3, [r7, #4]
 184:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 151              		.loc 1 184 0
 152 0034 1800     		movs	r0, r3
 153 0036 BD46     		mov	sp, r7
 154 0038 02B0     		add	sp, sp, #8
 155              		@ sp needed
 156 003a 80BD     		pop	{r7, pc}
 157              	.L12:
 158              		.align	2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 7


 159              	.L11:
 160 003c 00000000 		.word	UART_rxBufferHead
 161 0040 00000000 		.word	UART_rxBufferTail
 162 0044 01080000 		.word	2049
 163              		.cfi_endproc
 164              	.LFE3:
 165              		.size	UART_SpiUartGetRxBufferSize, .-UART_SpiUartGetRxBufferSize
 166              		.section	.text.UART_SpiUartClearRxBuffer,"ax",%progbits
 167              		.align	2
 168              		.global	UART_SpiUartClearRxBuffer
 169              		.code	16
 170              		.thumb_func
 171              		.type	UART_SpiUartClearRxBuffer, %function
 172              	UART_SpiUartClearRxBuffer:
 173              	.LFB4:
 185:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 186:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 187:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 188:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 174              		.loc 1 201 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 202:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 204:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 184              		.loc 1 205 0
 185 0004 0920     		movs	r0, #9
 186 0006 FFF7FEFF 		bl	CyIntDisable
 206:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 207:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 208:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 187              		.loc 1 208 0
 188 000a 0E4B     		ldr	r3, .L14
 189 000c 1A68     		ldr	r2, [r3]
 190 000e 0E4B     		ldr	r3, .L14+4
 191 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 8


 209:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 192              		.loc 1 209 0
 193 0012 0E4B     		ldr	r3, .L14+8
 194 0014 0022     		movs	r2, #0
 195 0016 1A70     		strb	r2, [r3]
 210:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 211:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 196              		.loc 1 211 0
 197 0018 0D4B     		ldr	r3, .L14+12
 198 001a 0D4A     		ldr	r2, .L14+12
 199 001c 1268     		ldr	r2, [r2]
 200 001e 8021     		movs	r1, #128
 201 0020 4902     		lsls	r1, r1, #9
 202 0022 0A43     		orrs	r2, r1
 203 0024 1A60     		str	r2, [r3]
 204 0026 0A4B     		ldr	r3, .L14+12
 205 0028 094A     		ldr	r2, .L14+12
 206 002a 1268     		ldr	r2, [r2]
 207 002c 0949     		ldr	r1, .L14+16
 208 002e 0A40     		ands	r2, r1
 209 0030 1A60     		str	r2, [r3]
 212:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 210              		.loc 1 212 0
 211 0032 094B     		ldr	r3, .L14+20
 212 0034 094A     		ldr	r2, .L14+24
 213 0036 1A60     		str	r2, [r3]
 213:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 214:Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/UART_SPI_UART.c ****             
 223:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 214              		.loc 1 224 0
 215 0038 0920     		movs	r0, #9
 216 003a FFF7FEFF 		bl	CyIntEnable
 225:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 229:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 217              		.loc 1 231 0
 218 003e C046     		nop
 219 0040 BD46     		mov	sp, r7
 220              		@ sp needed
 221 0042 80BD     		pop	{r7, pc}
 222              	.L15:
 223              		.align	2
 224              	.L14:
 225 0044 00000000 		.word	UART_rxBufferTail
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 9


 226 0048 00000000 		.word	UART_rxBufferHead
 227 004c 00000000 		.word	UART_rxBufferOverflow
 228 0050 04032440 		.word	1076101892
 229 0054 FFFFFEFF 		.word	-65537
 230 0058 C00F2440 		.word	1076105152
 231 005c ED0F0000 		.word	4077
 232              		.cfi_endproc
 233              	.LFE4:
 234              		.size	UART_SpiUartClearRxBuffer, .-UART_SpiUartClearRxBuffer
 235              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
 236              		.align	2
 237              		.global	UART_SpiUartWriteTxData
 238              		.code	16
 239              		.thumb_func
 240              		.type	UART_SpiUartWriteTxData, %function
 241              	UART_SpiUartWriteTxData:
 242              	.LFB5:
 232:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 233:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 234:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 235:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 236:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 237:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 239:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 254:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 243              		.loc 1 258 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 16
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 80B5     		push	{r7, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 84B0     		sub	sp, sp, #16
 252              		.cfi_def_cfa_offset 24
 253 0004 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 255 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 10


 259:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 263:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 264:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 256              		.loc 1 266 0
 257 0008 1E4B     		ldr	r3, .L23
 258 000a 1A68     		ldr	r2, [r3]
 259 000c 1E4B     		ldr	r3, .L23+4
 260 000e 1B68     		ldr	r3, [r3]
 261 0010 9A42     		cmp	r2, r3
 262 0012 09D1     		bne	.L17
 267:Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 263              		.loc 1 267 0 discriminator 1
 264 0014 1D4B     		ldr	r3, .L23+8
 265 0016 1B68     		ldr	r3, [r3]
 266 0018 1F22     		movs	r2, #31
 267 001a 1340     		ands	r3, r2
 266:Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 268              		.loc 1 266 0 discriminator 1
 269 001c 082B     		cmp	r3, #8
 270 001e 03D0     		beq	.L17
 268:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 271              		.loc 1 270 0
 272 0020 1B4B     		ldr	r3, .L23+12
 273 0022 7A68     		ldr	r2, [r7, #4]
 274 0024 1A60     		str	r2, [r3]
 271:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 277:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 280:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 282:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 284:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 286:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 289:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 291:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 293:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 294:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 295:Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 11


 296:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 297:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 298:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 300:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 301:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 303:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 307:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 308:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
 310:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 311:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 313:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
 314:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 275              		.loc 1 316 0
 276 0026 28E0     		b	.L21
 277              	.L17:
 276:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278              		.loc 1 276 0
 279 0028 164B     		ldr	r3, .L23
 280 002a 1B68     		ldr	r3, [r3]
 281 002c 0133     		adds	r3, r3, #1
 282 002e FB60     		str	r3, [r7, #12]
 279:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 283              		.loc 1 279 0
 284 0030 FA68     		ldr	r2, [r7, #12]
 285 0032 8023     		movs	r3, #128
 286 0034 1B01     		lsls	r3, r3, #4
 287 0036 9A42     		cmp	r2, r3
 288 0038 01D1     		bne	.L22
 281:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 289              		.loc 1 281 0
 290 003a 0023     		movs	r3, #0
 291 003c FB60     		str	r3, [r7, #12]
 292              	.L22:
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 293              		.loc 1 285 0
 294 003e C046     		nop
 295              	.L20:
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 296              		.loc 1 285 0 is_stmt 0 discriminator 1
 297 0040 114B     		ldr	r3, .L23+4
 298 0042 1B68     		ldr	r3, [r3]
 299 0044 FA68     		ldr	r2, [r7, #12]
 300 0046 9A42     		cmp	r2, r3
 301 0048 FAD0     		beq	.L20
 292:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 302              		.loc 1 292 0 is_stmt 1
 303 004a 124B     		ldr	r3, .L23+16
 304 004c 0222     		movs	r2, #2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 12


 305 004e 1A60     		str	r2, [r3]
 294:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 306              		.loc 1 294 0
 307 0050 7B68     		ldr	r3, [r7, #4]
 308 0052 D9B2     		uxtb	r1, r3
 309 0054 104A     		ldr	r2, .L23+20
 310 0056 FB68     		ldr	r3, [r7, #12]
 311 0058 D318     		adds	r3, r2, r3
 312 005a 0A1C     		adds	r2, r1, #0
 313 005c 1A70     		strb	r2, [r3]
 296:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 314              		.loc 1 296 0
 315 005e 094B     		ldr	r3, .L23
 316 0060 FA68     		ldr	r2, [r7, #12]
 317 0062 1A60     		str	r2, [r3]
 299:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 318              		.loc 1 299 0
 319 0064 0D4B     		ldr	r3, .L23+24
 320 0066 1B68     		ldr	r3, [r3]
 321 0068 0222     		movs	r2, #2
 322 006a 1340     		ands	r3, r2
 323 006c 05D1     		bne	.L21
 302:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 324              		.loc 1 302 0
 325 006e 0B4B     		ldr	r3, .L23+24
 326 0070 0A4A     		ldr	r2, .L23+24
 327 0072 1268     		ldr	r2, [r2]
 328 0074 0221     		movs	r1, #2
 329 0076 0A43     		orrs	r2, r1
 330 0078 1A60     		str	r2, [r3]
 331              	.L21:
 332              		.loc 1 316 0
 333 007a C046     		nop
 334 007c BD46     		mov	sp, r7
 335 007e 04B0     		add	sp, sp, #16
 336              		@ sp needed
 337 0080 80BD     		pop	{r7, pc}
 338              	.L24:
 339 0082 C046     		.align	2
 340              	.L23:
 341 0084 00000000 		.word	UART_txBufferHead
 342 0088 00000000 		.word	UART_txBufferTail
 343 008c 08022440 		.word	1076101640
 344 0090 40022440 		.word	1076101696
 345 0094 800F2440 		.word	1076105088
 346 0098 00000000 		.word	UART_txBufferInternal
 347 009c 880F2440 		.word	1076105096
 348              		.cfi_endproc
 349              	.LFE5:
 350              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
 351              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
 352              		.align	2
 353              		.global	UART_SpiUartPutArray
 354              		.code	16
 355              		.thumb_func
 356              		.type	UART_SpiUartPutArray, %function
 357              	UART_SpiUartPutArray:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 13


 358              	.LFB6:
 317:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 318:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 319:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 321:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 323:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 334:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 339:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 359              		.loc 1 341 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 16
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 84B0     		sub	sp, sp, #16
 368              		.cfi_def_cfa_offset 24
 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 7860     		str	r0, [r7, #4]
 372 0008 3960     		str	r1, [r7]
 342:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
 373              		.loc 1 344 0
 374 000a 0023     		movs	r3, #0
 375 000c FB60     		str	r3, [r7, #12]
 376 000e 09E0     		b	.L26
 377              	.L27:
 345:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
 378              		.loc 1 346 0 discriminator 3
 379 0010 7A68     		ldr	r2, [r7, #4]
 380 0012 FB68     		ldr	r3, [r7, #12]
 381 0014 D318     		adds	r3, r2, r3
 382 0016 1B78     		ldrb	r3, [r3]
 383 0018 1800     		movs	r0, r3
 384 001a FFF7FEFF 		bl	UART_SpiUartWriteTxData
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 14


 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 385              		.loc 1 344 0 discriminator 3
 386 001e FB68     		ldr	r3, [r7, #12]
 387 0020 0133     		adds	r3, r3, #1
 388 0022 FB60     		str	r3, [r7, #12]
 389              	.L26:
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 390              		.loc 1 344 0 is_stmt 0 discriminator 1
 391 0024 FA68     		ldr	r2, [r7, #12]
 392 0026 3B68     		ldr	r3, [r7]
 393 0028 9A42     		cmp	r2, r3
 394 002a F1D3     		bcc	.L27
 347:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 395              		.loc 1 348 0 is_stmt 1
 396 002c C046     		nop
 397 002e BD46     		mov	sp, r7
 398 0030 04B0     		add	sp, sp, #16
 399              		@ sp needed
 400 0032 80BD     		pop	{r7, pc}
 401              		.cfi_endproc
 402              	.LFE6:
 403              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
 404              		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
 405              		.align	2
 406              		.global	UART_SpiUartGetTxBufferSize
 407              		.code	16
 408              		.thumb_func
 409              		.type	UART_SpiUartGetTxBufferSize, %function
 410              	UART_SpiUartGetTxBufferSize:
 411              	.LFB7:
 349:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 350:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 351:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 368:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 15


 412              		.loc 1 374 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 0000 80B5     		push	{r7, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 82B0     		sub	sp, sp, #8
 421              		.cfi_def_cfa_offset 16
 422 0004 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
 375:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 381:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 424              		.loc 1 383 0
 425 0006 0E4B     		ldr	r3, .L32
 426 0008 1B68     		ldr	r3, [r3]
 427 000a 3B60     		str	r3, [r7]
 384:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 385:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 428              		.loc 1 385 0
 429 000c 0D4B     		ldr	r3, .L32+4
 430 000e 1A68     		ldr	r2, [r3]
 431 0010 3B68     		ldr	r3, [r7]
 432 0012 9A42     		cmp	r2, r3
 433 0014 05D3     		bcc	.L29
 386:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 434              		.loc 1 387 0
 435 0016 0B4B     		ldr	r3, .L32+4
 436 0018 1A68     		ldr	r2, [r3]
 437 001a 3B68     		ldr	r3, [r7]
 438 001c D31A     		subs	r3, r2, r3
 439 001e 7B60     		str	r3, [r7, #4]
 440 0020 08E0     		b	.L30
 441              	.L29:
 388:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 390:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 442              		.loc 1 391 0
 443 0022 084B     		ldr	r3, .L32+4
 444 0024 1A68     		ldr	r2, [r3]
 445 0026 3B68     		ldr	r3, [r7]
 446 0028 D31A     		subs	r3, r2, r3
 447 002a 8022     		movs	r2, #128
 448 002c 1201     		lsls	r2, r2, #4
 449 002e 9446     		mov	ip, r2
 450 0030 6344     		add	r3, r3, ip
 451 0032 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 16


 452              	.L30:
 392:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 397:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 400:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 453              		.loc 1 400 0
 454 0034 7B68     		ldr	r3, [r7, #4]
 401:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 455              		.loc 1 401 0
 456 0036 1800     		movs	r0, r3
 457 0038 BD46     		mov	sp, r7
 458 003a 02B0     		add	sp, sp, #8
 459              		@ sp needed
 460 003c 80BD     		pop	{r7, pc}
 461              	.L33:
 462 003e C046     		.align	2
 463              	.L32:
 464 0040 00000000 		.word	UART_txBufferTail
 465 0044 00000000 		.word	UART_txBufferHead
 466              		.cfi_endproc
 467              	.LFE7:
 468              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 469              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 470              		.align	2
 471              		.global	UART_SpiUartClearTxBuffer
 472              		.code	16
 473              		.thumb_func
 474              		.type	UART_SpiUartClearTxBuffer, %function
 475              	UART_SpiUartClearTxBuffer:
 476              	.LFB8:
 402:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 403:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 404:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 477              		.loc 1 418 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 17


 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 419:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 487              		.loc 1 422 0
 488 0004 0920     		movs	r0, #9
 489 0006 FFF7FEFF 		bl	CyIntDisable
 423:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 424:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 425:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 490              		.loc 1 425 0
 491 000a 104B     		ldr	r3, .L35
 492 000c 1A68     		ldr	r2, [r3]
 493 000e 104B     		ldr	r3, .L35+4
 494 0010 1A60     		str	r2, [r3]
 426:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 427:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 495              		.loc 1 427 0
 496 0012 104B     		ldr	r3, .L35+8
 497 0014 0F4A     		ldr	r2, .L35+8
 498 0016 1268     		ldr	r2, [r2]
 499 0018 0221     		movs	r1, #2
 500 001a 8A43     		bics	r2, r1
 501 001c 1A60     		str	r2, [r3]
 428:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 502              		.loc 1 428 0
 503 001e 0E4B     		ldr	r3, .L35+12
 504 0020 0D4A     		ldr	r2, .L35+12
 505 0022 1268     		ldr	r2, [r2]
 506 0024 8021     		movs	r1, #128
 507 0026 4902     		lsls	r1, r1, #9
 508 0028 0A43     		orrs	r2, r1
 509 002a 1A60     		str	r2, [r3]
 510 002c 0A4B     		ldr	r3, .L35+12
 511 002e 0A4A     		ldr	r2, .L35+12
 512 0030 1268     		ldr	r2, [r2]
 513 0032 0A49     		ldr	r1, .L35+16
 514 0034 0A40     		ands	r2, r1
 515 0036 1A60     		str	r2, [r3]
 429:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 516              		.loc 1 429 0
 517 0038 094B     		ldr	r3, .L35+20
 518 003a 0A4A     		ldr	r2, .L35+24
 519 003c 1A60     		str	r2, [r3]
 430:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 431:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 520              		.loc 1 432 0
 521 003e 0920     		movs	r0, #9
 522 0040 FFF7FEFF 		bl	CyIntEnable
 433:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 18


 435:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 437:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 523              		.loc 1 439 0
 524 0044 C046     		nop
 525 0046 BD46     		mov	sp, r7
 526              		@ sp needed
 527 0048 80BD     		pop	{r7, pc}
 528              	.L36:
 529 004a C046     		.align	2
 530              	.L35:
 531 004c 00000000 		.word	UART_txBufferTail
 532 0050 00000000 		.word	UART_txBufferHead
 533 0054 880F2440 		.word	1076105096
 534 0058 04022440 		.word	1076101636
 535 005c FFFFFEFF 		.word	-65537
 536 0060 800F2440 		.word	1076105088
 537 0064 F3070000 		.word	2035
 538              		.cfi_endproc
 539              	.LFE8:
 540              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 541              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 542              		.align	2
 543              		.global	UART_SpiUartDisableIntRx
 544              		.code	16
 545              		.thumb_func
 546              		.type	UART_SpiUartDisableIntRx, %function
 547              	UART_SpiUartDisableIntRx:
 548              	.LFB9:
 440:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 441:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 442:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 443:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 448:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 450:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 453:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 549              		.loc 1 455 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 8
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553 0000 80B5     		push	{r7, lr}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557 0002 82B0     		sub	sp, sp, #8
 558              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 19


 559 0004 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
 456:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 458:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 561              		.loc 1 458 0
 562 0006 054B     		ldr	r3, .L39
 563 0008 1B68     		ldr	r3, [r3]
 564 000a 7B60     		str	r3, [r7, #4]
 459:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 460:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 565              		.loc 1 460 0
 566 000c 034B     		ldr	r3, .L39
 567 000e 0022     		movs	r2, #0
 568 0010 1A60     		str	r2, [r3]
 461:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 462:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 569              		.loc 1 462 0
 570 0012 7B68     		ldr	r3, [r7, #4]
 463:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 571              		.loc 1 463 0
 572 0014 1800     		movs	r0, r3
 573 0016 BD46     		mov	sp, r7
 574 0018 02B0     		add	sp, sp, #8
 575              		@ sp needed
 576 001a 80BD     		pop	{r7, pc}
 577              	.L40:
 578              		.align	2
 579              	.L39:
 580 001c C80F2440 		.word	1076105160
 581              		.cfi_endproc
 582              	.LFE9:
 583              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
 584              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 585              		.align	2
 586              		.global	UART_SpiUartDisableIntTx
 587              		.code	16
 588              		.thumb_func
 589              		.type	UART_SpiUartDisableIntTx, %function
 590              	UART_SpiUartDisableIntTx:
 591              	.LFB10:
 464:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 465:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 470:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 472:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 475:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 592              		.loc 1 477 0
 593              		.cfi_startproc
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 20


 594              		@ args = 0, pretend = 0, frame = 8
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596 0000 80B5     		push	{r7, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 82B0     		sub	sp, sp, #8
 601              		.cfi_def_cfa_offset 16
 602 0004 00AF     		add	r7, sp, #0
 603              		.cfi_def_cfa_register 7
 478:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 480:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 604              		.loc 1 480 0
 605 0006 054B     		ldr	r3, .L43
 606 0008 1B68     		ldr	r3, [r3]
 607 000a 7B60     		str	r3, [r7, #4]
 481:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 482:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 608              		.loc 1 482 0
 609 000c 034B     		ldr	r3, .L43
 610 000e 0022     		movs	r2, #0
 611 0010 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 484:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 612              		.loc 1 484 0
 613 0012 7B68     		ldr	r3, [r7, #4]
 485:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 614              		.loc 1 485 0
 615 0014 1800     		movs	r0, r3
 616 0016 BD46     		mov	sp, r7
 617 0018 02B0     		add	sp, sp, #8
 618              		@ sp needed
 619 001a 80BD     		pop	{r7, pc}
 620              	.L44:
 621              		.align	2
 622              	.L43:
 623 001c 880F2440 		.word	1076105096
 624              		.cfi_endproc
 625              	.LFE10:
 626              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 627              		.text
 628              	.Letext0:
 629              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 630              		.section	.debug_info,"",%progbits
 631              	.Ldebug_info0:
 632 0000 FA020000 		.4byte	0x2fa
 633 0004 0400     		.2byte	0x4
 634 0006 00000000 		.4byte	.Ldebug_abbrev0
 635 000a 04       		.byte	0x4
 636 000b 01       		.uleb128 0x1
 637 000c A7000000 		.4byte	.LASF42
 638 0010 0C       		.byte	0xc
 639 0011 69020000 		.4byte	.LASF43
 640 0015 B0020000 		.4byte	.LASF44
 641 0019 00000000 		.4byte	.Ldebug_ranges0+0
 642 001d 00000000 		.4byte	0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 21


 643 0021 00000000 		.4byte	.Ldebug_line0
 644 0025 02       		.uleb128 0x2
 645 0026 01       		.byte	0x1
 646 0027 06       		.byte	0x6
 647 0028 88030000 		.4byte	.LASF0
 648 002c 02       		.uleb128 0x2
 649 002d 01       		.byte	0x1
 650 002e 08       		.byte	0x8
 651 002f 42010000 		.4byte	.LASF1
 652 0033 02       		.uleb128 0x2
 653 0034 02       		.byte	0x2
 654 0035 05       		.byte	0x5
 655 0036 5F020000 		.4byte	.LASF2
 656 003a 02       		.uleb128 0x2
 657 003b 02       		.byte	0x2
 658 003c 07       		.byte	0x7
 659 003d 13000000 		.4byte	.LASF3
 660 0041 02       		.uleb128 0x2
 661 0042 04       		.byte	0x4
 662 0043 05       		.byte	0x5
 663 0044 A7020000 		.4byte	.LASF4
 664 0048 02       		.uleb128 0x2
 665 0049 04       		.byte	0x4
 666 004a 07       		.byte	0x7
 667 004b 7D000000 		.4byte	.LASF5
 668 004f 02       		.uleb128 0x2
 669 0050 08       		.byte	0x8
 670 0051 05       		.byte	0x5
 671 0052 0B020000 		.4byte	.LASF6
 672 0056 02       		.uleb128 0x2
 673 0057 08       		.byte	0x8
 674 0058 07       		.byte	0x7
 675 0059 CD010000 		.4byte	.LASF7
 676 005d 03       		.uleb128 0x3
 677 005e 04       		.byte	0x4
 678 005f 05       		.byte	0x5
 679 0060 696E7400 		.ascii	"int\000"
 680 0064 02       		.uleb128 0x2
 681 0065 04       		.byte	0x4
 682 0066 07       		.byte	0x7
 683 0067 2B000000 		.4byte	.LASF8
 684 006b 04       		.uleb128 0x4
 685 006c 8F000000 		.4byte	.LASF9
 686 0070 02       		.byte	0x2
 687 0071 E401     		.2byte	0x1e4
 688 0073 2C000000 		.4byte	0x2c
 689 0077 04       		.uleb128 0x4
 690 0078 7F010000 		.4byte	.LASF10
 691 007c 02       		.byte	0x2
 692 007d E601     		.2byte	0x1e6
 693 007f 48000000 		.4byte	0x48
 694 0083 02       		.uleb128 0x2
 695 0084 04       		.byte	0x4
 696 0085 04       		.byte	0x4
 697 0086 59000000 		.4byte	.LASF11
 698 008a 02       		.uleb128 0x2
 699 008b 08       		.byte	0x8
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 22


 700 008c 04       		.byte	0x4
 701 008d 66010000 		.4byte	.LASF12
 702 0091 02       		.uleb128 0x2
 703 0092 01       		.byte	0x1
 704 0093 08       		.byte	0x8
 705 0094 26000000 		.4byte	.LASF13
 706 0098 05       		.uleb128 0x5
 707 0099 6B000000 		.4byte	0x6b
 708 009d 04       		.uleb128 0x4
 709 009e 00000000 		.4byte	.LASF14
 710 00a2 02       		.byte	0x2
 711 00a3 9002     		.2byte	0x290
 712 00a5 A9000000 		.4byte	0xa9
 713 00a9 05       		.uleb128 0x5
 714 00aa 77000000 		.4byte	0x77
 715 00ae 02       		.uleb128 0x2
 716 00af 08       		.byte	0x8
 717 00b0 04       		.byte	0x4
 718 00b1 66030000 		.4byte	.LASF15
 719 00b5 02       		.uleb128 0x2
 720 00b6 04       		.byte	0x4
 721 00b7 07       		.byte	0x7
 722 00b8 02020000 		.4byte	.LASF16
 723 00bc 06       		.uleb128 0x6
 724 00bd 90020000 		.4byte	.LASF19
 725 00c1 01       		.byte	0x1
 726 00c2 53       		.byte	0x53
 727 00c3 77000000 		.4byte	0x77
 728 00c7 00000000 		.4byte	.LFB2
 729 00cb 58000000 		.4byte	.LFE2-.LFB2
 730 00cf 01       		.uleb128 0x1
 731 00d0 9C       		.byte	0x9c
 732 00d1 F2000000 		.4byte	0xf2
 733 00d5 07       		.uleb128 0x7
 734 00d6 35010000 		.4byte	.LASF17
 735 00da 01       		.byte	0x1
 736 00db 55       		.byte	0x55
 737 00dc 77000000 		.4byte	0x77
 738 00e0 02       		.uleb128 0x2
 739 00e1 91       		.byte	0x91
 740 00e2 74       		.sleb128 -12
 741 00e3 07       		.uleb128 0x7
 742 00e4 FA010000 		.4byte	.LASF18
 743 00e8 01       		.byte	0x1
 744 00e9 58       		.byte	0x58
 745 00ea 77000000 		.4byte	0x77
 746 00ee 02       		.uleb128 0x2
 747 00ef 91       		.byte	0x91
 748 00f0 70       		.sleb128 -16
 749 00f1 00       		.byte	0
 750 00f2 06       		.uleb128 0x6
 751 00f3 94030000 		.4byte	.LASF20
 752 00f7 01       		.byte	0x1
 753 00f8 9D       		.byte	0x9d
 754 00f9 77000000 		.4byte	0x77
 755 00fd 00000000 		.4byte	.LFB3
 756 0101 48000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 23


 757 0105 01       		.uleb128 0x1
 758 0106 9C       		.byte	0x9c
 759 0107 28010000 		.4byte	0x128
 760 010b 07       		.uleb128 0x7
 761 010c 78000000 		.4byte	.LASF21
 762 0110 01       		.byte	0x1
 763 0111 9F       		.byte	0x9f
 764 0112 77000000 		.4byte	0x77
 765 0116 02       		.uleb128 0x2
 766 0117 91       		.byte	0x91
 767 0118 74       		.sleb128 -12
 768 0119 07       		.uleb128 0x7
 769 011a 51000000 		.4byte	.LASF22
 770 011e 01       		.byte	0x1
 771 011f A1       		.byte	0xa1
 772 0120 77000000 		.4byte	0x77
 773 0124 02       		.uleb128 0x2
 774 0125 91       		.byte	0x91
 775 0126 70       		.sleb128 -16
 776 0127 00       		.byte	0
 777 0128 08       		.uleb128 0x8
 778 0129 4C030000 		.4byte	.LASF29
 779 012d 01       		.byte	0x1
 780 012e C8       		.byte	0xc8
 781 012f 00000000 		.4byte	.LFB4
 782 0133 60000000 		.4byte	.LFE4-.LFB4
 783 0137 01       		.uleb128 0x1
 784 0138 9C       		.byte	0x9c
 785 0139 09       		.uleb128 0x9
 786 013a 19020000 		.4byte	.LASF23
 787 013e 01       		.byte	0x1
 788 013f 0101     		.2byte	0x101
 789 0141 00000000 		.4byte	.LFB5
 790 0145 A0000000 		.4byte	.LFE5-.LFB5
 791 0149 01       		.uleb128 0x1
 792 014a 9C       		.byte	0x9c
 793 014b 6E010000 		.4byte	0x16e
 794 014f 0A       		.uleb128 0xa
 795 0150 0C000000 		.4byte	.LASF25
 796 0154 01       		.byte	0x1
 797 0155 0101     		.2byte	0x101
 798 0157 77000000 		.4byte	0x77
 799 015b 02       		.uleb128 0x2
 800 015c 91       		.byte	0x91
 801 015d 6C       		.sleb128 -20
 802 015e 0B       		.uleb128 0xb
 803 015f 51000000 		.4byte	.LASF22
 804 0163 01       		.byte	0x1
 805 0164 0401     		.2byte	0x104
 806 0166 77000000 		.4byte	0x77
 807 016a 02       		.uleb128 0x2
 808 016b 91       		.byte	0x91
 809 016c 74       		.sleb128 -12
 810 016d 00       		.byte	0
 811 016e 0C       		.uleb128 0xc
 812 016f A0010000 		.4byte	.LASF24
 813 0173 01       		.byte	0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 24


 814 0174 5401     		.2byte	0x154
 815 0176 00000000 		.4byte	.LFB6
 816 017a 34000000 		.4byte	.LFE6-.LFB6
 817 017e 01       		.uleb128 0x1
 818 017f 9C       		.byte	0x9c
 819 0180 B0010000 		.4byte	0x1b0
 820 0184 0A       		.uleb128 0xa
 821 0185 3C010000 		.4byte	.LASF26
 822 0189 01       		.byte	0x1
 823 018a 5401     		.2byte	0x154
 824 018c B0010000 		.4byte	0x1b0
 825 0190 02       		.uleb128 0x2
 826 0191 91       		.byte	0x91
 827 0192 6C       		.sleb128 -20
 828 0193 0A       		.uleb128 0xa
 829 0194 06000000 		.4byte	.LASF27
 830 0198 01       		.byte	0x1
 831 0199 5401     		.2byte	0x154
 832 019b 77000000 		.4byte	0x77
 833 019f 02       		.uleb128 0x2
 834 01a0 91       		.byte	0x91
 835 01a1 68       		.sleb128 -24
 836 01a2 0D       		.uleb128 0xd
 837 01a3 6900     		.ascii	"i\000"
 838 01a5 01       		.byte	0x1
 839 01a6 5601     		.2byte	0x156
 840 01a8 77000000 		.4byte	0x77
 841 01ac 02       		.uleb128 0x2
 842 01ad 91       		.byte	0x91
 843 01ae 74       		.sleb128 -12
 844 01af 00       		.byte	0
 845 01b0 0E       		.uleb128 0xe
 846 01b1 04       		.byte	0x4
 847 01b2 B6010000 		.4byte	0x1b6
 848 01b6 0F       		.uleb128 0xf
 849 01b7 6B000000 		.4byte	0x6b
 850 01bb 10       		.uleb128 0x10
 851 01bc 31020000 		.4byte	.LASF28
 852 01c0 01       		.byte	0x1
 853 01c1 7501     		.2byte	0x175
 854 01c3 77000000 		.4byte	0x77
 855 01c7 00000000 		.4byte	.LFB7
 856 01cb 48000000 		.4byte	.LFE7-.LFB7
 857 01cf 01       		.uleb128 0x1
 858 01d0 9C       		.byte	0x9c
 859 01d1 F4010000 		.4byte	0x1f4
 860 01d5 0B       		.uleb128 0xb
 861 01d6 78000000 		.4byte	.LASF21
 862 01da 01       		.byte	0x1
 863 01db 7701     		.2byte	0x177
 864 01dd 77000000 		.4byte	0x77
 865 01e1 02       		.uleb128 0x2
 866 01e2 91       		.byte	0x91
 867 01e3 74       		.sleb128 -12
 868 01e4 0B       		.uleb128 0xb
 869 01e5 FA010000 		.4byte	.LASF18
 870 01e9 01       		.byte	0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 25


 871 01ea 7901     		.2byte	0x179
 872 01ec 77000000 		.4byte	0x77
 873 01f0 02       		.uleb128 0x2
 874 01f1 91       		.byte	0x91
 875 01f2 70       		.sleb128 -16
 876 01f3 00       		.byte	0
 877 01f4 11       		.uleb128 0x11
 878 01f5 86010000 		.4byte	.LASF30
 879 01f9 01       		.byte	0x1
 880 01fa A101     		.2byte	0x1a1
 881 01fc 00000000 		.4byte	.LFB8
 882 0200 68000000 		.4byte	.LFE8-.LFB8
 883 0204 01       		.uleb128 0x1
 884 0205 9C       		.byte	0x9c
 885 0206 10       		.uleb128 0x10
 886 0207 38000000 		.4byte	.LASF31
 887 020b 01       		.byte	0x1
 888 020c C601     		.2byte	0x1c6
 889 020e 77000000 		.4byte	0x77
 890 0212 00000000 		.4byte	.LFB9
 891 0216 20000000 		.4byte	.LFE9-.LFB9
 892 021a 01       		.uleb128 0x1
 893 021b 9C       		.byte	0x9c
 894 021c 30020000 		.4byte	0x230
 895 0220 0B       		.uleb128 0xb
 896 0221 C3010000 		.4byte	.LASF32
 897 0225 01       		.byte	0x1
 898 0226 C801     		.2byte	0x1c8
 899 0228 77000000 		.4byte	0x77
 900 022c 02       		.uleb128 0x2
 901 022d 91       		.byte	0x91
 902 022e 74       		.sleb128 -12
 903 022f 00       		.byte	0
 904 0230 10       		.uleb128 0x10
 905 0231 5F000000 		.4byte	.LASF33
 906 0235 01       		.byte	0x1
 907 0236 DC01     		.2byte	0x1dc
 908 0238 77000000 		.4byte	0x77
 909 023c 00000000 		.4byte	.LFB10
 910 0240 20000000 		.4byte	.LFE10-.LFB10
 911 0244 01       		.uleb128 0x1
 912 0245 9C       		.byte	0x9c
 913 0246 5A020000 		.4byte	0x25a
 914 024a 0B       		.uleb128 0xb
 915 024b B5010000 		.4byte	.LASF34
 916 024f 01       		.byte	0x1
 917 0250 DE01     		.2byte	0x1de
 918 0252 77000000 		.4byte	0x77
 919 0256 02       		.uleb128 0x2
 920 0257 91       		.byte	0x91
 921 0258 74       		.sleb128 -12
 922 0259 00       		.byte	0
 923 025a 12       		.uleb128 0x12
 924 025b B0030000 		.4byte	.LASF35
 925 025f 01       		.byte	0x1
 926 0260 1C       		.byte	0x1c
 927 0261 A9000000 		.4byte	0xa9
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 26


 928 0265 05       		.uleb128 0x5
 929 0266 03       		.byte	0x3
 930 0267 00000000 		.4byte	UART_rxBufferHead
 931 026b 12       		.uleb128 0x12
 932 026c 95000000 		.4byte	.LASF36
 933 0270 01       		.byte	0x1
 934 0271 1E       		.byte	0x1e
 935 0272 A9000000 		.4byte	0xa9
 936 0276 05       		.uleb128 0x5
 937 0277 03       		.byte	0x3
 938 0278 00000000 		.4byte	UART_rxBufferTail
 939 027c 12       		.uleb128 0x12
 940 027d E4010000 		.4byte	.LASF37
 941 0281 01       		.byte	0x1
 942 0282 26       		.byte	0x26
 943 0283 98000000 		.4byte	0x98
 944 0287 05       		.uleb128 0x5
 945 0288 03       		.byte	0x3
 946 0289 00000000 		.4byte	UART_rxBufferOverflow
 947 028d 12       		.uleb128 0x12
 948 028e 4D020000 		.4byte	.LASF38
 949 0292 01       		.byte	0x1
 950 0293 2C       		.byte	0x2c
 951 0294 A9000000 		.4byte	0xa9
 952 0298 05       		.uleb128 0x5
 953 0299 03       		.byte	0x3
 954 029a 00000000 		.4byte	UART_txBufferHead
 955 029e 12       		.uleb128 0x12
 956 029f 6D010000 		.4byte	.LASF39
 957 02a3 01       		.byte	0x1
 958 02a4 2E       		.byte	0x2e
 959 02a5 A9000000 		.4byte	0xa9
 960 02a9 05       		.uleb128 0x5
 961 02aa 03       		.byte	0x3
 962 02ab 00000000 		.4byte	UART_txBufferTail
 963 02af 13       		.uleb128 0x13
 964 02b0 98000000 		.4byte	0x98
 965 02b4 C0020000 		.4byte	0x2c0
 966 02b8 14       		.uleb128 0x14
 967 02b9 B5000000 		.4byte	0xb5
 968 02bd 0008     		.2byte	0x800
 969 02bf 00       		.byte	0
 970 02c0 12       		.uleb128 0x12
 971 02c1 50010000 		.4byte	.LASF40
 972 02c5 01       		.byte	0x1
 973 02c6 33       		.byte	0x33
 974 02c7 D1020000 		.4byte	0x2d1
 975 02cb 05       		.uleb128 0x5
 976 02cc 03       		.byte	0x3
 977 02cd 00000000 		.4byte	UART_rxBufferInternal
 978 02d1 05       		.uleb128 0x5
 979 02d2 AF020000 		.4byte	0x2af
 980 02d6 13       		.uleb128 0x13
 981 02d7 98000000 		.4byte	0x98
 982 02db E7020000 		.4byte	0x2e7
 983 02df 14       		.uleb128 0x14
 984 02e0 B5000000 		.4byte	0xb5
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 27


 985 02e4 FF07     		.2byte	0x7ff
 986 02e6 00       		.byte	0
 987 02e7 12       		.uleb128 0x12
 988 02e8 72030000 		.4byte	.LASF41
 989 02ec 01       		.byte	0x1
 990 02ed 37       		.byte	0x37
 991 02ee F8020000 		.4byte	0x2f8
 992 02f2 05       		.uleb128 0x5
 993 02f3 03       		.byte	0x3
 994 02f4 00000000 		.4byte	UART_txBufferInternal
 995 02f8 05       		.uleb128 0x5
 996 02f9 D6020000 		.4byte	0x2d6
 997 02fd 00       		.byte	0
 998              		.section	.debug_abbrev,"",%progbits
 999              	.Ldebug_abbrev0:
 1000 0000 01       		.uleb128 0x1
 1001 0001 11       		.uleb128 0x11
 1002 0002 01       		.byte	0x1
 1003 0003 25       		.uleb128 0x25
 1004 0004 0E       		.uleb128 0xe
 1005 0005 13       		.uleb128 0x13
 1006 0006 0B       		.uleb128 0xb
 1007 0007 03       		.uleb128 0x3
 1008 0008 0E       		.uleb128 0xe
 1009 0009 1B       		.uleb128 0x1b
 1010 000a 0E       		.uleb128 0xe
 1011 000b 55       		.uleb128 0x55
 1012 000c 17       		.uleb128 0x17
 1013 000d 11       		.uleb128 0x11
 1014 000e 01       		.uleb128 0x1
 1015 000f 10       		.uleb128 0x10
 1016 0010 17       		.uleb128 0x17
 1017 0011 00       		.byte	0
 1018 0012 00       		.byte	0
 1019 0013 02       		.uleb128 0x2
 1020 0014 24       		.uleb128 0x24
 1021 0015 00       		.byte	0
 1022 0016 0B       		.uleb128 0xb
 1023 0017 0B       		.uleb128 0xb
 1024 0018 3E       		.uleb128 0x3e
 1025 0019 0B       		.uleb128 0xb
 1026 001a 03       		.uleb128 0x3
 1027 001b 0E       		.uleb128 0xe
 1028 001c 00       		.byte	0
 1029 001d 00       		.byte	0
 1030 001e 03       		.uleb128 0x3
 1031 001f 24       		.uleb128 0x24
 1032 0020 00       		.byte	0
 1033 0021 0B       		.uleb128 0xb
 1034 0022 0B       		.uleb128 0xb
 1035 0023 3E       		.uleb128 0x3e
 1036 0024 0B       		.uleb128 0xb
 1037 0025 03       		.uleb128 0x3
 1038 0026 08       		.uleb128 0x8
 1039 0027 00       		.byte	0
 1040 0028 00       		.byte	0
 1041 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 28


 1042 002a 16       		.uleb128 0x16
 1043 002b 00       		.byte	0
 1044 002c 03       		.uleb128 0x3
 1045 002d 0E       		.uleb128 0xe
 1046 002e 3A       		.uleb128 0x3a
 1047 002f 0B       		.uleb128 0xb
 1048 0030 3B       		.uleb128 0x3b
 1049 0031 05       		.uleb128 0x5
 1050 0032 49       		.uleb128 0x49
 1051 0033 13       		.uleb128 0x13
 1052 0034 00       		.byte	0
 1053 0035 00       		.byte	0
 1054 0036 05       		.uleb128 0x5
 1055 0037 35       		.uleb128 0x35
 1056 0038 00       		.byte	0
 1057 0039 49       		.uleb128 0x49
 1058 003a 13       		.uleb128 0x13
 1059 003b 00       		.byte	0
 1060 003c 00       		.byte	0
 1061 003d 06       		.uleb128 0x6
 1062 003e 2E       		.uleb128 0x2e
 1063 003f 01       		.byte	0x1
 1064 0040 3F       		.uleb128 0x3f
 1065 0041 19       		.uleb128 0x19
 1066 0042 03       		.uleb128 0x3
 1067 0043 0E       		.uleb128 0xe
 1068 0044 3A       		.uleb128 0x3a
 1069 0045 0B       		.uleb128 0xb
 1070 0046 3B       		.uleb128 0x3b
 1071 0047 0B       		.uleb128 0xb
 1072 0048 27       		.uleb128 0x27
 1073 0049 19       		.uleb128 0x19
 1074 004a 49       		.uleb128 0x49
 1075 004b 13       		.uleb128 0x13
 1076 004c 11       		.uleb128 0x11
 1077 004d 01       		.uleb128 0x1
 1078 004e 12       		.uleb128 0x12
 1079 004f 06       		.uleb128 0x6
 1080 0050 40       		.uleb128 0x40
 1081 0051 18       		.uleb128 0x18
 1082 0052 9742     		.uleb128 0x2117
 1083 0054 19       		.uleb128 0x19
 1084 0055 01       		.uleb128 0x1
 1085 0056 13       		.uleb128 0x13
 1086 0057 00       		.byte	0
 1087 0058 00       		.byte	0
 1088 0059 07       		.uleb128 0x7
 1089 005a 34       		.uleb128 0x34
 1090 005b 00       		.byte	0
 1091 005c 03       		.uleb128 0x3
 1092 005d 0E       		.uleb128 0xe
 1093 005e 3A       		.uleb128 0x3a
 1094 005f 0B       		.uleb128 0xb
 1095 0060 3B       		.uleb128 0x3b
 1096 0061 0B       		.uleb128 0xb
 1097 0062 49       		.uleb128 0x49
 1098 0063 13       		.uleb128 0x13
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 29


 1099 0064 02       		.uleb128 0x2
 1100 0065 18       		.uleb128 0x18
 1101 0066 00       		.byte	0
 1102 0067 00       		.byte	0
 1103 0068 08       		.uleb128 0x8
 1104 0069 2E       		.uleb128 0x2e
 1105 006a 00       		.byte	0
 1106 006b 3F       		.uleb128 0x3f
 1107 006c 19       		.uleb128 0x19
 1108 006d 03       		.uleb128 0x3
 1109 006e 0E       		.uleb128 0xe
 1110 006f 3A       		.uleb128 0x3a
 1111 0070 0B       		.uleb128 0xb
 1112 0071 3B       		.uleb128 0x3b
 1113 0072 0B       		.uleb128 0xb
 1114 0073 27       		.uleb128 0x27
 1115 0074 19       		.uleb128 0x19
 1116 0075 11       		.uleb128 0x11
 1117 0076 01       		.uleb128 0x1
 1118 0077 12       		.uleb128 0x12
 1119 0078 06       		.uleb128 0x6
 1120 0079 40       		.uleb128 0x40
 1121 007a 18       		.uleb128 0x18
 1122 007b 9642     		.uleb128 0x2116
 1123 007d 19       		.uleb128 0x19
 1124 007e 00       		.byte	0
 1125 007f 00       		.byte	0
 1126 0080 09       		.uleb128 0x9
 1127 0081 2E       		.uleb128 0x2e
 1128 0082 01       		.byte	0x1
 1129 0083 3F       		.uleb128 0x3f
 1130 0084 19       		.uleb128 0x19
 1131 0085 03       		.uleb128 0x3
 1132 0086 0E       		.uleb128 0xe
 1133 0087 3A       		.uleb128 0x3a
 1134 0088 0B       		.uleb128 0xb
 1135 0089 3B       		.uleb128 0x3b
 1136 008a 05       		.uleb128 0x5
 1137 008b 27       		.uleb128 0x27
 1138 008c 19       		.uleb128 0x19
 1139 008d 11       		.uleb128 0x11
 1140 008e 01       		.uleb128 0x1
 1141 008f 12       		.uleb128 0x12
 1142 0090 06       		.uleb128 0x6
 1143 0091 40       		.uleb128 0x40
 1144 0092 18       		.uleb128 0x18
 1145 0093 9742     		.uleb128 0x2117
 1146 0095 19       		.uleb128 0x19
 1147 0096 01       		.uleb128 0x1
 1148 0097 13       		.uleb128 0x13
 1149 0098 00       		.byte	0
 1150 0099 00       		.byte	0
 1151 009a 0A       		.uleb128 0xa
 1152 009b 05       		.uleb128 0x5
 1153 009c 00       		.byte	0
 1154 009d 03       		.uleb128 0x3
 1155 009e 0E       		.uleb128 0xe
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 30


 1156 009f 3A       		.uleb128 0x3a
 1157 00a0 0B       		.uleb128 0xb
 1158 00a1 3B       		.uleb128 0x3b
 1159 00a2 05       		.uleb128 0x5
 1160 00a3 49       		.uleb128 0x49
 1161 00a4 13       		.uleb128 0x13
 1162 00a5 02       		.uleb128 0x2
 1163 00a6 18       		.uleb128 0x18
 1164 00a7 00       		.byte	0
 1165 00a8 00       		.byte	0
 1166 00a9 0B       		.uleb128 0xb
 1167 00aa 34       		.uleb128 0x34
 1168 00ab 00       		.byte	0
 1169 00ac 03       		.uleb128 0x3
 1170 00ad 0E       		.uleb128 0xe
 1171 00ae 3A       		.uleb128 0x3a
 1172 00af 0B       		.uleb128 0xb
 1173 00b0 3B       		.uleb128 0x3b
 1174 00b1 05       		.uleb128 0x5
 1175 00b2 49       		.uleb128 0x49
 1176 00b3 13       		.uleb128 0x13
 1177 00b4 02       		.uleb128 0x2
 1178 00b5 18       		.uleb128 0x18
 1179 00b6 00       		.byte	0
 1180 00b7 00       		.byte	0
 1181 00b8 0C       		.uleb128 0xc
 1182 00b9 2E       		.uleb128 0x2e
 1183 00ba 01       		.byte	0x1
 1184 00bb 3F       		.uleb128 0x3f
 1185 00bc 19       		.uleb128 0x19
 1186 00bd 03       		.uleb128 0x3
 1187 00be 0E       		.uleb128 0xe
 1188 00bf 3A       		.uleb128 0x3a
 1189 00c0 0B       		.uleb128 0xb
 1190 00c1 3B       		.uleb128 0x3b
 1191 00c2 05       		.uleb128 0x5
 1192 00c3 27       		.uleb128 0x27
 1193 00c4 19       		.uleb128 0x19
 1194 00c5 11       		.uleb128 0x11
 1195 00c6 01       		.uleb128 0x1
 1196 00c7 12       		.uleb128 0x12
 1197 00c8 06       		.uleb128 0x6
 1198 00c9 40       		.uleb128 0x40
 1199 00ca 18       		.uleb128 0x18
 1200 00cb 9642     		.uleb128 0x2116
 1201 00cd 19       		.uleb128 0x19
 1202 00ce 01       		.uleb128 0x1
 1203 00cf 13       		.uleb128 0x13
 1204 00d0 00       		.byte	0
 1205 00d1 00       		.byte	0
 1206 00d2 0D       		.uleb128 0xd
 1207 00d3 34       		.uleb128 0x34
 1208 00d4 00       		.byte	0
 1209 00d5 03       		.uleb128 0x3
 1210 00d6 08       		.uleb128 0x8
 1211 00d7 3A       		.uleb128 0x3a
 1212 00d8 0B       		.uleb128 0xb
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 31


 1213 00d9 3B       		.uleb128 0x3b
 1214 00da 05       		.uleb128 0x5
 1215 00db 49       		.uleb128 0x49
 1216 00dc 13       		.uleb128 0x13
 1217 00dd 02       		.uleb128 0x2
 1218 00de 18       		.uleb128 0x18
 1219 00df 00       		.byte	0
 1220 00e0 00       		.byte	0
 1221 00e1 0E       		.uleb128 0xe
 1222 00e2 0F       		.uleb128 0xf
 1223 00e3 00       		.byte	0
 1224 00e4 0B       		.uleb128 0xb
 1225 00e5 0B       		.uleb128 0xb
 1226 00e6 49       		.uleb128 0x49
 1227 00e7 13       		.uleb128 0x13
 1228 00e8 00       		.byte	0
 1229 00e9 00       		.byte	0
 1230 00ea 0F       		.uleb128 0xf
 1231 00eb 26       		.uleb128 0x26
 1232 00ec 00       		.byte	0
 1233 00ed 49       		.uleb128 0x49
 1234 00ee 13       		.uleb128 0x13
 1235 00ef 00       		.byte	0
 1236 00f0 00       		.byte	0
 1237 00f1 10       		.uleb128 0x10
 1238 00f2 2E       		.uleb128 0x2e
 1239 00f3 01       		.byte	0x1
 1240 00f4 3F       		.uleb128 0x3f
 1241 00f5 19       		.uleb128 0x19
 1242 00f6 03       		.uleb128 0x3
 1243 00f7 0E       		.uleb128 0xe
 1244 00f8 3A       		.uleb128 0x3a
 1245 00f9 0B       		.uleb128 0xb
 1246 00fa 3B       		.uleb128 0x3b
 1247 00fb 05       		.uleb128 0x5
 1248 00fc 27       		.uleb128 0x27
 1249 00fd 19       		.uleb128 0x19
 1250 00fe 49       		.uleb128 0x49
 1251 00ff 13       		.uleb128 0x13
 1252 0100 11       		.uleb128 0x11
 1253 0101 01       		.uleb128 0x1
 1254 0102 12       		.uleb128 0x12
 1255 0103 06       		.uleb128 0x6
 1256 0104 40       		.uleb128 0x40
 1257 0105 18       		.uleb128 0x18
 1258 0106 9742     		.uleb128 0x2117
 1259 0108 19       		.uleb128 0x19
 1260 0109 01       		.uleb128 0x1
 1261 010a 13       		.uleb128 0x13
 1262 010b 00       		.byte	0
 1263 010c 00       		.byte	0
 1264 010d 11       		.uleb128 0x11
 1265 010e 2E       		.uleb128 0x2e
 1266 010f 00       		.byte	0
 1267 0110 3F       		.uleb128 0x3f
 1268 0111 19       		.uleb128 0x19
 1269 0112 03       		.uleb128 0x3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 32


 1270 0113 0E       		.uleb128 0xe
 1271 0114 3A       		.uleb128 0x3a
 1272 0115 0B       		.uleb128 0xb
 1273 0116 3B       		.uleb128 0x3b
 1274 0117 05       		.uleb128 0x5
 1275 0118 27       		.uleb128 0x27
 1276 0119 19       		.uleb128 0x19
 1277 011a 11       		.uleb128 0x11
 1278 011b 01       		.uleb128 0x1
 1279 011c 12       		.uleb128 0x12
 1280 011d 06       		.uleb128 0x6
 1281 011e 40       		.uleb128 0x40
 1282 011f 18       		.uleb128 0x18
 1283 0120 9642     		.uleb128 0x2116
 1284 0122 19       		.uleb128 0x19
 1285 0123 00       		.byte	0
 1286 0124 00       		.byte	0
 1287 0125 12       		.uleb128 0x12
 1288 0126 34       		.uleb128 0x34
 1289 0127 00       		.byte	0
 1290 0128 03       		.uleb128 0x3
 1291 0129 0E       		.uleb128 0xe
 1292 012a 3A       		.uleb128 0x3a
 1293 012b 0B       		.uleb128 0xb
 1294 012c 3B       		.uleb128 0x3b
 1295 012d 0B       		.uleb128 0xb
 1296 012e 49       		.uleb128 0x49
 1297 012f 13       		.uleb128 0x13
 1298 0130 3F       		.uleb128 0x3f
 1299 0131 19       		.uleb128 0x19
 1300 0132 02       		.uleb128 0x2
 1301 0133 18       		.uleb128 0x18
 1302 0134 00       		.byte	0
 1303 0135 00       		.byte	0
 1304 0136 13       		.uleb128 0x13
 1305 0137 01       		.uleb128 0x1
 1306 0138 01       		.byte	0x1
 1307 0139 49       		.uleb128 0x49
 1308 013a 13       		.uleb128 0x13
 1309 013b 01       		.uleb128 0x1
 1310 013c 13       		.uleb128 0x13
 1311 013d 00       		.byte	0
 1312 013e 00       		.byte	0
 1313 013f 14       		.uleb128 0x14
 1314 0140 21       		.uleb128 0x21
 1315 0141 00       		.byte	0
 1316 0142 49       		.uleb128 0x49
 1317 0143 13       		.uleb128 0x13
 1318 0144 2F       		.uleb128 0x2f
 1319 0145 05       		.uleb128 0x5
 1320 0146 00       		.byte	0
 1321 0147 00       		.byte	0
 1322 0148 00       		.byte	0
 1323              		.section	.debug_aranges,"",%progbits
 1324 0000 5C000000 		.4byte	0x5c
 1325 0004 0200     		.2byte	0x2
 1326 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 33


 1327 000a 04       		.byte	0x4
 1328 000b 00       		.byte	0
 1329 000c 0000     		.2byte	0
 1330 000e 0000     		.2byte	0
 1331 0010 00000000 		.4byte	.LFB2
 1332 0014 58000000 		.4byte	.LFE2-.LFB2
 1333 0018 00000000 		.4byte	.LFB3
 1334 001c 48000000 		.4byte	.LFE3-.LFB3
 1335 0020 00000000 		.4byte	.LFB4
 1336 0024 60000000 		.4byte	.LFE4-.LFB4
 1337 0028 00000000 		.4byte	.LFB5
 1338 002c A0000000 		.4byte	.LFE5-.LFB5
 1339 0030 00000000 		.4byte	.LFB6
 1340 0034 34000000 		.4byte	.LFE6-.LFB6
 1341 0038 00000000 		.4byte	.LFB7
 1342 003c 48000000 		.4byte	.LFE7-.LFB7
 1343 0040 00000000 		.4byte	.LFB8
 1344 0044 68000000 		.4byte	.LFE8-.LFB8
 1345 0048 00000000 		.4byte	.LFB9
 1346 004c 20000000 		.4byte	.LFE9-.LFB9
 1347 0050 00000000 		.4byte	.LFB10
 1348 0054 20000000 		.4byte	.LFE10-.LFB10
 1349 0058 00000000 		.4byte	0
 1350 005c 00000000 		.4byte	0
 1351              		.section	.debug_ranges,"",%progbits
 1352              	.Ldebug_ranges0:
 1353 0000 00000000 		.4byte	.LFB2
 1354 0004 58000000 		.4byte	.LFE2
 1355 0008 00000000 		.4byte	.LFB3
 1356 000c 48000000 		.4byte	.LFE3
 1357 0010 00000000 		.4byte	.LFB4
 1358 0014 60000000 		.4byte	.LFE4
 1359 0018 00000000 		.4byte	.LFB5
 1360 001c A0000000 		.4byte	.LFE5
 1361 0020 00000000 		.4byte	.LFB6
 1362 0024 34000000 		.4byte	.LFE6
 1363 0028 00000000 		.4byte	.LFB7
 1364 002c 48000000 		.4byte	.LFE7
 1365 0030 00000000 		.4byte	.LFB8
 1366 0034 68000000 		.4byte	.LFE8
 1367 0038 00000000 		.4byte	.LFB9
 1368 003c 20000000 		.4byte	.LFE9
 1369 0040 00000000 		.4byte	.LFB10
 1370 0044 20000000 		.4byte	.LFE10
 1371 0048 00000000 		.4byte	0
 1372 004c 00000000 		.4byte	0
 1373              		.section	.debug_line,"",%progbits
 1374              	.Ldebug_line0:
 1375 0000 4B010000 		.section	.debug_str,"MS",%progbits,1
 1375      02004A00 
 1375      00000201 
 1375      FB0E0D00 
 1375      01010101 
 1376              	.LASF14:
 1377 0000 72656733 		.ascii	"reg32\000"
 1377      3200
 1378              	.LASF27:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 34


 1379 0006 636F756E 		.ascii	"count\000"
 1379      7400
 1380              	.LASF25:
 1381 000c 74784461 		.ascii	"txData\000"
 1381      746100
 1382              	.LASF3:
 1383 0013 73686F72 		.ascii	"short unsigned int\000"
 1383      7420756E 
 1383      7369676E 
 1383      65642069 
 1383      6E7400
 1384              	.LASF13:
 1385 0026 63686172 		.ascii	"char\000"
 1385      00
 1386              	.LASF8:
 1387 002b 756E7369 		.ascii	"unsigned int\000"
 1387      676E6564 
 1387      20696E74 
 1387      00
 1388              	.LASF31:
 1389 0038 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 1389      5F537069 
 1389      55617274 
 1389      44697361 
 1389      626C6549 
 1390              	.LASF22:
 1391 0051 6C6F6348 		.ascii	"locHead\000"
 1391      65616400 
 1392              	.LASF11:
 1393 0059 666C6F61 		.ascii	"float\000"
 1393      7400
 1394              	.LASF33:
 1395 005f 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 1395      5F537069 
 1395      55617274 
 1395      44697361 
 1395      626C6549 
 1396              	.LASF21:
 1397 0078 73697A65 		.ascii	"size\000"
 1397      00
 1398              	.LASF5:
 1399 007d 6C6F6E67 		.ascii	"long unsigned int\000"
 1399      20756E73 
 1399      69676E65 
 1399      6420696E 
 1399      7400
 1400              	.LASF9:
 1401 008f 75696E74 		.ascii	"uint8\000"
 1401      3800
 1402              	.LASF36:
 1403 0095 55415254 		.ascii	"UART_rxBufferTail\000"
 1403      5F727842 
 1403      75666665 
 1403      72546169 
 1403      6C00
 1404              	.LASF42:
 1405 00a7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 35


 1405      43313120 
 1405      352E342E 
 1405      31203230 
 1405      31363036 
 1406 00da 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1406      20726576 
 1406      6973696F 
 1406      6E203233 
 1406      37373135 
 1407 010d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1407      66756E63 
 1407      74696F6E 
 1407      2D736563 
 1407      74696F6E 
 1408              	.LASF17:
 1409 0135 72784461 		.ascii	"rxData\000"
 1409      746100
 1410              	.LASF26:
 1411 013c 77724275 		.ascii	"wrBuf\000"
 1411      6600
 1412              	.LASF1:
 1413 0142 756E7369 		.ascii	"unsigned char\000"
 1413      676E6564 
 1413      20636861 
 1413      7200
 1414              	.LASF40:
 1415 0150 55415254 		.ascii	"UART_rxBufferInternal\000"
 1415      5F727842 
 1415      75666665 
 1415      72496E74 
 1415      65726E61 
 1416              	.LASF12:
 1417 0166 646F7562 		.ascii	"double\000"
 1417      6C6500
 1418              	.LASF39:
 1419 016d 55415254 		.ascii	"UART_txBufferTail\000"
 1419      5F747842 
 1419      75666665 
 1419      72546169 
 1419      6C00
 1420              	.LASF10:
 1421 017f 75696E74 		.ascii	"uint32\000"
 1421      333200
 1422              	.LASF30:
 1423 0186 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 1423      5F537069 
 1423      55617274 
 1423      436C6561 
 1423      72547842 
 1424              	.LASF24:
 1425 01a0 55415254 		.ascii	"UART_SpiUartPutArray\000"
 1425      5F537069 
 1425      55617274 
 1425      50757441 
 1425      72726179 
 1426              	.LASF34:
 1427 01b5 696E7453 		.ascii	"intSourceMask\000"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 36


 1427      6F757263 
 1427      654D6173 
 1427      6B00
 1428              	.LASF32:
 1429 01c3 696E7453 		.ascii	"intSource\000"
 1429      6F757263 
 1429      6500
 1430              	.LASF7:
 1431 01cd 6C6F6E67 		.ascii	"long long unsigned int\000"
 1431      206C6F6E 
 1431      6720756E 
 1431      7369676E 
 1431      65642069 
 1432              	.LASF37:
 1433 01e4 55415254 		.ascii	"UART_rxBufferOverflow\000"
 1433      5F727842 
 1433      75666665 
 1433      724F7665 
 1433      72666C6F 
 1434              	.LASF18:
 1435 01fa 6C6F6354 		.ascii	"locTail\000"
 1435      61696C00 
 1436              	.LASF16:
 1437 0202 73697A65 		.ascii	"sizetype\000"
 1437      74797065 
 1437      00
 1438              	.LASF6:
 1439 020b 6C6F6E67 		.ascii	"long long int\000"
 1439      206C6F6E 
 1439      6720696E 
 1439      7400
 1440              	.LASF23:
 1441 0219 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1441      5F537069 
 1441      55617274 
 1441      57726974 
 1441      65547844 
 1442              	.LASF28:
 1443 0231 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 1443      5F537069 
 1443      55617274 
 1443      47657454 
 1443      78427566 
 1444              	.LASF38:
 1445 024d 55415254 		.ascii	"UART_txBufferHead\000"
 1445      5F747842 
 1445      75666665 
 1445      72486561 
 1445      6400
 1446              	.LASF2:
 1447 025f 73686F72 		.ascii	"short int\000"
 1447      7420696E 
 1447      7400
 1448              	.LASF43:
 1449 0269 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 1449      72617465 
 1449      645F536F 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 37


 1449      75726365 
 1449      5C50536F 
 1450              	.LASF19:
 1451 0290 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 1451      5F537069 
 1451      55617274 
 1451      52656164 
 1451      52784461 
 1452              	.LASF4:
 1453 02a7 6C6F6E67 		.ascii	"long int\000"
 1453      20696E74 
 1453      00
 1454              	.LASF44:
 1455 02b0 433A5C55 		.ascii	"C:\\Users\\Benakapoi\\Desktop\\PSoC-4-BLE-master\\P"
 1455      73657273 
 1455      5C42656E 
 1455      616B6170 
 1455      6F695C44 
 1456 02de 536F432D 		.ascii	"SoC-4-BLE-master\\100_Projects_in_100_Days\\Day020_"
 1456      342D424C 
 1456      452D6D61 
 1456      73746572 
 1456      5C313030 
 1457 030f 424C455F 		.ascii	"BLE_UART\\UART_to_BLE_peripheral\\UART_to_BLE_perip"
 1457      55415254 
 1457      5C554152 
 1457      545F746F 
 1457      5F424C45 
 1458 0340 68657261 		.ascii	"heral.cydsn\000"
 1458      6C2E6379 
 1458      64736E00 
 1459              	.LASF29:
 1460 034c 55415254 		.ascii	"UART_SpiUartClearRxBuffer\000"
 1460      5F537069 
 1460      55617274 
 1460      436C6561 
 1460      72527842 
 1461              	.LASF15:
 1462 0366 6C6F6E67 		.ascii	"long double\000"
 1462      20646F75 
 1462      626C6500 
 1463              	.LASF41:
 1464 0372 55415254 		.ascii	"UART_txBufferInternal\000"
 1464      5F747842 
 1464      75666665 
 1464      72496E74 
 1464      65726E61 
 1465              	.LASF0:
 1466 0388 7369676E 		.ascii	"signed char\000"
 1466      65642063 
 1466      68617200 
 1467              	.LASF20:
 1468 0394 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 1468      5F537069 
 1468      55617274 
 1468      47657452 
 1468      78427566 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccLSrbkQ.s 			page 38


 1469              	.LASF35:
 1470 03b0 55415254 		.ascii	"UART_rxBufferHead\000"
 1470      5F727842 
 1470      75666665 
 1470      72486561 
 1470      6400
 1471              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
