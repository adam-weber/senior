ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 006CDC02 		.word	48000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 80BB0000 		.word	48000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 30       		.byte	48
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000C05D 		.word	1572864000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB2:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  89:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  92:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  93:Generated_Source\PSoC4/CyLib.c **** 
  94:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  95:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  96:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
 101:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
 102:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 5


 105:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 109:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 109 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 131              		.loc 1 110 0
 132 0004 044B     		ldr	r3, .L2
 133 0006 044A     		ldr	r2, .L2
 134 0008 1268     		ldr	r2, [r2]
 135 000a 8021     		movs	r1, #128
 136 000c 0906     		lsls	r1, r1, #24
 137 000e 0A43     		orrs	r2, r1
 138 0010 1A60     		str	r2, [r3]
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 113:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 114:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 115:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 116:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** 
 119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 120:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 121:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 122:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 123:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** }
 139              		.loc 1 125 0
 140 0012 C046     		nop
 141 0014 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0016 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0018 08010B40 		.word	1074462984
 148              		.cfi_endproc
 149              	.LFE2:
 150              		.size	CySysClkImoStart, .-CySysClkImoStart
 151              		.section	.text.CySysClkImoStop,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkImoStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkImoStop, %function
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 6


 157              	CySysClkImoStop:
 158              	.LFB3:
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 130:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 131:Generated_Source\PSoC4/CyLib.c **** *
 132:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 133:Generated_Source\PSoC4/CyLib.c **** *
 134:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 135:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 138:Generated_Source\PSoC4/CyLib.c **** *
 139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 141:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 141 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 147:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 148:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 149:Generated_Source\PSoC4/CyLib.c **** 
 150:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 169              		.loc 1 150 0
 170 0004 044B     		ldr	r3, .L5
 171 0006 044A     		ldr	r2, .L5
 172 0008 1268     		ldr	r2, [r2]
 173 000a 5200     		lsls	r2, r2, #1
 174 000c 5208     		lsrs	r2, r2, #1
 175 000e 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 151 0
 177 0010 C046     		nop
 178 0012 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0014 80BD     		pop	{r7, pc}
 181              	.L6:
 182 0016 C046     		.align	2
 183              	.L5:
 184 0018 08010B40 		.word	1074462984
 185              		.cfi_endproc
 186              	.LFE3:
 187              		.size	CySysClkImoStop, .-CySysClkImoStop
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 7


 188              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 189              		.align	2
 190              		.global	CySysClkWriteHfclkDirect
 191              		.code	16
 192              		.thumb_func
 193              		.type	CySysClkWriteHfclkDirect, %function
 194              	CySysClkWriteHfclkDirect:
 195              	.LFB4:
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 160:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 161:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 164:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 165:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 166:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 167:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 168:Generated_Source\PSoC4/CyLib.c ****     *
 169:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 170:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 171:Generated_Source\PSoC4/CyLib.c ****     *
 172:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 173:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 174:Generated_Source\PSoC4/CyLib.c ****     *
 175:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 176:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 177:Generated_Source\PSoC4/CyLib.c ****     {
 178:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 179:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 180:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 183:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 185:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 186:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 189:Generated_Source\PSoC4/CyLib.c ****         {
 190:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/CyLib.c **** 
 192:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 193:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 194:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 195:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 197:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 198:Generated_Source\PSoC4/CyLib.c **** 
 199:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 200:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 8


 201:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 202:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 203:Generated_Source\PSoC4/CyLib.c ****                 {
 204:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 205:Generated_Source\PSoC4/CyLib.c ****                     {
 206:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 207:Generated_Source\PSoC4/CyLib.c ****                         break;
 208:Generated_Source\PSoC4/CyLib.c ****                     }
 209:Generated_Source\PSoC4/CyLib.c ****                 }
 210:Generated_Source\PSoC4/CyLib.c ****             #else
 211:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 212:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 213:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 214:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 215:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 216:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 217:Generated_Source\PSoC4/CyLib.c ****                 #else
 218:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 219:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 220:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 229:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 245:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 248:Generated_Source\PSoC4/CyLib.c ****             }
 249:Generated_Source\PSoC4/CyLib.c ****             else
 250:Generated_Source\PSoC4/CyLib.c ****             {
 251:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 252:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 253:Generated_Source\PSoC4/CyLib.c **** 
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 9


 258:Generated_Source\PSoC4/CyLib.c ****             }
 259:Generated_Source\PSoC4/CyLib.c **** 
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 263:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 264:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 265:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 266:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 269:Generated_Source\PSoC4/CyLib.c ****         }
 270:Generated_Source\PSoC4/CyLib.c ****     }
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c **** 
 273:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 274:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 275:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 280:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 283:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 284:Generated_Source\PSoC4/CyLib.c ****     *
 285:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 286:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 287:Generated_Source\PSoC4/CyLib.c ****     {
 288:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 289:Generated_Source\PSoC4/CyLib.c ****     }
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c **** 
 292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 295:Generated_Source\PSoC4/CyLib.c ****     *
 296:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 297:Generated_Source\PSoC4/CyLib.c ****     *
 298:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 299:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 300:Generated_Source\PSoC4/CyLib.c ****     *
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 302:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 303:Generated_Source\PSoC4/CyLib.c ****     *
 304:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 305:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 306:Generated_Source\PSoC4/CyLib.c ****     {
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 310:Generated_Source\PSoC4/CyLib.c ****     }
 311:Generated_Source\PSoC4/CyLib.c **** 
 312:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 10


 315:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 318:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 319:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 326:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 329:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 335:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 336:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((4u < (CY_SFLASH_M0_SMR_3_REG & CY_SFLASH_M0_SMR_3_MASK
 337:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 338:Generated_Source\PSoC4/CyLib.c ****             
 339:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 340:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 341:Generated_Source\PSoC4/CyLib.c **** 
 342:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 343:Generated_Source\PSoC4/CyLib.c ****             {
 344:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 345:Generated_Source\PSoC4/CyLib.c ****                 {
 346:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 347:Generated_Source\PSoC4/CyLib.c ****                     break;
 348:Generated_Source\PSoC4/CyLib.c ****                 }
 349:Generated_Source\PSoC4/CyLib.c ****             }
 350:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 351:Generated_Source\PSoC4/CyLib.c ****         
 352:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 353:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 354:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 355:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 356:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 357:Generated_Source\PSoC4/CyLib.c **** 
 358:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 359:Generated_Source\PSoC4/CyLib.c ****            
 360:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 361:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             if(CySysClkUsbCuSortTrim)
 364:Generated_Source\PSoC4/CyLib.c ****             {
 365:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 366:Generated_Source\PSoC4/CyLib.c ****                 
 367:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 368:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 369:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 370:Generated_Source\PSoC4/CyLib.c ****                 
 371:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 11


 372:Generated_Source\PSoC4/CyLib.c ****             else
 373:Generated_Source\PSoC4/CyLib.c ****             {
 374:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 375:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 376:Generated_Source\PSoC4/CyLib.c **** 
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c **** 
 379:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 380:Generated_Source\PSoC4/CyLib.c ****             {
 381:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (CySysClkUsbCuSortTrim) ? (uint32)CY_SFLASH_CU_IMO_TRIM_
 382:Generated_Source\PSoC4/CyLib.c ****                                                                      (uint32)CY_SFLASH_IMO_TRIM_USB
 383:Generated_Source\PSoC4/CyLib.c ****             }
 384:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 385:Generated_Source\PSoC4/CyLib.c ****             {
 386:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (CySysClkUsbCuSortTrim) ? (uint32)CY_SFLASH_CU_IMO_TRIM_
 387:Generated_Source\PSoC4/CyLib.c ****                                                                      (uint32)CY_SFLASH_IMO_TRIM_USB
 388:Generated_Source\PSoC4/CyLib.c ****             }
 389:Generated_Source\PSoC4/CyLib.c ****             else
 390:Generated_Source\PSoC4/CyLib.c ****             {
 391:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 392:Generated_Source\PSoC4/CyLib.c ****             }
 393:Generated_Source\PSoC4/CyLib.c ****             
 394:Generated_Source\PSoC4/CyLib.c ****             
 395:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 398:Generated_Source\PSoC4/CyLib.c ****     }
 399:Generated_Source\PSoC4/CyLib.c **** 
 400:Generated_Source\PSoC4/CyLib.c **** 
 401:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 402:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 403:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 404:Generated_Source\PSoC4/CyLib.c ****     *
 405:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 406:Generated_Source\PSoC4/CyLib.c ****     *
 407:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 408:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 409:Generated_Source\PSoC4/CyLib.c ****     *
 410:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 411:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 412:Generated_Source\PSoC4/CyLib.c ****     *
 413:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 414:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 415:Generated_Source\PSoC4/CyLib.c ****     {
 416:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 417:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 418:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((4u < (CY_SFLASH_M0_SMR_3_REG & CY_SFLASH_M0_SMR_3_MASK
 419:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 420:Generated_Source\PSoC4/CyLib.c **** 
 421:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 422:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 423:Generated_Source\PSoC4/CyLib.c **** 
 424:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 425:Generated_Source\PSoC4/CyLib.c ****             {
 426:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 427:Generated_Source\PSoC4/CyLib.c ****                 {
 428:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 12


 429:Generated_Source\PSoC4/CyLib.c ****                     break;
 430:Generated_Source\PSoC4/CyLib.c ****                 }
 431:Generated_Source\PSoC4/CyLib.c ****             }           
 432:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 433:Generated_Source\PSoC4/CyLib.c ****         
 434:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 437:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 438:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 439:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 440:Generated_Source\PSoC4/CyLib.c **** 
 441:Generated_Source\PSoC4/CyLib.c ****             if(CySysClkUsbCuSortTrim)
 442:Generated_Source\PSoC4/CyLib.c ****             {
 443:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 444:Generated_Source\PSoC4/CyLib.c ****             }
 445:Generated_Source\PSoC4/CyLib.c ****             else
 446:Generated_Source\PSoC4/CyLib.c ****             {
 447:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 448:Generated_Source\PSoC4/CyLib.c ****             }
 449:Generated_Source\PSoC4/CyLib.c ****             
 450:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 451:Generated_Source\PSoC4/CyLib.c ****             
 452:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 453:Generated_Source\PSoC4/CyLib.c ****     }
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 463:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 464:Generated_Source\PSoC4/CyLib.c ****     *
 465:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 466:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 467:Generated_Source\PSoC4/CyLib.c ****     *
 468:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 469:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 470:Generated_Source\PSoC4/CyLib.c ****     {
 471:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 472:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 473:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 474:Generated_Source\PSoC4/CyLib.c ****     }
 475:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 476:Generated_Source\PSoC4/CyLib.c **** 
 477:Generated_Source\PSoC4/CyLib.c **** 
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 481:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c **** *
 483:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 484:Generated_Source\PSoC4/CyLib.c **** *
 485:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 13


 486:Generated_Source\PSoC4/CyLib.c **** *
 487:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 488:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 489:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 490:Generated_Source\PSoC4/CyLib.c **** *
 491:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 492:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 493:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 494:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 495:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 496:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 497:Generated_Source\PSoC4/CyLib.c **** *
 498:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 499:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 500:Generated_Source\PSoC4/CyLib.c **** *
 501:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 502:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 503:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 504:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 505:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 506:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 507:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 508:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 509:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 510:Generated_Source\PSoC4/CyLib.c **** *
 511:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 512:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 513:Generated_Source\PSoC4/CyLib.c **** {
 196              		.loc 1 513 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 90B5     		push	{r4, r7, lr}
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 85B0     		sub	sp, sp, #20
 206              		.cfi_def_cfa_offset 32
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 209 0006 7860     		str	r0, [r7, #4]
 514:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 515:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 210              		.loc 1 517 0
 211 0008 0F23     		movs	r3, #15
 212 000a FC18     		adds	r4, r7, r3
 213 000c FFF7FEFF 		bl	CyEnterCriticalSection
 214 0010 0300     		movs	r3, r0
 215 0012 2370     		strb	r3, [r4]
 518:Generated_Source\PSoC4/CyLib.c **** 
 519:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 520:Generated_Source\PSoC4/CyLib.c ****     /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 521:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 522:Generated_Source\PSoC4/CyLib.c ****     tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PLL_SH
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 14


 523:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 524:Generated_Source\PSoC4/CyLib.c **** #endif
 525:Generated_Source\PSoC4/CyLib.c **** 
 526:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 216              		.loc 1 526 0
 217 0014 0B4B     		ldr	r3, .L8
 218 0016 1B68     		ldr	r3, [r3]
 219 0018 0722     		movs	r2, #7
 220 001a 9343     		bics	r3, r2
 221 001c BB60     		str	r3, [r7, #8]
 527:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 528:Generated_Source\PSoC4/CyLib.c **** 
 529:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 530:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 531:Generated_Source\PSoC4/CyLib.c ****     {
 532:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 533:Generated_Source\PSoC4/CyLib.c ****     }
 534:Generated_Source\PSoC4/CyLib.c ****     else
 535:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 536:Generated_Source\PSoC4/CyLib.c ****     {
 537:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 537 0
 223 001e 7B68     		ldr	r3, [r7, #4]
 224 0020 0722     		movs	r2, #7
 225 0022 1340     		ands	r3, r2
 226 0024 BA68     		ldr	r2, [r7, #8]
 227 0026 1343     		orrs	r3, r2
 228 0028 BB60     		str	r3, [r7, #8]
 538:Generated_Source\PSoC4/CyLib.c ****     }   
 539:Generated_Source\PSoC4/CyLib.c ****     
 540:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 229              		.loc 1 540 0
 230 002a 064B     		ldr	r3, .L8
 231 002c BA68     		ldr	r2, [r7, #8]
 232 002e 1A60     		str	r2, [r3]
 541:Generated_Source\PSoC4/CyLib.c ****     
 542:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 233              		.loc 1 542 0
 234 0030 0F23     		movs	r3, #15
 235 0032 FB18     		adds	r3, r7, r3
 236 0034 1B78     		ldrb	r3, [r3]
 237 0036 1800     		movs	r0, r3
 238 0038 FFF7FEFF 		bl	CyExitCriticalSection
 543:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 543 0
 240 003c C046     		nop
 241 003e BD46     		mov	sp, r7
 242 0040 05B0     		add	sp, sp, #20
 243              		@ sp needed
 244 0042 90BD     		pop	{r4, r7, pc}
 245              	.L9:
 246              		.align	2
 247              	.L8:
 248 0044 00010B40 		.word	1074462976
 249              		.cfi_endproc
 250              	.LFE4:
 251              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 15


 252              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 253              		.align	2
 254              		.global	CySysEnablePumpClock
 255              		.code	16
 256              		.thumb_func
 257              		.type	CySysEnablePumpClock, %function
 258              	CySysEnablePumpClock:
 259              	.LFB5:
 544:Generated_Source\PSoC4/CyLib.c **** 
 545:Generated_Source\PSoC4/CyLib.c **** 
 546:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 547:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 548:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 549:Generated_Source\PSoC4/CyLib.c **** *
 550:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 551:Generated_Source\PSoC4/CyLib.c **** *
 552:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 553:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 554:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 555:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 558:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 559:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 560:Generated_Source\PSoC4/CyLib.c **** *
 561:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 562:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 563:Generated_Source\PSoC4/CyLib.c **** {
 260              		.loc 1 563 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 564:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 565:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 273              		.loc 1 565 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 0122     		movs	r2, #1
 276 000c 1340     		ands	r3, r2
 277 000e 08D0     		beq	.L11
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 278              		.loc 1 567 0
 279 0010 0C4A     		ldr	r2, .L14
 280 0012 0C4B     		ldr	r3, .L14
 281 0014 1968     		ldr	r1, [r3]
 282 0016 0C4B     		ldr	r3, .L14+4
 283 0018 1B68     		ldr	r3, [r3]
 284 001a 5B06     		lsls	r3, r3, #25
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 16


 285 001c 0B43     		orrs	r3, r1
 286 001e 1360     		str	r3, [r2]
 568:Generated_Source\PSoC4/CyLib.c ****         }
 569:Generated_Source\PSoC4/CyLib.c ****         else
 570:Generated_Source\PSoC4/CyLib.c ****         {
 571:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 572:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 573:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 574:Generated_Source\PSoC4/CyLib.c ****         }
 575:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 576:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 577:Generated_Source\PSoC4/CyLib.c ****         {
 578:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 579:Generated_Source\PSoC4/CyLib.c ****         }
 580:Generated_Source\PSoC4/CyLib.c ****         else
 581:Generated_Source\PSoC4/CyLib.c ****         {
 582:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 583:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 584:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 585:Generated_Source\PSoC4/CyLib.c ****         }
 586:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 587:Generated_Source\PSoC4/CyLib.c **** }
 287              		.loc 1 587 0
 288 0020 0CE0     		b	.L13
 289              	.L11:
 571:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 290              		.loc 1 571 0
 291 0022 084B     		ldr	r3, .L14
 292 0024 1B68     		ldr	r3, [r3]
 293 0026 5B0E     		lsrs	r3, r3, #25
 294 0028 0722     		movs	r2, #7
 295 002a 1A40     		ands	r2, r3
 296 002c 064B     		ldr	r3, .L14+4
 297 002e 1A60     		str	r2, [r3]
 573:Generated_Source\PSoC4/CyLib.c ****         }
 298              		.loc 1 573 0
 299 0030 044B     		ldr	r3, .L14
 300 0032 044A     		ldr	r2, .L14
 301 0034 1268     		ldr	r2, [r2]
 302 0036 0549     		ldr	r1, .L14+8
 303 0038 0A40     		ands	r2, r1
 304 003a 1A60     		str	r2, [r3]
 305              	.L13:
 306              		.loc 1 587 0
 307 003c C046     		nop
 308 003e BD46     		mov	sp, r7
 309 0040 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0042 80BD     		pop	{r7, pc}
 312              	.L15:
 313              		.align	2
 314              	.L14:
 315 0044 08010B40 		.word	1074462984
 316 0048 00000000 		.word	CySysClkPumpConfig
 317 004c FFFFFFF1 		.word	-234881025
 318              		.cfi_endproc
 319              	.LFE5:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 17


 320              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 321              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 322              		.align	2
 323              		.global	CySysClkGetSysclkSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysClkGetSysclkSource, %function
 327              	CySysClkGetSysclkSource:
 328              	.LFB6:
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c **** 
 590:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 591:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 592:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 593:Generated_Source\PSoC4/CyLib.c **** *
 594:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 595:Generated_Source\PSoC4/CyLib.c **** *
 596:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 597:Generated_Source\PSoC4/CyLib.c **** *
 598:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 599:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 600:Generated_Source\PSoC4/CyLib.c **** {
 329              		.loc 1 600 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 90B5     		push	{r4, r7, lr}
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 83B0     		sub	sp, sp, #12
 339              		.cfi_def_cfa_offset 24
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 601:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 602:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 603:Generated_Source\PSoC4/CyLib.c **** 
 604:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 342              		.loc 1 604 0
 343 0006 FC1D     		adds	r4, r7, #7
 344 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 345 000c 0300     		movs	r3, r0
 346 000e 2370     		strb	r3, [r4]
 605:Generated_Source\PSoC4/CyLib.c **** 
 606:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 607:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 608:Generated_Source\PSoC4/CyLib.c ****     {
 609:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 610:Generated_Source\PSoC4/CyLib.c ****     }
 611:Generated_Source\PSoC4/CyLib.c ****     else
 612:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 613:Generated_Source\PSoC4/CyLib.c ****     {
 614:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 347              		.loc 1 614 0
 348 0010 074B     		ldr	r3, .L18
 349 0012 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 18


 350 0014 0722     		movs	r2, #7
 351 0016 1340     		ands	r3, r2
 352 0018 3B60     		str	r3, [r7]
 615:Generated_Source\PSoC4/CyLib.c **** 
 616:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 617:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 618:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 619:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 620:Generated_Source\PSoC4/CyLib.c ****         
 621:Generated_Source\PSoC4/CyLib.c ****     }
 622:Generated_Source\PSoC4/CyLib.c **** 
 623:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 353              		.loc 1 623 0
 354 001a FB1D     		adds	r3, r7, #7
 355 001c 1B78     		ldrb	r3, [r3]
 356 001e 1800     		movs	r0, r3
 357 0020 FFF7FEFF 		bl	CyExitCriticalSection
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 358              		.loc 1 625 0
 359 0024 3B68     		ldr	r3, [r7]
 626:Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 626 0
 361 0026 1800     		movs	r0, r3
 362 0028 BD46     		mov	sp, r7
 363 002a 03B0     		add	sp, sp, #12
 364              		@ sp needed
 365 002c 90BD     		pop	{r4, r7, pc}
 366              	.L19:
 367 002e C046     		.align	2
 368              	.L18:
 369 0030 00010B40 		.word	1074462976
 370              		.cfi_endproc
 371              	.LFE6:
 372              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 373              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 374              		.align	2
 375              		.global	CySysClkWriteSysclkDiv
 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkWriteSysclkDiv, %function
 379              	CySysClkWriteSysclkDiv:
 380              	.LFB7:
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** 
 629:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 630:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 631:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 632:Generated_Source\PSoC4/CyLib.c **** *
 633:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 634:Generated_Source\PSoC4/CyLib.c **** *
 635:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 636:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 637:Generated_Source\PSoC4/CyLib.c **** *
 638:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 639:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 640:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 19


 641:Generated_Source\PSoC4/CyLib.c **** *
 642:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 643:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 644:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 645:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 646:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 647:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 650:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 651:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 652:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 653:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 654:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 655:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 656:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 657:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 658:Generated_Source\PSoC4/CyLib.c **** *
 659:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 660:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 661:Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 661 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 90B5     		push	{r4, r7, lr}
 386              		.cfi_def_cfa_offset 12
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 32
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 662:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 663:Generated_Source\PSoC4/CyLib.c **** 
 664:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 395              		.loc 1 664 0
 396 0008 0F23     		movs	r3, #15
 397 000a FC18     		adds	r4, r7, r3
 398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 399 0010 0300     		movs	r3, r0
 400 0012 2370     		strb	r3, [r4]
 665:Generated_Source\PSoC4/CyLib.c **** 
 666:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 401              		.loc 1 666 0
 402 0014 0A4B     		ldr	r3, .L21
 403 0016 7A68     		ldr	r2, [r7, #4]
 404 0018 D104     		lsls	r1, r2, #19
 405 001a E022     		movs	r2, #224
 406 001c 9203     		lsls	r2, r2, #14
 407 001e 1140     		ands	r1, r2
 667:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 668:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 408              		.loc 1 668 0
 409 0020 074A     		ldr	r2, .L21
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 20


 410 0022 1268     		ldr	r2, [r2]
 411 0024 0748     		ldr	r0, .L21+4
 412 0026 0240     		ands	r2, r0
 667:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 413              		.loc 1 667 0
 414 0028 0A43     		orrs	r2, r1
 666:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 415              		.loc 1 666 0
 416 002a 1A60     		str	r2, [r3]
 669:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 417              		.loc 1 671 0
 418 002c 0F23     		movs	r3, #15
 419 002e FB18     		adds	r3, r7, r3
 420 0030 1B78     		ldrb	r3, [r3]
 421 0032 1800     		movs	r0, r3
 422 0034 FFF7FEFF 		bl	CyExitCriticalSection
 672:Generated_Source\PSoC4/CyLib.c **** }
 423              		.loc 1 672 0
 424 0038 C046     		nop
 425 003a BD46     		mov	sp, r7
 426 003c 05B0     		add	sp, sp, #20
 427              		@ sp needed
 428 003e 90BD     		pop	{r4, r7, pc}
 429              	.L22:
 430              		.align	2
 431              	.L21:
 432 0040 00010B40 		.word	1074462976
 433 0044 FFFFC7FF 		.word	-3670017
 434              		.cfi_endproc
 435              	.LFE7:
 436              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 437              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 438              		.align	2
 439              		.global	CySysClkWriteImoFreq
 440              		.code	16
 441              		.thumb_func
 442              		.type	CySysClkWriteImoFreq, %function
 443              	CySysClkWriteImoFreq:
 444              	.LFB8:
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 676:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 677:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 678:Generated_Source\PSoC4/CyLib.c **** *
 679:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 680:Generated_Source\PSoC4/CyLib.c **** *
 681:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 682:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 685:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 686:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 687:Generated_Source\PSoC4/CyLib.c **** *
 688:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 21


 689:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 690:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 691:Generated_Source\PSoC4/CyLib.c **** *
 692:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 693:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 694:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 695:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 698:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 699:Generated_Source\PSoC4/CyLib.c **** *
 700:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 701:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 702:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 703:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 704:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 705:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 706:Generated_Source\PSoC4/CyLib.c **** *
 707:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 708:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 709:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 710:Generated_Source\PSoC4/CyLib.c **** *
 711:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 712:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 713:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 714:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 715:Generated_Source\PSoC4/CyLib.c **** *
 716:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 717:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 718:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 719:Generated_Source\PSoC4/CyLib.c ****     {
 445              		.loc 1 719 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 90B5     		push	{r4, r7, lr}
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 85B0     		sub	sp, sp, #20
 455              		.cfi_def_cfa_offset 32
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 720:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 721:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 722:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 723:Generated_Source\PSoC4/CyLib.c ****         #else
 724:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 725:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 726:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 727:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 728:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 729:Generated_Source\PSoC4/CyLib.c **** 
 730:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 731:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 22


 732:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 733:Generated_Source\PSoC4/CyLib.c **** 
 734:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 735:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 736:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 737:Generated_Source\PSoC4/CyLib.c **** 
 738:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 739:Generated_Source\PSoC4/CyLib.c **** 
 740:Generated_Source\PSoC4/CyLib.c **** 
 741:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 459              		.loc 1 741 0
 460 0008 0C23     		movs	r3, #12
 461 000a FC18     		adds	r4, r7, r3
 462 000c FFF7FEFF 		bl	CyEnterCriticalSection
 463 0010 0300     		movs	r3, r0
 464 0012 2370     		strb	r3, [r4]
 742:Generated_Source\PSoC4/CyLib.c **** 
 743:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 744:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 745:Generated_Source\PSoC4/CyLib.c ****             {
 746:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 747:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 748:Generated_Source\PSoC4/CyLib.c ****             }
 749:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 750:Generated_Source\PSoC4/CyLib.c **** 
 751:Generated_Source\PSoC4/CyLib.c **** 
 752:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 755:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 756:Generated_Source\PSoC4/CyLib.c ****                 {
 757:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 758:Generated_Source\PSoC4/CyLib.c **** 
 759:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 760:Generated_Source\PSoC4/CyLib.c ****                 {
 761:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 762:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 763:Generated_Source\PSoC4/CyLib.c ****                 }
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 766:Generated_Source\PSoC4/CyLib.c ****                 }
 767:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c **** 
 772:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 775:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 776:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 777:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 778:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 779:Generated_Source\PSoC4/CyLib.c **** 
 780:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 781:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 782:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 23


 783:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 784:Generated_Source\PSoC4/CyLib.c **** 
 785:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 786:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 787:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 790:Generated_Source\PSoC4/CyLib.c **** 
 791:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 465              		.loc 1 791 0
 466 0014 7B68     		ldr	r3, [r7, #4]
 467 0016 022B     		cmp	r3, #2
 468 0018 00D8     		bhi	.LCB302
 469 001a AFE0     		b	.L24	@long jump
 470              	.LCB302:
 471              		.loc 1 791 0 is_stmt 0 discriminator 1
 472 001c 7B68     		ldr	r3, [r7, #4]
 473 001e 302B     		cmp	r3, #48
 474 0020 00D9     		bls	.LCB305
 475 0022 ABE0     		b	.L24	@long jump
 476              	.LCB305:
 792:Generated_Source\PSoC4/CyLib.c ****         {
 793:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 477              		.loc 1 793 0 is_stmt 1
 478 0024 5C4B     		ldr	r3, .L35
 479 0026 1B78     		ldrb	r3, [r3]
 480 0028 DBB2     		uxtb	r3, r3
 481 002a 1A00     		movs	r2, r3
 482 002c 7B68     		ldr	r3, [r7, #4]
 483 002e 9A42     		cmp	r2, r3
 484 0030 0AD3     		bcc	.L25
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 485              		.loc 1 795 0
 486 0032 5A4A     		ldr	r2, .L35+4
 487 0034 0F23     		movs	r3, #15
 488 0036 FB18     		adds	r3, r7, r3
 489 0038 1278     		ldrb	r2, [r2]
 490 003a 1A70     		strb	r2, [r3]
 796:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 491              		.loc 1 796 0
 492 003c 584A     		ldr	r2, .L35+8
 493 003e 0E23     		movs	r3, #14
 494 0040 FB18     		adds	r3, r7, r3
 495 0042 1278     		ldrb	r2, [r2]
 496 0044 1A70     		strb	r2, [r3]
 497 0046 3FE0     		b	.L26
 498              	.L25:
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 499              		.loc 1 798 0
 500 0048 564B     		ldr	r3, .L35+12
 501 004a 1B78     		ldrb	r3, [r3]
 502 004c DBB2     		uxtb	r3, r3
 503 004e 1A00     		movs	r2, r3
 504 0050 7B68     		ldr	r3, [r7, #4]
 505 0052 9A42     		cmp	r2, r3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 24


 506 0054 0AD3     		bcc	.L27
 799:Generated_Source\PSoC4/CyLib.c ****             {
 800:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 507              		.loc 1 800 0
 508 0056 544A     		ldr	r2, .L35+16
 509 0058 0F23     		movs	r3, #15
 510 005a FB18     		adds	r3, r7, r3
 511 005c 1278     		ldrb	r2, [r2]
 512 005e 1A70     		strb	r2, [r3]
 801:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 513              		.loc 1 801 0
 514 0060 524A     		ldr	r2, .L35+20
 515 0062 0E23     		movs	r3, #14
 516 0064 FB18     		adds	r3, r7, r3
 517 0066 1278     		ldrb	r2, [r2]
 518 0068 1A70     		strb	r2, [r3]
 519 006a 2DE0     		b	.L26
 520              	.L27:
 802:Generated_Source\PSoC4/CyLib.c ****             }
 803:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 521              		.loc 1 803 0
 522 006c 504B     		ldr	r3, .L35+24
 523 006e 1B78     		ldrb	r3, [r3]
 524 0070 DBB2     		uxtb	r3, r3
 525 0072 1A00     		movs	r2, r3
 526 0074 7B68     		ldr	r3, [r7, #4]
 527 0076 9A42     		cmp	r2, r3
 528 0078 0AD3     		bcc	.L28
 804:Generated_Source\PSoC4/CyLib.c ****             {
 805:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 529              		.loc 1 805 0
 530 007a 4E4A     		ldr	r2, .L35+28
 531 007c 0F23     		movs	r3, #15
 532 007e FB18     		adds	r3, r7, r3
 533 0080 1278     		ldrb	r2, [r2]
 534 0082 1A70     		strb	r2, [r3]
 806:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 535              		.loc 1 806 0
 536 0084 4C4A     		ldr	r2, .L35+32
 537 0086 0E23     		movs	r3, #14
 538 0088 FB18     		adds	r3, r7, r3
 539 008a 1278     		ldrb	r2, [r2]
 540 008c 1A70     		strb	r2, [r3]
 541 008e 1BE0     		b	.L26
 542              	.L28:
 807:Generated_Source\PSoC4/CyLib.c ****             }
 808:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 543              		.loc 1 808 0
 544 0090 4A4B     		ldr	r3, .L35+36
 545 0092 1B78     		ldrb	r3, [r3]
 546 0094 DBB2     		uxtb	r3, r3
 547 0096 1A00     		movs	r2, r3
 548 0098 7B68     		ldr	r3, [r7, #4]
 549 009a 9A42     		cmp	r2, r3
 550 009c 0AD3     		bcc	.L29
 809:Generated_Source\PSoC4/CyLib.c ****             {
 810:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 25


 551              		.loc 1 810 0
 552 009e 484A     		ldr	r2, .L35+40
 553 00a0 0F23     		movs	r3, #15
 554 00a2 FB18     		adds	r3, r7, r3
 555 00a4 1278     		ldrb	r2, [r2]
 556 00a6 1A70     		strb	r2, [r3]
 811:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 557              		.loc 1 811 0
 558 00a8 464A     		ldr	r2, .L35+44
 559 00aa 0E23     		movs	r3, #14
 560 00ac FB18     		adds	r3, r7, r3
 561 00ae 1278     		ldrb	r2, [r2]
 562 00b0 1A70     		strb	r2, [r3]
 563 00b2 09E0     		b	.L26
 564              	.L29:
 812:Generated_Source\PSoC4/CyLib.c ****             }
 813:Generated_Source\PSoC4/CyLib.c ****             else
 814:Generated_Source\PSoC4/CyLib.c ****             {
 815:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 565              		.loc 1 815 0
 566 00b4 444A     		ldr	r2, .L35+48
 567 00b6 0F23     		movs	r3, #15
 568 00b8 FB18     		adds	r3, r7, r3
 569 00ba 1278     		ldrb	r2, [r2]
 570 00bc 1A70     		strb	r2, [r3]
 816:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 571              		.loc 1 816 0
 572 00be 434A     		ldr	r2, .L35+52
 573 00c0 0E23     		movs	r3, #14
 574 00c2 FB18     		adds	r3, r7, r3
 575 00c4 1278     		ldrb	r2, [r2]
 576 00c6 1A70     		strb	r2, [r3]
 577              	.L26:
 817:Generated_Source\PSoC4/CyLib.c ****             }
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 820:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 578              		.loc 1 820 0
 579 00c8 7B68     		ldr	r3, [r7, #4]
 580 00ca DA1E     		subs	r2, r3, #3
 581 00cc 0B23     		movs	r3, #11
 582 00ce FB18     		adds	r3, r7, r3
 583 00d0 3F49     		ldr	r1, .L35+56
 584 00d2 8A5C     		ldrb	r2, [r1, r2]
 585 00d4 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC4/CyLib.c **** 
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 824:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 825:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 826:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 827:Generated_Source\PSoC4/CyLib.c ****             *
 828:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 829:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 830:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 831:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 832:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 26


 586              		.loc 1 832 0
 587 00d6 0B23     		movs	r3, #11
 588 00d8 FB18     		adds	r3, r7, r3
 589 00da 1B78     		ldrb	r3, [r3]
 590 00dc 2F2B     		cmp	r3, #47
 591 00de 0DD9     		bls	.L30
 592              		.loc 1 832 0 is_stmt 0 discriminator 1
 593 00e0 7B68     		ldr	r3, [r7, #4]
 594 00e2 2A2B     		cmp	r3, #42
 595 00e4 0AD9     		bls	.L30
 833:Generated_Source\PSoC4/CyLib.c ****             {
 834:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 835:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 596              		.loc 1 835 0 is_stmt 1
 597 00e6 3B4B     		ldr	r3, .L35+60
 598 00e8 1922     		movs	r2, #25
 599 00ea 1A60     		str	r2, [r3]
 836:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 600              		.loc 1 838 0
 601 00ec 0520     		movs	r0, #5
 602 00ee FFF7FEFF 		bl	CyDelayCycles
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 603              		.loc 1 840 0
 604 00f2 0D23     		movs	r3, #13
 605 00f4 FB18     		adds	r3, r7, r3
 606 00f6 1922     		movs	r2, #25
 607 00f8 1A70     		strb	r2, [r3]
 608 00fa 07E0     		b	.L31
 609              	.L30:
 841:Generated_Source\PSoC4/CyLib.c ****             }
 842:Generated_Source\PSoC4/CyLib.c ****             else
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 610              		.loc 1 844 0
 611 00fc 354B     		ldr	r3, .L35+60
 612 00fe 1B68     		ldr	r3, [r3]
 613 0100 DAB2     		uxtb	r2, r3
 614 0102 0D23     		movs	r3, #13
 615 0104 FB18     		adds	r3, r7, r3
 616 0106 3F21     		movs	r1, #63
 617 0108 0A40     		ands	r2, r1
 618 010a 1A70     		strb	r2, [r3]
 619              	.L31:
 845:Generated_Source\PSoC4/CyLib.c ****             }
 846:Generated_Source\PSoC4/CyLib.c **** 
 847:Generated_Source\PSoC4/CyLib.c **** 
 848:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 849:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 850:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 851:Generated_Source\PSoC4/CyLib.c ****             *
 852:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 853:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 854:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 855:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 27


 856:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 620              		.loc 1 856 0
 621 010c 0B23     		movs	r3, #11
 622 010e FA18     		adds	r2, r7, r3
 623 0110 0D23     		movs	r3, #13
 624 0112 FB18     		adds	r3, r7, r3
 625 0114 1278     		ldrb	r2, [r2]
 626 0116 1B78     		ldrb	r3, [r3]
 627 0118 9A42     		cmp	r2, r3
 628 011a 08D2     		bcs	.L32
 857:Generated_Source\PSoC4/CyLib.c ****             {
 858:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 859:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 629              		.loc 1 859 0
 630 011c 2D4B     		ldr	r3, .L35+60
 631 011e 7A68     		ldr	r2, [r7, #4]
 632 0120 033A     		subs	r2, r2, #3
 633 0122 2B49     		ldr	r1, .L35+56
 634 0124 8A5C     		ldrb	r2, [r1, r2]
 635 0126 1A60     		str	r2, [r3]
 860:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 636              		.loc 1 860 0
 637 0128 0520     		movs	r0, #5
 638 012a FFF7FEFF 		bl	CyDelayCycles
 639              	.L32:
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 864:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IM
 640              		.loc 1 864 0
 641 012e 2A4B     		ldr	r3, .L35+64
 642 0130 7A68     		ldr	r2, [r7, #4]
 643 0132 2649     		ldr	r1, .L35+52
 644 0134 8C46     		mov	ip, r1
 645 0136 6244     		add	r2, r2, ip
 646 0138 1278     		ldrb	r2, [r2]
 647 013a D2B2     		uxtb	r2, r2
 648 013c 1A60     		str	r2, [r3]
 865:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 649              		.loc 1 865 0
 650 013e 274B     		ldr	r3, .L35+68
 651 0140 0F22     		movs	r2, #15
 652 0142 BA18     		adds	r2, r7, r2
 653 0144 1278     		ldrb	r2, [r2]
 654 0146 1A60     		str	r2, [r3]
 866:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 655              		.loc 1 866 0
 656 0148 254B     		ldr	r3, .L35+72
 657 014a 0E22     		movs	r2, #14
 658 014c BA18     		adds	r2, r7, r2
 659 014e 1278     		ldrb	r2, [r2]
 660 0150 1A60     		str	r2, [r3]
 867:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 661              		.loc 1 867 0
 662 0152 0520     		movs	r0, #5
 663 0154 FFF7FEFF 		bl	CyDelayUs
 868:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 28


 869:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 664              		.loc 1 869 0
 665 0158 0B23     		movs	r3, #11
 666 015a FA18     		adds	r2, r7, r3
 667 015c 0D23     		movs	r3, #13
 668 015e FB18     		adds	r3, r7, r3
 669 0160 1278     		ldrb	r2, [r2]
 670 0162 1B78     		ldrb	r3, [r3]
 671 0164 9A42     		cmp	r2, r3
 672 0166 0CD9     		bls	.L34
 870:Generated_Source\PSoC4/CyLib.c ****             {
 871:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 872:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 673              		.loc 1 872 0
 674 0168 1A4B     		ldr	r3, .L35+60
 675 016a 7A68     		ldr	r2, [r7, #4]
 676 016c 033A     		subs	r2, r2, #3
 677 016e 1849     		ldr	r1, .L35+56
 678 0170 8A5C     		ldrb	r2, [r1, r2]
 679 0172 1A60     		str	r2, [r3]
 873:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 680              		.loc 1 873 0
 681 0174 0520     		movs	r0, #5
 682 0176 FFF7FEFF 		bl	CyDelayCycles
 869:Generated_Source\PSoC4/CyLib.c ****             {
 683              		.loc 1 869 0
 684 017a 02E0     		b	.L34
 685              	.L24:
 874:Generated_Source\PSoC4/CyLib.c ****             }
 875:Generated_Source\PSoC4/CyLib.c ****         }
 876:Generated_Source\PSoC4/CyLib.c ****         else
 877:Generated_Source\PSoC4/CyLib.c ****         {
 878:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 879:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 686              		.loc 1 879 0 discriminator 1
 687 017c 0020     		movs	r0, #0
 688 017e FFF7FEFF 		bl	CyHalt
 689              	.L34:
 880:Generated_Source\PSoC4/CyLib.c ****         }
 881:Generated_Source\PSoC4/CyLib.c **** 
 882:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 885:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 886:Generated_Source\PSoC4/CyLib.c ****             {
 887:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 888:Generated_Source\PSoC4/CyLib.c ****             }
 889:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 890:Generated_Source\PSoC4/CyLib.c **** 
 891:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 892:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 895:Generated_Source\PSoC4/CyLib.c ****             }
 896:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 897:Generated_Source\PSoC4/CyLib.c **** 
 898:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 29


 690              		.loc 1 898 0
 691 0182 0C23     		movs	r3, #12
 692 0184 FB18     		adds	r3, r7, r3
 693 0186 1B78     		ldrb	r3, [r3]
 694 0188 1800     		movs	r0, r3
 695 018a FFF7FEFF 		bl	CyExitCriticalSection
 899:Generated_Source\PSoC4/CyLib.c ****     }
 696              		.loc 1 899 0
 697 018e C046     		nop
 698 0190 BD46     		mov	sp, r7
 699 0192 05B0     		add	sp, sp, #20
 700              		@ sp needed
 701 0194 90BD     		pop	{r4, r7, pc}
 702              	.L36:
 703 0196 C046     		.align	2
 704              	.L35:
 705 0198 40F3FF0F 		.word	268432192
 706 019c 41F3FF0F 		.word	268432193
 707 01a0 42F3FF0F 		.word	268432194
 708 01a4 43F3FF0F 		.word	268432195
 709 01a8 44F3FF0F 		.word	268432196
 710 01ac 45F3FF0F 		.word	268432197
 711 01b0 46F3FF0F 		.word	268432198
 712 01b4 47F3FF0F 		.word	268432199
 713 01b8 48F3FF0F 		.word	268432200
 714 01bc 49F3FF0F 		.word	268432201
 715 01c0 4AF3FF0F 		.word	268432202
 716 01c4 4BF3FF0F 		.word	268432203
 717 01c8 4CF3FF0F 		.word	268432204
 718 01cc 4DF3FF0F 		.word	268432205
 719 01d0 00000000 		.word	cyImoFreqMhz2Reg
 720 01d4 2CFF0B40 		.word	1074528044
 721 01d8 28FF0B40 		.word	1074528040
 722 01dc 1CFF0B40 		.word	1074528028
 723 01e0 20FF0B40 		.word	1074528032
 724              		.cfi_endproc
 725              	.LFE8:
 726              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 727              		.section	.text.CySysClkEcoStart,"ax",%progbits
 728              		.align	2
 729              		.global	CySysClkEcoStart
 730              		.code	16
 731              		.thumb_func
 732              		.type	CySysClkEcoStart, %function
 733              	CySysClkEcoStart:
 734              	.LFB9:
 900:Generated_Source\PSoC4/CyLib.c **** 
 901:Generated_Source\PSoC4/CyLib.c **** #else
 902:Generated_Source\PSoC4/CyLib.c **** 
 903:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 904:Generated_Source\PSoC4/CyLib.c ****     {
 905:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 906:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 907:Generated_Source\PSoC4/CyLib.c **** 
 908:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 909:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 910:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 30


 911:Generated_Source\PSoC4/CyLib.c ****         
 912:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 913:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 914:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 915:Generated_Source\PSoC4/CyLib.c **** 
 916:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 917:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 918:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 919:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 920:Generated_Source\PSoC4/CyLib.c ****         #else
 921:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 922:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 923:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 924:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 925:Generated_Source\PSoC4/CyLib.c ****         {
 926:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 927:Generated_Source\PSoC4/CyLib.c **** 
 928:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 929:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 930:Generated_Source\PSoC4/CyLib.c ****                 {
 931:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 932:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 933:Generated_Source\PSoC4/CyLib.c ****                 }
 934:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 935:Generated_Source\PSoC4/CyLib.c **** 
 936:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 937:Generated_Source\PSoC4/CyLib.c **** 
 938:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 939:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 940:Generated_Source\PSoC4/CyLib.c ****                     {
 941:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 942:Generated_Source\PSoC4/CyLib.c **** 
 943:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 944:Generated_Source\PSoC4/CyLib.c ****                     {
 945:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 946:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 947:Generated_Source\PSoC4/CyLib.c ****                     }
 948:Generated_Source\PSoC4/CyLib.c **** 
 949:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 950:Generated_Source\PSoC4/CyLib.c ****                     }
 951:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 954:Generated_Source\PSoC4/CyLib.c **** 
 955:Generated_Source\PSoC4/CyLib.c **** 
 956:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 957:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 958:Generated_Source\PSoC4/CyLib.c **** 
 959:Generated_Source\PSoC4/CyLib.c **** 
 960:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 961:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 963:Generated_Source\PSoC4/CyLib.c ****                 {
 964:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 965:Generated_Source\PSoC4/CyLib.c ****                 }
 966:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 967:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 31


 968:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 969:Generated_Source\PSoC4/CyLib.c ****                 }
 970:Generated_Source\PSoC4/CyLib.c ****                 else
 971:Generated_Source\PSoC4/CyLib.c ****                 {
 972:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 973:Generated_Source\PSoC4/CyLib.c ****                 }
 974:Generated_Source\PSoC4/CyLib.c ****             #else
 975:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 976:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 977:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 978:Generated_Source\PSoC4/CyLib.c **** 
 979:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 980:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 983:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 984:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 987:Generated_Source\PSoC4/CyLib.c **** 
 988:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 989:Generated_Source\PSoC4/CyLib.c ****             {
 990:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 991:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 992:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 993:Generated_Source\PSoC4/CyLib.c **** 
 994:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 997:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 998:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 999:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1000:Generated_Source\PSoC4/CyLib.c ****             }
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1003:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1004:Generated_Source\PSoC4/CyLib.c ****                 {
1005:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1006:Generated_Source\PSoC4/CyLib.c ****                 }
1007:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1008:Generated_Source\PSoC4/CyLib.c ****         
1009:Generated_Source\PSoC4/CyLib.c ****         
1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1018:Generated_Source\PSoC4/CyLib.c ****         }
1019:Generated_Source\PSoC4/CyLib.c ****         else
1020:Generated_Source\PSoC4/CyLib.c ****         {
1021:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1022:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1023:Generated_Source\PSoC4/CyLib.c ****         }
1024:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 32


1025:Generated_Source\PSoC4/CyLib.c **** 
1026:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c **** 
1029:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1030:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1031:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1032:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1033:Generated_Source\PSoC4/CyLib.c ****     *
1034:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1035:Generated_Source\PSoC4/CyLib.c ****     *
1036:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1037:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1038:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1039:Generated_Source\PSoC4/CyLib.c ****     *
1040:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1041:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1042:Generated_Source\PSoC4/CyLib.c ****     *
1043:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1044:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1045:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1046:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1047:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1048:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1049:Generated_Source\PSoC4/CyLib.c ****     *
1050:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1051:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1052:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1053:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1054:Generated_Source\PSoC4/CyLib.c ****     *
1055:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1056:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1057:Generated_Source\PSoC4/CyLib.c ****     {
1058:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1059:Generated_Source\PSoC4/CyLib.c **** 
1060:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1061:Generated_Source\PSoC4/CyLib.c **** 
1062:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1063:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1064:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1067:Generated_Source\PSoC4/CyLib.c ****     }
1068:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1069:Generated_Source\PSoC4/CyLib.c **** 
1070:Generated_Source\PSoC4/CyLib.c **** 
1071:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1072:Generated_Source\PSoC4/CyLib.c **** 
1073:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1074:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1075:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1076:Generated_Source\PSoC4/CyLib.c ****     *
1077:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1078:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1079:Generated_Source\PSoC4/CyLib.c ****     *
1080:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1081:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 33


1082:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1083:Generated_Source\PSoC4/CyLib.c ****     * called.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1086:Generated_Source\PSoC4/CyLib.c ****     *
1087:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1090:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1093:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1094:Generated_Source\PSoC4/CyLib.c ****     *
1095:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1096:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1097:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1100:Generated_Source\PSoC4/CyLib.c ****     *
1101:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1102:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1103:Generated_Source\PSoC4/CyLib.c ****     {
 735              		.loc 1 1103 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 16
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 84B0     		sub	sp, sp, #16
 744              		.cfi_def_cfa_offset 24
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
1104:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 748              		.loc 1 1104 0
 749 0008 0023     		movs	r3, #0
 750 000a FB60     		str	r3, [r7, #12]
1105:Generated_Source\PSoC4/CyLib.c **** 
1106:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1107:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1108:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 751              		.loc 1 1108 0
 752 000c 154B     		ldr	r3, .L43
 753 000e 154A     		ldr	r2, .L43
 754 0010 1268     		ldr	r2, [r2]
 755 0012 0121     		movs	r1, #1
 756 0014 0A43     		orrs	r2, r1
 757 0016 1A60     		str	r2, [r3]
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1111:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 758              		.loc 1 1111 0
 759 0018 134B     		ldr	r3, .L43+4
 760 001a 144A     		ldr	r2, .L43+8
 761 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 34


1112:Generated_Source\PSoC4/CyLib.c **** 
1113:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1114:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 762              		.loc 1 1114 0
 763 001e 144B     		ldr	r3, .L43+12
 764 0020 134A     		ldr	r2, .L43+12
 765 0022 1268     		ldr	r2, [r2]
 766 0024 8021     		movs	r1, #128
 767 0026 0902     		lsls	r1, r1, #8
 768 0028 0A43     		orrs	r2, r1
 769 002a 1A60     		str	r2, [r3]
1115:Generated_Source\PSoC4/CyLib.c ****         
1116:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1117:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1118:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1119:Generated_Source\PSoC4/CyLib.c ****             
1120:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1121:Generated_Source\PSoC4/CyLib.c ****             {
1122:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1123:Generated_Source\PSoC4/CyLib.c ****             }
1124:Generated_Source\PSoC4/CyLib.c ****             else
1125:Generated_Source\PSoC4/CyLib.c ****             {
1126:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1127:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1128:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1129:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1130:Generated_Source\PSoC4/CyLib.c ****             
1131:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1132:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1133:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1134:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1135:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1136:Generated_Source\PSoC4/CyLib.c ****                 
1137:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1138:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1139:Generated_Source\PSoC4/CyLib.c ****                 {
1140:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1141:Generated_Source\PSoC4/CyLib.c ****                 }
1142:Generated_Source\PSoC4/CyLib.c ****                 
1143:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1144:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1145:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1146:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1147:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1148:Generated_Source\PSoC4/CyLib.c **** 
1149:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1150:Generated_Source\PSoC4/CyLib.c ****                 {
1151:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1152:Generated_Source\PSoC4/CyLib.c ****                 }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1155:Generated_Source\PSoC4/CyLib.c ****                 {
1156:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1157:Generated_Source\PSoC4/CyLib.c ****                 }
1158:Generated_Source\PSoC4/CyLib.c ****                 
1159:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 35


1161:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1162:Generated_Source\PSoC4/CyLib.c ****                 
1163:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1164:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1165:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1166:Generated_Source\PSoC4/CyLib.c ****                 #else
1167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1168:Generated_Source\PSoC4/CyLib.c ****                 #endif
1169:Generated_Source\PSoC4/CyLib.c ****                 
1170:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1171:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1172:Generated_Source\PSoC4/CyLib.c ****                 {
1173:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1174:Generated_Source\PSoC4/CyLib.c ****                 }
1175:Generated_Source\PSoC4/CyLib.c ****                 
1176:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1178:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1179:Generated_Source\PSoC4/CyLib.c ****                                             
1180:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1181:Generated_Source\PSoC4/CyLib.c ****                 {
1182:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1183:Generated_Source\PSoC4/CyLib.c ****                 }
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1186:Generated_Source\PSoC4/CyLib.c ****                 
1187:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1188:Generated_Source\PSoC4/CyLib.c ****                 
1189:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1190:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1193:Generated_Source\PSoC4/CyLib.c ****                 {
1194:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1195:Generated_Source\PSoC4/CyLib.c ****                 }
1196:Generated_Source\PSoC4/CyLib.c ****                 
1197:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1198:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1199:Generated_Source\PSoC4/CyLib.c ****                 
1200:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1201:Generated_Source\PSoC4/CyLib.c ****                 {
1202:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1203:Generated_Source\PSoC4/CyLib.c ****                 }
1204:Generated_Source\PSoC4/CyLib.c ****                 
1205:Generated_Source\PSoC4/CyLib.c ****             }
1206:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1209:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1210:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 770              		.loc 1 1212 0
 771 002c 7B68     		ldr	r3, [r7, #4]
 772 002e 002B     		cmp	r3, #0
 773 0030 12D0     		beq	.L38
1213:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 36


1214:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 774              		.loc 1 1214 0
 775 0032 1023     		movs	r3, #16
 776 0034 FB60     		str	r3, [r7, #12]
1215:Generated_Source\PSoC4/CyLib.c **** 
1216:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 777              		.loc 1 1216 0
 778 0036 0CE0     		b	.L39
 779              	.L41:
1217:Generated_Source\PSoC4/CyLib.c ****             {
1218:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 780              		.loc 1 1218 0
 781 0038 0120     		movs	r0, #1
 782 003a FFF7FEFF 		bl	CyDelayUs
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 783              		.loc 1 1220 0
 784 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 785 0042 031E     		subs	r3, r0, #0
 786 0044 02D0     		beq	.L40
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 787              		.loc 1 1222 0
 788 0046 0023     		movs	r3, #0
 789 0048 FB60     		str	r3, [r7, #12]
1223:Generated_Source\PSoC4/CyLib.c ****                     break;
 790              		.loc 1 1223 0
 791 004a 05E0     		b	.L38
 792              	.L40:
1216:Generated_Source\PSoC4/CyLib.c ****             {
 793              		.loc 1 1216 0
 794 004c 7B68     		ldr	r3, [r7, #4]
 795 004e 013B     		subs	r3, r3, #1
 796 0050 7B60     		str	r3, [r7, #4]
 797              	.L39:
1216:Generated_Source\PSoC4/CyLib.c ****             {
 798              		.loc 1 1216 0 is_stmt 0 discriminator 1
 799 0052 7B68     		ldr	r3, [r7, #4]
 800 0054 002B     		cmp	r3, #0
 801 0056 EFD1     		bne	.L41
 802              	.L38:
1224:Generated_Source\PSoC4/CyLib.c ****                 }
1225:Generated_Source\PSoC4/CyLib.c ****             }
1226:Generated_Source\PSoC4/CyLib.c **** 
1227:Generated_Source\PSoC4/CyLib.c ****         }
1228:Generated_Source\PSoC4/CyLib.c **** 
1229:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 803              		.loc 1 1229 0 is_stmt 1
 804 0058 FB68     		ldr	r3, [r7, #12]
1230:Generated_Source\PSoC4/CyLib.c ****     }
 805              		.loc 1 1230 0
 806 005a 1800     		movs	r0, r3
 807 005c BD46     		mov	sp, r7
 808 005e 04B0     		add	sp, sp, #16
 809              		@ sp needed
 810 0060 80BD     		pop	{r7, pc}
 811              	.L44:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 37


 812 0062 C046     		.align	2
 813              	.L43:
 814 0064 60F02E40 		.word	1076818016
 815 0068 78002E40 		.word	1076756600
 816 006c 02200000 		.word	8194
 817 0070 10002E40 		.word	1076756496
 818              		.cfi_endproc
 819              	.LFE9:
 820              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 821              		.section	.text.CySysClkEcoStop,"ax",%progbits
 822              		.align	2
 823              		.global	CySysClkEcoStop
 824              		.code	16
 825              		.thumb_func
 826              		.type	CySysClkEcoStop, %function
 827              	CySysClkEcoStop:
 828              	.LFB10:
1231:Generated_Source\PSoC4/CyLib.c **** 
1232:Generated_Source\PSoC4/CyLib.c **** 
1233:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1234:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1235:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1236:Generated_Source\PSoC4/CyLib.c ****     *
1237:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1238:Generated_Source\PSoC4/CyLib.c ****     *
1239:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1240:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1241:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1242:Generated_Source\PSoC4/CyLib.c ****     *
1243:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1244:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1245:Generated_Source\PSoC4/CyLib.c ****     {
 829              		.loc 1 1245 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 00AF     		add	r7, sp, #0
 838              		.cfi_def_cfa_register 7
1246:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1247:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 839              		.loc 1 1248 0
 840 0004 074B     		ldr	r3, .L46
 841 0006 074A     		ldr	r2, .L46
 842 0008 1268     		ldr	r2, [r2]
 843 000a 0121     		movs	r1, #1
 844 000c 8A43     		bics	r2, r1
 845 000e 1A60     		str	r2, [r3]
1249:Generated_Source\PSoC4/CyLib.c **** 
1250:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1251:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 846              		.loc 1 1251 0
 847 0010 054B     		ldr	r3, .L46+4
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 38


 848 0012 054A     		ldr	r2, .L46+4
 849 0014 1268     		ldr	r2, [r2]
 850 0016 0549     		ldr	r1, .L46+8
 851 0018 0A40     		ands	r2, r1
 852 001a 1A60     		str	r2, [r3]
1252:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1253:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1254:Generated_Source\PSoC4/CyLib.c ****         #else
1255:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1256:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1257:Generated_Source\PSoC4/CyLib.c ****     }
 853              		.loc 1 1257 0
 854 001c C046     		nop
 855 001e BD46     		mov	sp, r7
 856              		@ sp needed
 857 0020 80BD     		pop	{r7, pc}
 858              	.L47:
 859 0022 C046     		.align	2
 860              	.L46:
 861 0024 60F02E40 		.word	1076818016
 862 0028 10002E40 		.word	1076756496
 863 002c FF7FFFFF 		.word	-32769
 864              		.cfi_endproc
 865              	.LFE10:
 866              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 867              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 868              		.align	2
 869              		.global	CySysClkEcoReadStatus
 870              		.code	16
 871              		.thumb_func
 872              		.type	CySysClkEcoReadStatus, %function
 873              	CySysClkEcoReadStatus:
 874              	.LFB11:
1258:Generated_Source\PSoC4/CyLib.c **** 
1259:Generated_Source\PSoC4/CyLib.c **** 
1260:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1261:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1262:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1263:Generated_Source\PSoC4/CyLib.c ****     *
1264:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1265:Generated_Source\PSoC4/CyLib.c ****     *
1266:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1267:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1268:Generated_Source\PSoC4/CyLib.c ****     *
1269:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1270:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1271:Generated_Source\PSoC4/CyLib.c ****     *
1272:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1273:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1274:Generated_Source\PSoC4/CyLib.c ****     *
1275:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1276:Generated_Source\PSoC4/CyLib.c ****     *
1277:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1278:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1279:Generated_Source\PSoC4/CyLib.c ****     {
 875              		.loc 1 1279 0
 876              		.cfi_startproc
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 39


 877              		@ args = 0, pretend = 0, frame = 8
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879 0000 80B5     		push	{r7, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 82B0     		sub	sp, sp, #8
 884              		.cfi_def_cfa_offset 16
 885 0004 00AF     		add	r7, sp, #0
 886              		.cfi_def_cfa_register 7
1280:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1283:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 887              		.loc 1 1283 0
 888 0006 054B     		ldr	r3, .L50
 889 0008 1B68     		ldr	r3, [r3]
 890 000a 0122     		movs	r2, #1
 891 000c 1340     		ands	r3, r2
 892 000e 7B60     		str	r3, [r7, #4]
1284:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1285:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1286:Generated_Source\PSoC4/CyLib.c **** 
1287:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1288:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1289:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1290:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1291:Generated_Source\PSoC4/CyLib.c ****         #else
1292:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1293:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1294:Generated_Source\PSoC4/CyLib.c **** 
1295:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 893              		.loc 1 1295 0
 894 0010 7B68     		ldr	r3, [r7, #4]
1296:Generated_Source\PSoC4/CyLib.c ****     }
 895              		.loc 1 1296 0
 896 0012 1800     		movs	r0, r3
 897 0014 BD46     		mov	sp, r7
 898 0016 02B0     		add	sp, sp, #8
 899              		@ sp needed
 900 0018 80BD     		pop	{r7, pc}
 901              	.L51:
 902 001a C046     		.align	2
 903              	.L50:
 904 001c 0C002E40 		.word	1076756492
 905              		.cfi_endproc
 906              	.LFE11:
 907              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 908              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 909              		.align	2
 910              		.global	CySysClkWriteEcoDiv
 911              		.code	16
 912              		.thumb_func
 913              		.type	CySysClkWriteEcoDiv, %function
 914              	CySysClkWriteEcoDiv:
 915              	.LFB12:
1297:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 40


1298:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1299:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1300:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1301:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1302:Generated_Source\PSoC4/CyLib.c ****         *
1303:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1304:Generated_Source\PSoC4/CyLib.c ****         *
1305:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1306:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1307:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1308:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1309:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1310:Generated_Source\PSoC4/CyLib.c ****         *
1311:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1312:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1313:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1314:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1315:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1316:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1317:Generated_Source\PSoC4/CyLib.c ****         *
1318:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1322:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1323:Generated_Source\PSoC4/CyLib.c ****         *
1324:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1325:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1326:Generated_Source\PSoC4/CyLib.c ****         {
 916              		.loc 1 1326 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 16
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 90B5     		push	{r4, r7, lr}
 921              		.cfi_def_cfa_offset 12
 922              		.cfi_offset 4, -12
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 85B0     		sub	sp, sp, #20
 926              		.cfi_def_cfa_offset 32
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 929 0006 7860     		str	r0, [r7, #4]
1327:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 930              		.loc 1 1329 0
 931 0008 114B     		ldr	r3, .L56
 932 000a 1B68     		ldr	r3, [r3]
 933 000c 0722     		movs	r2, #7
 934 000e 1340     		ands	r3, r2
 935 0010 022B     		cmp	r3, #2
 936 0012 16D0     		beq	.L53
1330:Generated_Source\PSoC4/CyLib.c ****             {
1331:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 937              		.loc 1 1331 0
 938 0014 0F23     		movs	r3, #15
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 41


 939 0016 FC18     		adds	r4, r7, r3
 940 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 941 001c 0300     		movs	r3, r0
 942 001e 2370     		strb	r3, [r4]
1332:Generated_Source\PSoC4/CyLib.c **** 
1333:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 943              		.loc 1 1333 0
 944 0020 0C4B     		ldr	r3, .L56+4
 945 0022 7A68     		ldr	r2, [r7, #4]
 946 0024 0321     		movs	r1, #3
 947 0026 1140     		ands	r1, r2
1334:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 948              		.loc 1 1334 0
 949 0028 0A4A     		ldr	r2, .L56+4
 950 002a 1268     		ldr	r2, [r2]
 951 002c 0320     		movs	r0, #3
 952 002e 8243     		bics	r2, r0
1333:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 953              		.loc 1 1333 0
 954 0030 0A43     		orrs	r2, r1
 955 0032 1A60     		str	r2, [r3]
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 956              		.loc 1 1336 0
 957 0034 0F23     		movs	r3, #15
 958 0036 FB18     		adds	r3, r7, r3
 959 0038 1B78     		ldrb	r3, [r3]
 960 003a 1800     		movs	r0, r3
 961 003c FFF7FEFF 		bl	CyExitCriticalSection
1337:Generated_Source\PSoC4/CyLib.c ****             }
1338:Generated_Source\PSoC4/CyLib.c ****             else
1339:Generated_Source\PSoC4/CyLib.c ****             {
1340:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1341:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1342:Generated_Source\PSoC4/CyLib.c ****             }
1343:Generated_Source\PSoC4/CyLib.c ****         }
 962              		.loc 1 1343 0
 963 0040 02E0     		b	.L55
 964              	.L53:
1341:Generated_Source\PSoC4/CyLib.c ****             }
 965              		.loc 1 1341 0 discriminator 1
 966 0042 0020     		movs	r0, #0
 967 0044 FFF7FEFF 		bl	CyHalt
 968              	.L55:
 969              		.loc 1 1343 0
 970 0048 C046     		nop
 971 004a BD46     		mov	sp, r7
 972 004c 05B0     		add	sp, sp, #20
 973              		@ sp needed
 974 004e 90BD     		pop	{r4, r7, pc}
 975              	.L57:
 976              		.align	2
 977              	.L56:
 978 0050 00010B40 		.word	1074462976
 979 0054 64F02E40 		.word	1076818020
 980              		.cfi_endproc
 981              	.LFE12:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 42


 982              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 983              		.section	.text.CySysLvdEnable,"ax",%progbits
 984              		.align	2
 985              		.global	CySysLvdEnable
 986              		.code	16
 987              		.thumb_func
 988              		.type	CySysLvdEnable, %function
 989              	CySysLvdEnable:
 990              	.LFB13:
1344:Generated_Source\PSoC4/CyLib.c **** 
1345:Generated_Source\PSoC4/CyLib.c ****     #else
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1348:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1349:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1350:Generated_Source\PSoC4/CyLib.c ****         *
1351:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1352:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1355:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1356:Generated_Source\PSoC4/CyLib.c ****         *
1357:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1358:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1361:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1362:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1363:Generated_Source\PSoC4/CyLib.c ****         *
1364:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1365:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1368:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1369:Generated_Source\PSoC4/CyLib.c ****         *
1370:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1371:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1374:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1375:Generated_Source\PSoC4/CyLib.c ****         *
1376:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1377:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1378:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1379:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1380:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1381:Generated_Source\PSoC4/CyLib.c ****         *
1382:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1383:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1384:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1385:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1386:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1387:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1388:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1389:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1390:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1391:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 43


1392:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1393:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1394:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1395:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1396:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1397:Generated_Source\PSoC4/CyLib.c ****         *
1398:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1399:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1400:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1401:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1402:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1403:Generated_Source\PSoC4/CyLib.c ****         *
1404:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1405:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1406:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1407:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1408:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1409:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1410:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1411:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1414:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1415:Generated_Source\PSoC4/CyLib.c ****         {
1416:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1417:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1418:Generated_Source\PSoC4/CyLib.c **** 
1419:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1420:Generated_Source\PSoC4/CyLib.c **** 
1421:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1422:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1423:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1425:Generated_Source\PSoC4/CyLib.c **** 
1426:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1427:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1428:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1429:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1430:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1431:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1432:Generated_Source\PSoC4/CyLib.c **** 
1433:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1434:Generated_Source\PSoC4/CyLib.c **** 
1435:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1436:Generated_Source\PSoC4/CyLib.c ****         }
1437:Generated_Source\PSoC4/CyLib.c **** 
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1440:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1441:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1442:Generated_Source\PSoC4/CyLib.c ****         *
1443:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1444:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1445:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1448:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 44


1449:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1450:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1451:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1452:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1453:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1454:Generated_Source\PSoC4/CyLib.c ****         *
1455:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1456:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1457:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1458:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1459:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1460:Generated_Source\PSoC4/CyLib.c ****         *
1461:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1462:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1463:Generated_Source\PSoC4/CyLib.c ****         *
1464:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1465:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1466:Generated_Source\PSoC4/CyLib.c ****         {
1467:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1468:Generated_Source\PSoC4/CyLib.c **** 
1469:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1470:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1471:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1472:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1473:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1476:Generated_Source\PSoC4/CyLib.c **** 
1477:Generated_Source\PSoC4/CyLib.c **** 
1478:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1479:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1480:Generated_Source\PSoC4/CyLib.c ****             {
1481:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1482:Generated_Source\PSoC4/CyLib.c ****             }
1483:Generated_Source\PSoC4/CyLib.c ****             else
1484:Generated_Source\PSoC4/CyLib.c ****             {
1485:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1486:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1489:Generated_Source\PSoC4/CyLib.c ****                 {
1490:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1491:Generated_Source\PSoC4/CyLib.c ****                 }
1492:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1493:Generated_Source\PSoC4/CyLib.c ****                 {
1494:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1495:Generated_Source\PSoC4/CyLib.c ****                 }
1496:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1497:Generated_Source\PSoC4/CyLib.c ****                 {
1498:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1499:Generated_Source\PSoC4/CyLib.c ****                 }
1500:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1501:Generated_Source\PSoC4/CyLib.c ****                 {
1502:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1503:Generated_Source\PSoC4/CyLib.c ****                 }
1504:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1505:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 45


1506:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1507:Generated_Source\PSoC4/CyLib.c ****                 }
1508:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1509:Generated_Source\PSoC4/CyLib.c ****                 {
1510:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1511:Generated_Source\PSoC4/CyLib.c ****                 }
1512:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1513:Generated_Source\PSoC4/CyLib.c ****                 {
1514:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1515:Generated_Source\PSoC4/CyLib.c ****                 }
1516:Generated_Source\PSoC4/CyLib.c ****                 else
1517:Generated_Source\PSoC4/CyLib.c ****                 {
1518:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1519:Generated_Source\PSoC4/CyLib.c ****                 }
1520:Generated_Source\PSoC4/CyLib.c **** 
1521:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1522:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1525:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1526:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1527:Generated_Source\PSoC4/CyLib.c ****                 {
1528:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1529:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1530:Generated_Source\PSoC4/CyLib.c ****                 }
1531:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1532:Generated_Source\PSoC4/CyLib.c ****                 {
1533:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1534:Generated_Source\PSoC4/CyLib.c ****                 }
1535:Generated_Source\PSoC4/CyLib.c ****                 else
1536:Generated_Source\PSoC4/CyLib.c ****                 {
1537:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1538:Generated_Source\PSoC4/CyLib.c ****                 }
1539:Generated_Source\PSoC4/CyLib.c **** 
1540:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1541:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c **** 
1558:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1559:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1560:Generated_Source\PSoC4/CyLib.c **** 
1561:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1562:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 46


1563:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1564:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1565:Generated_Source\PSoC4/CyLib.c ****                 {
1566:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1567:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c ****                 else
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1572:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1573:Generated_Source\PSoC4/CyLib.c ****                     */
1574:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1575:Generated_Source\PSoC4/CyLib.c ****                 }
1576:Generated_Source\PSoC4/CyLib.c ****             }
1577:Generated_Source\PSoC4/CyLib.c **** 
1578:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1579:Generated_Source\PSoC4/CyLib.c ****         }
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1582:Generated_Source\PSoC4/CyLib.c **** 
1583:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1584:Generated_Source\PSoC4/CyLib.c **** 
1585:Generated_Source\PSoC4/CyLib.c **** 
1586:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1587:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1588:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1589:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1590:Generated_Source\PSoC4/CyLib.c ****     *
1591:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1592:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1593:Generated_Source\PSoC4/CyLib.c ****     *
1594:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1595:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1600:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1601:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1602:Generated_Source\PSoC4/CyLib.c ****     *
1603:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1604:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1605:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1606:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1607:Generated_Source\PSoC4/CyLib.c ****     *
1608:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1609:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1610:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1611:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1612:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1613:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1614:Generated_Source\PSoC4/CyLib.c ****     *
1615:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1616:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1617:Generated_Source\PSoC4/CyLib.c ****     {
1618:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1619:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 47


1620:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1621:Generated_Source\PSoC4/CyLib.c **** 
1622:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1623:Generated_Source\PSoC4/CyLib.c ****         {
1624:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1630:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1635:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1636:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1637:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1638:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1639:Generated_Source\PSoC4/CyLib.c **** 
1640:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1641:Generated_Source\PSoC4/CyLib.c ****             {
1642:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1645:Generated_Source\PSoC4/CyLib.c ****                 {
1646:Generated_Source\PSoC4/CyLib.c **** 
1647:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1648:Generated_Source\PSoC4/CyLib.c ****                     {
1649:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1650:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1651:Generated_Source\PSoC4/CyLib.c ****                         break;
1652:Generated_Source\PSoC4/CyLib.c ****                     }
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1655:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****             }
1658:Generated_Source\PSoC4/CyLib.c ****         }
1659:Generated_Source\PSoC4/CyLib.c ****         else
1660:Generated_Source\PSoC4/CyLib.c ****         {
1661:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1662:Generated_Source\PSoC4/CyLib.c ****         }
1663:Generated_Source\PSoC4/CyLib.c **** 
1664:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1665:Generated_Source\PSoC4/CyLib.c ****     }
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c **** 
1668:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1669:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1670:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1673:Generated_Source\PSoC4/CyLib.c ****     *
1674:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * PLL:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 48


1677:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1678:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1679:Generated_Source\PSoC4/CyLib.c ****     *
1680:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1681:Generated_Source\PSoC4/CyLib.c ****     *
1682:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1683:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1684:Generated_Source\PSoC4/CyLib.c ****     {
1685:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1686:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1687:Generated_Source\PSoC4/CyLib.c **** 
1688:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1691:Generated_Source\PSoC4/CyLib.c **** 
1692:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1693:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1694:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1695:Generated_Source\PSoC4/CyLib.c ****         {
1696:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1697:Generated_Source\PSoC4/CyLib.c ****         }
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1702:Generated_Source\PSoC4/CyLib.c ****     }
1703:Generated_Source\PSoC4/CyLib.c **** 
1704:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1706:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CyLib.c ****     *
1708:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1709:Generated_Source\PSoC4/CyLib.c ****     *
1710:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1711:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1712:Generated_Source\PSoC4/CyLib.c ****     *
1713:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1714:Generated_Source\PSoC4/CyLib.c ****     *
1715:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1716:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1717:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1723:Generated_Source\PSoC4/CyLib.c **** 
1724:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1725:Generated_Source\PSoC4/CyLib.c ****         {
1726:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1727:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1728:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1729:Generated_Source\PSoC4/CyLib.c ****         }
1730:Generated_Source\PSoC4/CyLib.c ****     }
1731:Generated_Source\PSoC4/CyLib.c **** 
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 49


1734:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1735:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1736:Generated_Source\PSoC4/CyLib.c ****     *
1737:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1738:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1739:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1740:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1743:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1744:Generated_Source\PSoC4/CyLib.c ****     *
1745:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1748:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1749:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1750:Generated_Source\PSoC4/CyLib.c ****     *
1751:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1752:Generated_Source\PSoC4/CyLib.c ****     * divider.
1753:Generated_Source\PSoC4/CyLib.c ****     *
1754:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1755:Generated_Source\PSoC4/CyLib.c ****     *
1756:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1757:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1758:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1761:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1762:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1765:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1766:Generated_Source\PSoC4/CyLib.c ****     {
1767:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1768:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1769:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1770:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1773:Generated_Source\PSoC4/CyLib.c **** 
1774:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1777:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1778:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1779:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1780:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1781:Generated_Source\PSoC4/CyLib.c ****         {
1782:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1783:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1784:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1785:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1788:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1789:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1790:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 50


1791:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1792:Generated_Source\PSoC4/CyLib.c **** 
1793:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1794:Generated_Source\PSoC4/CyLib.c ****         }
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1799:Generated_Source\PSoC4/CyLib.c ****     }
1800:Generated_Source\PSoC4/CyLib.c **** 
1801:Generated_Source\PSoC4/CyLib.c **** 
1802:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1803:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1804:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1807:Generated_Source\PSoC4/CyLib.c ****     *
1808:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1809:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1810:Generated_Source\PSoC4/CyLib.c ****     *
1811:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1812:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1813:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1814:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1823:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1824:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1825:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1826:Generated_Source\PSoC4/CyLib.c ****     *
1827:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1828:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1829:Generated_Source\PSoC4/CyLib.c ****     *
1830:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1831:Generated_Source\PSoC4/CyLib.c ****     *
1832:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1833:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1834:Generated_Source\PSoC4/CyLib.c ****     {
1835:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1836:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1837:Generated_Source\PSoC4/CyLib.c **** 
1838:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1841:Generated_Source\PSoC4/CyLib.c ****         {
1842:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1843:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1844:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1845:Generated_Source\PSoC4/CyLib.c ****         }
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 51


1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1859:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1860:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1861:Generated_Source\PSoC4/CyLib.c ****     *
1862:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1863:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1866:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1867:Generated_Source\PSoC4/CyLib.c ****     {
1868:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1869:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1872:Generated_Source\PSoC4/CyLib.c **** 
1873:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1874:Generated_Source\PSoC4/CyLib.c **** 
1875:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1876:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1881:Generated_Source\PSoC4/CyLib.c ****     }
1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c **** 
1884:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1885:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1886:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1889:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1894:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1898:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1899:Generated_Source\PSoC4/CyLib.c ****     *
1900:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1901:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1902:Generated_Source\PSoC4/CyLib.c ****     {
1903:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1904:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 52


1905:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1906:Generated_Source\PSoC4/CyLib.c **** 
1907:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1908:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1909:Generated_Source\PSoC4/CyLib.c **** 
1910:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1911:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1912:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1913:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1914:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1915:Generated_Source\PSoC4/CyLib.c ****             )
1916:Generated_Source\PSoC4/CyLib.c ****         {
1917:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1918:Generated_Source\PSoC4/CyLib.c ****         }
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1921:Generated_Source\PSoC4/CyLib.c ****     }
1922:Generated_Source\PSoC4/CyLib.c **** 
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1926:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLib.c ****     *
1928:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1929:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1930:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1931:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1932:Generated_Source\PSoC4/CyLib.c ****     *
1933:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1934:Generated_Source\PSoC4/CyLib.c ****     *
1935:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1936:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1937:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1938:Generated_Source\PSoC4/CyLib.c ****     *
1939:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1940:Generated_Source\PSoC4/CyLib.c ****     *
1941:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1942:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1943:Generated_Source\PSoC4/CyLib.c ****     {
1944:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1945:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1948:Generated_Source\PSoC4/CyLib.c **** 
1949:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1950:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1951:Generated_Source\PSoC4/CyLib.c **** 
1952:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1955:Generated_Source\PSoC4/CyLib.c ****     }
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c **** 
1958:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1960:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 53


1962:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1963:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1964:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1965:Generated_Source\PSoC4/CyLib.c ****     *
1966:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1967:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1968:Generated_Source\PSoC4/CyLib.c ****     *
1969:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1970:Generated_Source\PSoC4/CyLib.c ****     *
1971:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1972:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1973:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1974:Generated_Source\PSoC4/CyLib.c ****     *
1975:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1978:Generated_Source\PSoC4/CyLib.c ****     *
1979:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1980:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1981:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1982:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1983:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1984:Generated_Source\PSoC4/CyLib.c ****     *
1985:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1986:Generated_Source\PSoC4/CyLib.c ****     *
1987:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1988:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1991:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1995:Generated_Source\PSoC4/CyLib.c ****     {
1996:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1997:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1998:Generated_Source\PSoC4/CyLib.c **** 
1999:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2000:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2001:Generated_Source\PSoC4/CyLib.c **** 
2002:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2003:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2006:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2007:Generated_Source\PSoC4/CyLib.c **** 
2008:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2009:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2010:Generated_Source\PSoC4/CyLib.c **** 
2011:Generated_Source\PSoC4/CyLib.c **** 
2012:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2013:Generated_Source\PSoC4/CyLib.c **** 
2014:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2015:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2016:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2017:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2018:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 54


2019:Generated_Source\PSoC4/CyLib.c ****         {
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2022:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2023:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2024:Generated_Source\PSoC4/CyLib.c **** 
2025:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2026:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2027:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2028:Generated_Source\PSoC4/CyLib.c **** 
2029:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2030:Generated_Source\PSoC4/CyLib.c ****             {
2031:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2032:Generated_Source\PSoC4/CyLib.c ****                 {
2033:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2036:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2039:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2042:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2045:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2046:Generated_Source\PSoC4/CyLib.c ****                     {
2047:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2048:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2049:Generated_Source\PSoC4/CyLib.c ****                         break;
2050:Generated_Source\PSoC4/CyLib.c ****                     }
2051:Generated_Source\PSoC4/CyLib.c ****                 }
2052:Generated_Source\PSoC4/CyLib.c **** 
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2055:Generated_Source\PSoC4/CyLib.c ****                 {
2056:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2057:Generated_Source\PSoC4/CyLib.c ****                     {
2058:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2059:Generated_Source\PSoC4/CyLib.c ****                     }
2060:Generated_Source\PSoC4/CyLib.c ****                 }
2061:Generated_Source\PSoC4/CyLib.c ****             }
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         }
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2066:Generated_Source\PSoC4/CyLib.c ****     }
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2069:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2070:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2071:Generated_Source\PSoC4/CyLib.c ****     *
2072:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2073:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 55


2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2078:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2079:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2080:Generated_Source\PSoC4/CyLib.c ****     *
2081:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2082:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2083:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2084:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2085:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2086:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2087:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2088:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2091:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2092:Generated_Source\PSoC4/CyLib.c ****     {
2093:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2094:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2095:Generated_Source\PSoC4/CyLib.c **** 
2096:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2097:Generated_Source\PSoC4/CyLib.c **** 
2098:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2099:Generated_Source\PSoC4/CyLib.c ****         {
2100:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2101:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2102:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2103:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2104:Generated_Source\PSoC4/CyLib.c ****             #else
2105:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL0_MASK;
2106:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL0_SHIFT) & CY_SYS_CLK_SELECT_PLL0_MASK);
2107:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2108:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2109:Generated_Source\PSoC4/CyLib.c ****         }
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2112:Generated_Source\PSoC4/CyLib.c ****     }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****     
2115:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2116:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2117:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2118:Generated_Source\PSoC4/CyLib.c ****     *
2119:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2122:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 56


2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2135:Generated_Source\PSoC4/CyLib.c ****     *
2136:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2137:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2138:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2139:Generated_Source\PSoC4/CyLib.c ****     *
2140:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2141:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2142:Generated_Source\PSoC4/CyLib.c ****     {
2143:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2144:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2145:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2146:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2147:Generated_Source\PSoC4/CyLib.c **** 
2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2154:Generated_Source\PSoC4/CyLib.c ****         {
2155:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2156:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2157:Generated_Source\PSoC4/CyLib.c **** 
2158:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2159:Generated_Source\PSoC4/CyLib.c **** 
2160:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2161:Generated_Source\PSoC4/CyLib.c ****         }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2168:Generated_Source\PSoC4/CyLib.c **** 
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2177:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2178:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2179:Generated_Source\PSoC4/CyLib.c ****     *
2180:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2181:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2182:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2183:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2184:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2185:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2186:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2187:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2188:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2189:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 57


2190:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2191:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2192:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2193:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2194:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2195:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2196:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2197:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2198:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2199:Generated_Source\PSoC4/CyLib.c ****     *
2200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2201:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2202:Generated_Source\PSoC4/CyLib.c ****     {
 991              		.loc 1 2202 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 8
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 82B0     		sub	sp, sp, #8
 1000              		.cfi_def_cfa_offset 16
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
2203:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2204:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1004              		.loc 1 2204 0
 1005 0008 144B     		ldr	r3, .L59
 1006 000a 144A     		ldr	r2, .L59
 1007 000c 1268     		ldr	r2, [r2]
 1008 000e 0221     		movs	r1, #2
 1009 0010 8A43     		bics	r2, r1
 1010 0012 1A60     		str	r2, [r3]
2205:Generated_Source\PSoC4/CyLib.c **** 
2206:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2207:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1011              		.loc 1 2207 0
 1012 0014 124B     		ldr	r3, .L59+4
 1013 0016 124A     		ldr	r2, .L59+4
 1014 0018 1268     		ldr	r2, [r2]
 1015 001a 1E21     		movs	r1, #30
 1016 001c 8A43     		bics	r2, r1
 1017 001e 1100     		movs	r1, r2
2208:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1018              		.loc 1 2208 0
 1019 0020 7A68     		ldr	r2, [r7, #4]
 1020 0022 5200     		lsls	r2, r2, #1
 1021 0024 1E20     		movs	r0, #30
 1022 0026 0240     		ands	r2, r0
2207:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1023              		.loc 1 2207 0
 1024 0028 0A43     		orrs	r2, r1
 1025 002a 1A60     		str	r2, [r3]
2209:Generated_Source\PSoC4/CyLib.c **** 
2210:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 58


2211:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1026              		.loc 1 2211 0
 1027 002c 0C4B     		ldr	r3, .L59+4
 1028 002e 0C4A     		ldr	r2, .L59+4
 1029 0030 1268     		ldr	r2, [r2]
 1030 0032 0121     		movs	r1, #1
 1031 0034 0A43     		orrs	r2, r1
 1032 0036 1A60     		str	r2, [r3]
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2214:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 1033              		.loc 1 2214 0
 1034 0038 FA23     		movs	r3, #250
 1035 003a 9B00     		lsls	r3, r3, #2
 1036 003c 1800     		movs	r0, r3
 1037 003e FFF7FEFF 		bl	CyDelayUs
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2217:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 1038              		.loc 1 2217 0
 1039 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2218:Generated_Source\PSoC4/CyLib.c **** 
2219:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2220:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 1040              		.loc 1 2220 0
 1041 0046 054B     		ldr	r3, .L59
 1042 0048 044A     		ldr	r2, .L59
 1043 004a 1268     		ldr	r2, [r2]
 1044 004c 0221     		movs	r1, #2
 1045 004e 0A43     		orrs	r2, r1
 1046 0050 1A60     		str	r2, [r3]
2221:Generated_Source\PSoC4/CyLib.c ****     }
 1047              		.loc 1 2221 0
 1048 0052 C046     		nop
 1049 0054 BD46     		mov	sp, r7
 1050 0056 02B0     		add	sp, sp, #8
 1051              		@ sp needed
 1052 0058 80BD     		pop	{r7, pc}
 1053              	.L60:
 1054 005a C046     		.align	2
 1055              	.L59:
 1056 005c 08000B40 		.word	1074462728
 1057 0060 18000B40 		.word	1074462744
 1058              		.cfi_endproc
 1059              	.LFE13:
 1060              		.size	CySysLvdEnable, .-CySysLvdEnable
 1061              		.section	.text.CySysLvdDisable,"ax",%progbits
 1062              		.align	2
 1063              		.global	CySysLvdDisable
 1064              		.code	16
 1065              		.thumb_func
 1066              		.type	CySysLvdDisable, %function
 1067              	CySysLvdDisable:
 1068              	.LFB14:
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c **** 
2224:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 59


2225:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2226:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2227:Generated_Source\PSoC4/CyLib.c ****     *
2228:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2229:Generated_Source\PSoC4/CyLib.c ****     *
2230:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2232:Generated_Source\PSoC4/CyLib.c ****     {
 1069              		.loc 1 2232 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073 0000 80B5     		push	{r7, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 7, -8
 1076              		.cfi_offset 14, -4
 1077 0002 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1079              		.loc 1 2233 0
 1080 0004 074B     		ldr	r3, .L62
 1081 0006 074A     		ldr	r2, .L62
 1082 0008 1268     		ldr	r2, [r2]
 1083 000a 0221     		movs	r1, #2
 1084 000c 8A43     		bics	r2, r1
 1085 000e 1A60     		str	r2, [r3]
2234:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1086              		.loc 1 2234 0
 1087 0010 054B     		ldr	r3, .L62+4
 1088 0012 054A     		ldr	r2, .L62+4
 1089 0014 1268     		ldr	r2, [r2]
 1090 0016 0121     		movs	r1, #1
 1091 0018 8A43     		bics	r2, r1
 1092 001a 1A60     		str	r2, [r3]
2235:Generated_Source\PSoC4/CyLib.c ****     }
 1093              		.loc 1 2235 0
 1094 001c C046     		nop
 1095 001e BD46     		mov	sp, r7
 1096              		@ sp needed
 1097 0020 80BD     		pop	{r7, pc}
 1098              	.L63:
 1099 0022 C046     		.align	2
 1100              	.L62:
 1101 0024 08000B40 		.word	1074462728
 1102 0028 18000B40 		.word	1074462744
 1103              		.cfi_endproc
 1104              	.LFE14:
 1105              		.size	CySysLvdDisable, .-CySysLvdDisable
 1106              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 1107              		.align	2
 1108              		.global	CySysLvdGetInterruptSource
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	CySysLvdGetInterruptSource, %function
 1112              	CySysLvdGetInterruptSource:
 1113              	.LFB15:
2236:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 60


2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2239:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2240:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2243:Generated_Source\PSoC4/CyLib.c ****     *
2244:Generated_Source\PSoC4/CyLib.c ****     * \return
2245:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2246:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2247:Generated_Source\PSoC4/CyLib.c ****     *
2248:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2249:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2250:Generated_Source\PSoC4/CyLib.c ****     {
 1114              		.loc 1 2250 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 1, uses_anonymous_args = 0
 1118 0000 80B5     		push	{r7, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 7, -8
 1121              		.cfi_offset 14, -4
 1122 0002 00AF     		add	r7, sp, #0
 1123              		.cfi_def_cfa_register 7
2251:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 1124              		.loc 1 2251 0
 1125 0004 034B     		ldr	r3, .L66
 1126 0006 1B68     		ldr	r3, [r3]
 1127 0008 0222     		movs	r2, #2
 1128 000a 1340     		ands	r3, r2
2252:Generated_Source\PSoC4/CyLib.c ****     }
 1129              		.loc 1 2252 0
 1130 000c 1800     		movs	r0, r3
 1131 000e BD46     		mov	sp, r7
 1132              		@ sp needed
 1133 0010 80BD     		pop	{r7, pc}
 1134              	.L67:
 1135 0012 C046     		.align	2
 1136              	.L66:
 1137 0014 04000B40 		.word	1074462724
 1138              		.cfi_endproc
 1139              	.LFE15:
 1140              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1141              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1142              		.align	2
 1143              		.global	CySysLvdClearInterrupt
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	CySysLvdClearInterrupt, %function
 1147              	CySysLvdClearInterrupt:
 1148              	.LFB16:
2253:Generated_Source\PSoC4/CyLib.c **** 
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2256:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2257:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2258:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 61


2259:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     * \return
2262:Generated_Source\PSoC4/CyLib.c ****     *  None
2263:Generated_Source\PSoC4/CyLib.c ****     *
2264:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2265:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2266:Generated_Source\PSoC4/CyLib.c ****     {
 1149              		.loc 1 2266 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 80B5     		push	{r7, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
2267:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1159              		.loc 1 2267 0
 1160 0004 024B     		ldr	r3, .L69
 1161 0006 0222     		movs	r2, #2
 1162 0008 1A60     		str	r2, [r3]
2268:Generated_Source\PSoC4/CyLib.c ****     }
 1163              		.loc 1 2268 0
 1164 000a C046     		nop
 1165 000c BD46     		mov	sp, r7
 1166              		@ sp needed
 1167 000e 80BD     		pop	{r7, pc}
 1168              	.L70:
 1169              		.align	2
 1170              	.L69:
 1171 0010 04000B40 		.word	1074462724
 1172              		.cfi_endproc
 1173              	.LFE16:
 1174              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1175              		.section	.text.CySysGetResetReason,"ax",%progbits
 1176              		.align	2
 1177              		.global	CySysGetResetReason
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	CySysGetResetReason, %function
 1181              	CySysGetResetReason:
 1182              	.LFB17:
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c **** 
2273:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2274:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2275:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2276:Generated_Source\PSoC4/CyLib.c **** *
2277:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2278:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2279:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2280:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2281:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 62


2282:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2283:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2284:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2285:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2286:Generated_Source\PSoC4/CyLib.c **** *
2287:Generated_Source\PSoC4/CyLib.c **** * \return
2288:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2289:Generated_Source\PSoC4/CyLib.c **** *
2290:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2291:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2292:Generated_Source\PSoC4/CyLib.c **** {
 1183              		.loc 1 2292 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 16
 1186              		@ frame_needed = 1, uses_anonymous_args = 0
 1187 0000 80B5     		push	{r7, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
 1191 0002 84B0     		sub	sp, sp, #16
 1192              		.cfi_def_cfa_offset 24
 1193 0004 00AF     		add	r7, sp, #0
 1194              		.cfi_def_cfa_register 7
 1195 0006 7860     		str	r0, [r7, #4]
2293:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1196              		.loc 1 2295 0
 1197 0008 7B68     		ldr	r3, [r7, #4]
 1198 000a 1922     		movs	r2, #25
 1199 000c 1340     		ands	r3, r2
 1200 000e 7B60     		str	r3, [r7, #4]
2296:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1201              		.loc 1 2296 0
 1202 0010 064B     		ldr	r3, .L73
 1203 0012 1B68     		ldr	r3, [r3]
 1204 0014 1922     		movs	r2, #25
 1205 0016 1340     		ands	r3, r2
 1206 0018 FB60     		str	r3, [r7, #12]
2297:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2298:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1207              		.loc 1 2298 0
 1208 001a 044B     		ldr	r3, .L73
 1209 001c 7A68     		ldr	r2, [r7, #4]
 1210 001e 1A60     		str	r2, [r3]
2299:Generated_Source\PSoC4/CyLib.c **** 
2300:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1211              		.loc 1 2300 0
 1212 0020 FB68     		ldr	r3, [r7, #12]
2301:Generated_Source\PSoC4/CyLib.c **** }
 1213              		.loc 1 2301 0
 1214 0022 1800     		movs	r0, r3
 1215 0024 BD46     		mov	sp, r7
 1216 0026 04B0     		add	sp, sp, #16
 1217              		@ sp needed
 1218 0028 80BD     		pop	{r7, pc}
 1219              	.L74:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 63


 1220 002a C046     		.align	2
 1221              	.L73:
 1222 002c 00030B40 		.word	1074463488
 1223              		.cfi_endproc
 1224              	.LFE17:
 1225              		.size	CySysGetResetReason, .-CySysGetResetReason
 1226              		.section	.text.CyDisableInts,"ax",%progbits
 1227              		.align	2
 1228              		.global	CyDisableInts
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	CyDisableInts, %function
 1232              	CyDisableInts:
 1233              	.LFB18:
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c **** 
2304:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2305:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2306:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2307:Generated_Source\PSoC4/CyLib.c **** *
2308:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return
2311:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2312:Generated_Source\PSoC4/CyLib.c **** *
2313:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2315:Generated_Source\PSoC4/CyLib.c **** {
 1234              		.loc 1 2315 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 8
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 80B5     		push	{r7, lr}
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 82B0     		sub	sp, sp, #8
 1243              		.cfi_def_cfa_offset 16
 1244 0004 00AF     		add	r7, sp, #0
 1245              		.cfi_def_cfa_register 7
2316:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2317:Generated_Source\PSoC4/CyLib.c **** 
2318:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2319:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1246              		.loc 1 2319 0
 1247 0006 064B     		ldr	r3, .L77
 1248 0008 1B68     		ldr	r3, [r3]
 1249 000a 7B60     		str	r3, [r7, #4]
2320:Generated_Source\PSoC4/CyLib.c **** 
2321:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2322:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1250              		.loc 1 2322 0
 1251 000c 044B     		ldr	r3, .L77
 1252 000e 0122     		movs	r2, #1
 1253 0010 5242     		rsbs	r2, r2, #0
 1254 0012 1A60     		str	r2, [r3]
2323:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 64


2324:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1255              		.loc 1 2324 0
 1256 0014 7B68     		ldr	r3, [r7, #4]
2325:Generated_Source\PSoC4/CyLib.c **** }
 1257              		.loc 1 2325 0
 1258 0016 1800     		movs	r0, r3
 1259 0018 BD46     		mov	sp, r7
 1260 001a 02B0     		add	sp, sp, #8
 1261              		@ sp needed
 1262 001c 80BD     		pop	{r7, pc}
 1263              	.L78:
 1264 001e C046     		.align	2
 1265              	.L77:
 1266 0020 80E100E0 		.word	-536813184
 1267              		.cfi_endproc
 1268              	.LFE18:
 1269              		.size	CyDisableInts, .-CyDisableInts
 1270              		.section	.text.CyEnableInts,"ax",%progbits
 1271              		.align	2
 1272              		.global	CyEnableInts
 1273              		.code	16
 1274              		.thumb_func
 1275              		.type	CyEnableInts, %function
 1276              	CyEnableInts:
 1277              	.LFB19:
2326:Generated_Source\PSoC4/CyLib.c **** 
2327:Generated_Source\PSoC4/CyLib.c **** 
2328:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2329:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2330:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2335:Generated_Source\PSoC4/CyLib.c **** *
2336:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2337:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2338:Generated_Source\PSoC4/CyLib.c **** {
 1278              		.loc 1 2338 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 8
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282 0000 80B5     		push	{r7, lr}
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 82B0     		sub	sp, sp, #8
 1287              		.cfi_def_cfa_offset 16
 1288 0004 00AF     		add	r7, sp, #0
 1289              		.cfi_def_cfa_register 7
 1290 0006 7860     		str	r0, [r7, #4]
2339:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1291              		.loc 1 2339 0
 1292 0008 034B     		ldr	r3, .L80
 1293 000a 7A68     		ldr	r2, [r7, #4]
 1294 000c 1A60     		str	r2, [r3]
2340:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 65


 1295              		.loc 1 2340 0
 1296 000e C046     		nop
 1297 0010 BD46     		mov	sp, r7
 1298 0012 02B0     		add	sp, sp, #8
 1299              		@ sp needed
 1300 0014 80BD     		pop	{r7, pc}
 1301              	.L81:
 1302 0016 C046     		.align	2
 1303              	.L80:
 1304 0018 00E100E0 		.word	-536813312
 1305              		.cfi_endproc
 1306              	.LFE19:
 1307              		.size	CyEnableInts, .-CyEnableInts
 1308              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1309              		.align	2
 1310              		.global	CyIntSetSysVector
 1311              		.code	16
 1312              		.thumb_func
 1313              		.type	CyIntSetSysVector, %function
 1314              	CyIntSetSysVector:
 1315              	.LFB20:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** 
2343:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2344:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2345:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2348:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2349:Generated_Source\PSoC4/CyLib.c **** *
2350:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2351:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2352:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2353:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2354:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2355:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2356:Generated_Source\PSoC4/CyLib.c **** *
2357:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2358:Generated_Source\PSoC4/CyLib.c **** *
2359:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2360:Generated_Source\PSoC4/CyLib.c **** *
2361:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2362:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2363:Generated_Source\PSoC4/CyLib.c **** {
 1316              		.loc 1 2363 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 16
 1319              		@ frame_needed = 1, uses_anonymous_args = 0
 1320 0000 80B5     		push	{r7, lr}
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 7, -8
 1323              		.cfi_offset 14, -4
 1324 0002 84B0     		sub	sp, sp, #16
 1325              		.cfi_def_cfa_offset 24
 1326 0004 00AF     		add	r7, sp, #0
 1327              		.cfi_def_cfa_register 7
 1328 0006 0200     		movs	r2, r0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 66


 1329 0008 3960     		str	r1, [r7]
 1330 000a FB1D     		adds	r3, r7, #7
 1331 000c 1A70     		strb	r2, [r3]
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1332              		.loc 1 2365 0
 1333 000e 8023     		movs	r3, #128
 1334 0010 9B05     		lsls	r3, r3, #22
 1335 0012 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1336              		.loc 1 2367 0
 1337 0014 FB1D     		adds	r3, r7, #7
 1338 0016 1B78     		ldrb	r3, [r3]
 1339 0018 0F2B     		cmp	r3, #15
 1340 001a 02D9     		bls	.L83
 1341              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1342 001c 0020     		movs	r0, #0
 1343 001e FFF7FEFF 		bl	CyHalt
 1344              	.L83:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2370:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1345              		.loc 1 2370 0 is_stmt 1
 1346 0022 FB1D     		adds	r3, r7, #7
 1347 0024 1B78     		ldrb	r3, [r3]
 1348 0026 9B00     		lsls	r3, r3, #2
 1349 0028 FA68     		ldr	r2, [r7, #12]
 1350 002a D318     		adds	r3, r2, r3
 1351 002c 1B68     		ldr	r3, [r3]
 1352 002e BB60     		str	r3, [r7, #8]
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2373:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1353              		.loc 1 2373 0
 1354 0030 FB1D     		adds	r3, r7, #7
 1355 0032 1B78     		ldrb	r3, [r3]
 1356 0034 9B00     		lsls	r3, r3, #2
 1357 0036 FA68     		ldr	r2, [r7, #12]
 1358 0038 D318     		adds	r3, r2, r3
 1359 003a 3A68     		ldr	r2, [r7]
 1360 003c 1A60     		str	r2, [r3]
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1361              		.loc 1 2375 0
 1362 003e BB68     		ldr	r3, [r7, #8]
2376:Generated_Source\PSoC4/CyLib.c **** }
 1363              		.loc 1 2376 0
 1364 0040 1800     		movs	r0, r3
 1365 0042 BD46     		mov	sp, r7
 1366 0044 04B0     		add	sp, sp, #16
 1367              		@ sp needed
 1368 0046 80BD     		pop	{r7, pc}
 1369              		.cfi_endproc
 1370              	.LFE20:
 1371              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1372              		.section	.text.CyIntGetSysVector,"ax",%progbits
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 67


 1373              		.align	2
 1374              		.global	CyIntGetSysVector
 1375              		.code	16
 1376              		.thumb_func
 1377              		.type	CyIntGetSysVector, %function
 1378              	CyIntGetSysVector:
 1379              	.LFB21:
2377:Generated_Source\PSoC4/CyLib.c **** 
2378:Generated_Source\PSoC4/CyLib.c **** 
2379:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2380:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2381:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2382:Generated_Source\PSoC4/CyLib.c **** *
2383:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2384:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2385:Generated_Source\PSoC4/CyLib.c **** *
2386:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2387:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2388:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2389:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2390:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2391:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2392:Generated_Source\PSoC4/CyLib.c **** *
2393:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2394:Generated_Source\PSoC4/CyLib.c **** *
2395:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2396:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2397:Generated_Source\PSoC4/CyLib.c **** {
 1380              		.loc 1 2397 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 16
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384 0000 80B5     		push	{r7, lr}
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 84B0     		sub	sp, sp, #16
 1389              		.cfi_def_cfa_offset 24
 1390 0004 00AF     		add	r7, sp, #0
 1391              		.cfi_def_cfa_register 7
 1392 0006 0200     		movs	r2, r0
 1393 0008 FB1D     		adds	r3, r7, #7
 1394 000a 1A70     		strb	r2, [r3]
2398:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1395              		.loc 1 2398 0
 1396 000c 8023     		movs	r3, #128
 1397 000e 9B05     		lsls	r3, r3, #22
 1398 0010 FB60     		str	r3, [r7, #12]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1399              		.loc 1 2400 0
 1400 0012 FB1D     		adds	r3, r7, #7
 1401 0014 1B78     		ldrb	r3, [r3]
 1402 0016 0F2B     		cmp	r3, #15
 1403 0018 02D9     		bls	.L86
 1404              		.loc 1 2400 0 is_stmt 0 discriminator 1
 1405 001a 0020     		movs	r0, #0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 68


 1406 001c FFF7FEFF 		bl	CyHalt
 1407              	.L86:
2401:Generated_Source\PSoC4/CyLib.c **** 
2402:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1408              		.loc 1 2402 0 is_stmt 1
 1409 0020 FB1D     		adds	r3, r7, #7
 1410 0022 1B78     		ldrb	r3, [r3]
 1411 0024 9B00     		lsls	r3, r3, #2
 1412 0026 FA68     		ldr	r2, [r7, #12]
 1413 0028 D318     		adds	r3, r2, r3
 1414 002a 1B68     		ldr	r3, [r3]
2403:Generated_Source\PSoC4/CyLib.c **** }
 1415              		.loc 1 2403 0
 1416 002c 1800     		movs	r0, r3
 1417 002e BD46     		mov	sp, r7
 1418 0030 04B0     		add	sp, sp, #16
 1419              		@ sp needed
 1420 0032 80BD     		pop	{r7, pc}
 1421              		.cfi_endproc
 1422              	.LFE21:
 1423              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1424              		.section	.text.CyIntSetVector,"ax",%progbits
 1425              		.align	2
 1426              		.global	CyIntSetVector
 1427              		.code	16
 1428              		.thumb_func
 1429              		.type	CyIntSetVector, %function
 1430              	CyIntSetVector:
 1431              	.LFB22:
2404:Generated_Source\PSoC4/CyLib.c **** 
2405:Generated_Source\PSoC4/CyLib.c **** 
2406:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2407:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2408:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2413:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2416:Generated_Source\PSoC4/CyLib.c **** *
2417:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2418:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2419:Generated_Source\PSoC4/CyLib.c **** {
 1432              		.loc 1 2419 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 16
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436 0000 80B5     		push	{r7, lr}
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 84B0     		sub	sp, sp, #16
 1441              		.cfi_def_cfa_offset 24
 1442 0004 00AF     		add	r7, sp, #0
 1443              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 69


 1444 0006 0200     		movs	r2, r0
 1445 0008 3960     		str	r1, [r7]
 1446 000a FB1D     		adds	r3, r7, #7
 1447 000c 1A70     		strb	r2, [r3]
2420:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2421:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1448              		.loc 1 2421 0
 1449 000e 8023     		movs	r3, #128
 1450 0010 9B05     		lsls	r3, r3, #22
 1451 0012 FB60     		str	r3, [r7, #12]
2422:Generated_Source\PSoC4/CyLib.c **** 
2423:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1452              		.loc 1 2423 0
 1453 0014 FB1D     		adds	r3, r7, #7
 1454 0016 1B78     		ldrb	r3, [r3]
 1455 0018 1F2B     		cmp	r3, #31
 1456 001a 02D9     		bls	.L89
 1457              		.loc 1 2423 0 is_stmt 0 discriminator 1
 1458 001c 0020     		movs	r0, #0
 1459 001e FFF7FEFF 		bl	CyHalt
 1460              	.L89:
2424:Generated_Source\PSoC4/CyLib.c **** 
2425:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2426:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1461              		.loc 1 2426 0 is_stmt 1
 1462 0022 FB1D     		adds	r3, r7, #7
 1463 0024 1B78     		ldrb	r3, [r3]
 1464 0026 1033     		adds	r3, r3, #16
 1465 0028 9B00     		lsls	r3, r3, #2
 1466 002a FA68     		ldr	r2, [r7, #12]
 1467 002c D318     		adds	r3, r2, r3
 1468 002e 1B68     		ldr	r3, [r3]
 1469 0030 BB60     		str	r3, [r7, #8]
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2429:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1470              		.loc 1 2429 0
 1471 0032 FB1D     		adds	r3, r7, #7
 1472 0034 1B78     		ldrb	r3, [r3]
 1473 0036 1033     		adds	r3, r3, #16
 1474 0038 9B00     		lsls	r3, r3, #2
 1475 003a FA68     		ldr	r2, [r7, #12]
 1476 003c D318     		adds	r3, r2, r3
 1477 003e 3A68     		ldr	r2, [r7]
 1478 0040 1A60     		str	r2, [r3]
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1479              		.loc 1 2431 0
 1480 0042 BB68     		ldr	r3, [r7, #8]
2432:Generated_Source\PSoC4/CyLib.c **** }
 1481              		.loc 1 2432 0
 1482 0044 1800     		movs	r0, r3
 1483 0046 BD46     		mov	sp, r7
 1484 0048 04B0     		add	sp, sp, #16
 1485              		@ sp needed
 1486 004a 80BD     		pop	{r7, pc}
 1487              		.cfi_endproc
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 70


 1488              	.LFE22:
 1489              		.size	CyIntSetVector, .-CyIntSetVector
 1490              		.section	.text.CyIntGetVector,"ax",%progbits
 1491              		.align	2
 1492              		.global	CyIntGetVector
 1493              		.code	16
 1494              		.thumb_func
 1495              		.type	CyIntGetVector, %function
 1496              	CyIntGetVector:
 1497              	.LFB23:
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c **** 
2435:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2436:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2437:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2438:Generated_Source\PSoC4/CyLib.c **** *
2439:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2440:Generated_Source\PSoC4/CyLib.c **** *
2441:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2442:Generated_Source\PSoC4/CyLib.c **** *
2443:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2444:Generated_Source\PSoC4/CyLib.c **** *
2445:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2446:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2447:Generated_Source\PSoC4/CyLib.c **** {
 1498              		.loc 1 2447 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 16
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502 0000 80B5     		push	{r7, lr}
 1503              		.cfi_def_cfa_offset 8
 1504              		.cfi_offset 7, -8
 1505              		.cfi_offset 14, -4
 1506 0002 84B0     		sub	sp, sp, #16
 1507              		.cfi_def_cfa_offset 24
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
 1510 0006 0200     		movs	r2, r0
 1511 0008 FB1D     		adds	r3, r7, #7
 1512 000a 1A70     		strb	r2, [r3]
2448:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1513              		.loc 1 2448 0
 1514 000c 8023     		movs	r3, #128
 1515 000e 9B05     		lsls	r3, r3, #22
 1516 0010 FB60     		str	r3, [r7, #12]
2449:Generated_Source\PSoC4/CyLib.c **** 
2450:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1517              		.loc 1 2450 0
 1518 0012 FB1D     		adds	r3, r7, #7
 1519 0014 1B78     		ldrb	r3, [r3]
 1520 0016 1F2B     		cmp	r3, #31
 1521 0018 02D9     		bls	.L92
 1522              		.loc 1 2450 0 is_stmt 0 discriminator 1
 1523 001a 0020     		movs	r0, #0
 1524 001c FFF7FEFF 		bl	CyHalt
 1525              	.L92:
2451:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 71


2452:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1526              		.loc 1 2452 0 is_stmt 1
 1527 0020 FB1D     		adds	r3, r7, #7
 1528 0022 1B78     		ldrb	r3, [r3]
 1529 0024 1033     		adds	r3, r3, #16
 1530 0026 9B00     		lsls	r3, r3, #2
 1531 0028 FA68     		ldr	r2, [r7, #12]
 1532 002a D318     		adds	r3, r2, r3
 1533 002c 1B68     		ldr	r3, [r3]
2453:Generated_Source\PSoC4/CyLib.c **** }
 1534              		.loc 1 2453 0
 1535 002e 1800     		movs	r0, r3
 1536 0030 BD46     		mov	sp, r7
 1537 0032 04B0     		add	sp, sp, #16
 1538              		@ sp needed
 1539 0034 80BD     		pop	{r7, pc}
 1540              		.cfi_endproc
 1541              	.LFE23:
 1542              		.size	CyIntGetVector, .-CyIntGetVector
 1543 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1544              		.align	2
 1545              		.global	CyIntSetPriority
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	CyIntSetPriority, %function
 1549              	CyIntSetPriority:
 1550              	.LFB24:
2454:Generated_Source\PSoC4/CyLib.c **** 
2455:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2456:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2457:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2458:Generated_Source\PSoC4/CyLib.c **** *
2459:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2460:Generated_Source\PSoC4/CyLib.c **** *
2461:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2462:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2463:Generated_Source\PSoC4/CyLib.c **** *
2464:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2465:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2466:Generated_Source\PSoC4/CyLib.c **** {
 1551              		.loc 1 2466 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 24
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555 0000 90B5     		push	{r4, r7, lr}
 1556              		.cfi_def_cfa_offset 12
 1557              		.cfi_offset 4, -12
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 87B0     		sub	sp, sp, #28
 1561              		.cfi_def_cfa_offset 40
 1562 0004 00AF     		add	r7, sp, #0
 1563              		.cfi_def_cfa_register 7
 1564 0006 0200     		movs	r2, r0
 1565 0008 FB1D     		adds	r3, r7, #7
 1566 000a 1A70     		strb	r2, [r3]
 1567 000c BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 72


 1568 000e 0A1C     		adds	r2, r1, #0
 1569 0010 1A70     		strb	r2, [r3]
2467:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2468:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2469:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1570              		.loc 1 2471 0
 1571 0012 BB1D     		adds	r3, r7, #6
 1572 0014 1B78     		ldrb	r3, [r3]
 1573 0016 032B     		cmp	r3, #3
 1574 0018 02D9     		bls	.L95
 1575              		.loc 1 2471 0 is_stmt 0 discriminator 1
 1576 001a 0020     		movs	r0, #0
 1577 001c FFF7FEFF 		bl	CyHalt
 1578              	.L95:
2472:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1579              		.loc 1 2472 0 is_stmt 1
 1580 0020 FB1D     		adds	r3, r7, #7
 1581 0022 1B78     		ldrb	r3, [r3]
 1582 0024 1F2B     		cmp	r3, #31
 1583 0026 02D9     		bls	.L96
 1584              		.loc 1 2472 0 is_stmt 0 discriminator 1
 1585 0028 0020     		movs	r0, #0
 1586 002a FFF7FEFF 		bl	CyHalt
 1587              	.L96:
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1588              		.loc 1 2474 0 is_stmt 1
 1589 002e FB1D     		adds	r3, r7, #7
 1590 0030 1B78     		ldrb	r3, [r3]
 1591 0032 0322     		movs	r2, #3
 1592 0034 1340     		ands	r3, r2
 1593 0036 DB00     		lsls	r3, r3, #3
 1594 0038 0633     		adds	r3, r3, #6
 1595 003a 7B61     		str	r3, [r7, #20]
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1596              		.loc 1 2476 0
 1597 003c 1323     		movs	r3, #19
 1598 003e FC18     		adds	r4, r7, r3
 1599 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1600 0044 0300     		movs	r3, r0
 1601 0046 2370     		strb	r3, [r4]
2477:Generated_Source\PSoC4/CyLib.c **** 
2478:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1602              		.loc 1 2478 0
 1603 0048 FB1D     		adds	r3, r7, #7
 1604 004a 1B78     		ldrb	r3, [r3]
 1605 004c 9B08     		lsrs	r3, r3, #2
 1606 004e DBB2     		uxtb	r3, r3
 1607 0050 9B00     		lsls	r3, r3, #2
 1608 0052 144A     		ldr	r2, .L97
 1609 0054 9446     		mov	ip, r2
 1610 0056 6344     		add	r3, r3, ip
 1611 0058 1B68     		ldr	r3, [r3]
 1612 005a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 73


2479:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1613              		.loc 1 2479 0
 1614 005c 0322     		movs	r2, #3
 1615 005e 7B69     		ldr	r3, [r7, #20]
 1616 0060 9A40     		lsls	r2, r2, r3
 1617 0062 1300     		movs	r3, r2
 1618 0064 DA43     		mvns	r2, r3
 1619 0066 FB68     		ldr	r3, [r7, #12]
 1620 0068 1340     		ands	r3, r2
 1621 006a FB60     		str	r3, [r7, #12]
2480:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1622              		.loc 1 2480 0
 1623 006c BB1D     		adds	r3, r7, #6
 1624 006e 1A78     		ldrb	r2, [r3]
 1625 0070 7B69     		ldr	r3, [r7, #20]
 1626 0072 9A40     		lsls	r2, r2, r3
 1627 0074 1300     		movs	r3, r2
 1628 0076 FA68     		ldr	r2, [r7, #12]
 1629 0078 1343     		orrs	r3, r2
 1630 007a FB60     		str	r3, [r7, #12]
2481:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1631              		.loc 1 2481 0
 1632 007c FB1D     		adds	r3, r7, #7
 1633 007e 1B78     		ldrb	r3, [r3]
 1634 0080 9B08     		lsrs	r3, r3, #2
 1635 0082 DBB2     		uxtb	r3, r3
 1636 0084 9B00     		lsls	r3, r3, #2
 1637 0086 074A     		ldr	r2, .L97
 1638 0088 9446     		mov	ip, r2
 1639 008a 6344     		add	r3, r3, ip
 1640 008c FA68     		ldr	r2, [r7, #12]
 1641 008e 1A60     		str	r2, [r3]
2482:Generated_Source\PSoC4/CyLib.c **** 
2483:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1642              		.loc 1 2483 0
 1643 0090 1323     		movs	r3, #19
 1644 0092 FB18     		adds	r3, r7, r3
 1645 0094 1B78     		ldrb	r3, [r3]
 1646 0096 1800     		movs	r0, r3
 1647 0098 FFF7FEFF 		bl	CyExitCriticalSection
2484:Generated_Source\PSoC4/CyLib.c **** }
 1648              		.loc 1 2484 0
 1649 009c C046     		nop
 1650 009e BD46     		mov	sp, r7
 1651 00a0 07B0     		add	sp, sp, #28
 1652              		@ sp needed
 1653 00a2 90BD     		pop	{r4, r7, pc}
 1654              	.L98:
 1655              		.align	2
 1656              	.L97:
 1657 00a4 00E400E0 		.word	-536812544
 1658              		.cfi_endproc
 1659              	.LFE24:
 1660              		.size	CyIntSetPriority, .-CyIntSetPriority
 1661              		.section	.text.CyIntGetPriority,"ax",%progbits
 1662              		.align	2
 1663              		.global	CyIntGetPriority
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 74


 1664              		.code	16
 1665              		.thumb_func
 1666              		.type	CyIntGetPriority, %function
 1667              	CyIntGetPriority:
 1668              	.LFB25:
2485:Generated_Source\PSoC4/CyLib.c **** 
2486:Generated_Source\PSoC4/CyLib.c **** 
2487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2490:Generated_Source\PSoC4/CyLib.c **** *
2491:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2492:Generated_Source\PSoC4/CyLib.c **** *
2493:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** * \return
2496:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2497:Generated_Source\PSoC4/CyLib.c **** *
2498:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2499:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2500:Generated_Source\PSoC4/CyLib.c **** {
 1669              		.loc 1 2500 0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 16
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673 0000 80B5     		push	{r7, lr}
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 84B0     		sub	sp, sp, #16
 1678              		.cfi_def_cfa_offset 24
 1679 0004 00AF     		add	r7, sp, #0
 1680              		.cfi_def_cfa_register 7
 1681 0006 0200     		movs	r2, r0
 1682 0008 FB1D     		adds	r3, r7, #7
 1683 000a 1A70     		strb	r2, [r3]
2501:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2502:Generated_Source\PSoC4/CyLib.c **** 
2503:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1684              		.loc 1 2503 0
 1685 000c FB1D     		adds	r3, r7, #7
 1686 000e 1B78     		ldrb	r3, [r3]
 1687 0010 1F2B     		cmp	r3, #31
 1688 0012 02D9     		bls	.L100
 1689              		.loc 1 2503 0 is_stmt 0 discriminator 1
 1690 0014 0020     		movs	r0, #0
 1691 0016 FFF7FEFF 		bl	CyHalt
 1692              	.L100:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1693              		.loc 1 2505 0 is_stmt 1
 1694 001a FB1D     		adds	r3, r7, #7
 1695 001c 1B78     		ldrb	r3, [r3]
 1696 001e 9B08     		lsrs	r3, r3, #2
 1697 0020 DBB2     		uxtb	r3, r3
 1698 0022 9B00     		lsls	r3, r3, #2
 1699 0024 0B4A     		ldr	r2, .L102
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 75


 1700 0026 9446     		mov	ip, r2
 1701 0028 6344     		add	r3, r3, ip
 1702 002a 1A68     		ldr	r2, [r3]
 1703 002c FB1D     		adds	r3, r7, #7
 1704 002e 1B78     		ldrb	r3, [r3]
 1705 0030 0321     		movs	r1, #3
 1706 0032 0B40     		ands	r3, r1
 1707 0034 DB00     		lsls	r3, r3, #3
 1708 0036 0633     		adds	r3, r3, #6
 1709 0038 DA40     		lsrs	r2, r2, r3
 1710 003a 0F23     		movs	r3, #15
 1711 003c FB18     		adds	r3, r7, r3
 1712 003e 1A70     		strb	r2, [r3]
2506:Generated_Source\PSoC4/CyLib.c **** 
2507:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1713              		.loc 1 2507 0
 1714 0040 0F23     		movs	r3, #15
 1715 0042 FB18     		adds	r3, r7, r3
 1716 0044 1B78     		ldrb	r3, [r3]
 1717 0046 0322     		movs	r2, #3
 1718 0048 1340     		ands	r3, r2
 1719 004a DBB2     		uxtb	r3, r3
2508:Generated_Source\PSoC4/CyLib.c **** }
 1720              		.loc 1 2508 0
 1721 004c 1800     		movs	r0, r3
 1722 004e BD46     		mov	sp, r7
 1723 0050 04B0     		add	sp, sp, #16
 1724              		@ sp needed
 1725 0052 80BD     		pop	{r7, pc}
 1726              	.L103:
 1727              		.align	2
 1728              	.L102:
 1729 0054 00E400E0 		.word	-536812544
 1730              		.cfi_endproc
 1731              	.LFE25:
 1732              		.size	CyIntGetPriority, .-CyIntGetPriority
 1733              		.section	.text.CyIntEnable,"ax",%progbits
 1734              		.align	2
 1735              		.global	CyIntEnable
 1736              		.code	16
 1737              		.thumb_func
 1738              		.type	CyIntEnable, %function
 1739              	CyIntEnable:
 1740              	.LFB26:
2509:Generated_Source\PSoC4/CyLib.c **** 
2510:Generated_Source\PSoC4/CyLib.c **** 
2511:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2512:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2513:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2514:Generated_Source\PSoC4/CyLib.c **** *
2515:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2516:Generated_Source\PSoC4/CyLib.c **** *
2517:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2518:Generated_Source\PSoC4/CyLib.c **** *
2519:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2520:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2521:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 76


 1741              		.loc 1 2521 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 8
 1744              		@ frame_needed = 1, uses_anonymous_args = 0
 1745 0000 80B5     		push	{r7, lr}
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 7, -8
 1748              		.cfi_offset 14, -4
 1749 0002 82B0     		sub	sp, sp, #8
 1750              		.cfi_def_cfa_offset 16
 1751 0004 00AF     		add	r7, sp, #0
 1752              		.cfi_def_cfa_register 7
 1753 0006 0200     		movs	r2, r0
 1754 0008 FB1D     		adds	r3, r7, #7
 1755 000a 1A70     		strb	r2, [r3]
2522:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1756              		.loc 1 2522 0
 1757 000c 064B     		ldr	r3, .L105
 1758 000e FA1D     		adds	r2, r7, #7
 1759 0010 1278     		ldrb	r2, [r2]
 1760 0012 1F21     		movs	r1, #31
 1761 0014 0A40     		ands	r2, r1
 1762 0016 0121     		movs	r1, #1
 1763 0018 9140     		lsls	r1, r1, r2
 1764 001a 0A00     		movs	r2, r1
 1765 001c 1A60     		str	r2, [r3]
2523:Generated_Source\PSoC4/CyLib.c **** }
 1766              		.loc 1 2523 0
 1767 001e C046     		nop
 1768 0020 BD46     		mov	sp, r7
 1769 0022 02B0     		add	sp, sp, #8
 1770              		@ sp needed
 1771 0024 80BD     		pop	{r7, pc}
 1772              	.L106:
 1773 0026 C046     		.align	2
 1774              	.L105:
 1775 0028 00E100E0 		.word	-536813312
 1776              		.cfi_endproc
 1777              	.LFE26:
 1778              		.size	CyIntEnable, .-CyIntEnable
 1779              		.section	.text.CyIntGetState,"ax",%progbits
 1780              		.align	2
 1781              		.global	CyIntGetState
 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CyIntGetState, %function
 1785              	CyIntGetState:
 1786              	.LFB27:
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2527:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2528:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2529:Generated_Source\PSoC4/CyLib.c **** *
2530:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2531:Generated_Source\PSoC4/CyLib.c **** *
2532:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 77


2533:Generated_Source\PSoC4/CyLib.c **** *
2534:Generated_Source\PSoC4/CyLib.c **** * \return
2535:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2536:Generated_Source\PSoC4/CyLib.c **** *
2537:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2538:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2539:Generated_Source\PSoC4/CyLib.c **** {
 1787              		.loc 1 2539 0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 8
 1790              		@ frame_needed = 1, uses_anonymous_args = 0
 1791 0000 80B5     		push	{r7, lr}
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795 0002 82B0     		sub	sp, sp, #8
 1796              		.cfi_def_cfa_offset 16
 1797 0004 00AF     		add	r7, sp, #0
 1798              		.cfi_def_cfa_register 7
 1799 0006 0200     		movs	r2, r0
 1800 0008 FB1D     		adds	r3, r7, #7
 1801 000a 1A70     		strb	r2, [r3]
2540:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2541:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1802              		.loc 1 2541 0
 1803 000c 074B     		ldr	r3, .L109
 1804 000e 1A68     		ldr	r2, [r3]
 1805 0010 FB1D     		adds	r3, r7, #7
 1806 0012 1B78     		ldrb	r3, [r3]
 1807 0014 1F21     		movs	r1, #31
 1808 0016 0B40     		ands	r3, r1
 1809 0018 DA40     		lsrs	r2, r2, r3
 1810 001a 1300     		movs	r3, r2
 1811 001c DBB2     		uxtb	r3, r3
 1812 001e 0122     		movs	r2, #1
 1813 0020 1340     		ands	r3, r2
 1814 0022 DBB2     		uxtb	r3, r3
2542:Generated_Source\PSoC4/CyLib.c **** }
 1815              		.loc 1 2542 0
 1816 0024 1800     		movs	r0, r3
 1817 0026 BD46     		mov	sp, r7
 1818 0028 02B0     		add	sp, sp, #8
 1819              		@ sp needed
 1820 002a 80BD     		pop	{r7, pc}
 1821              	.L110:
 1822              		.align	2
 1823              	.L109:
 1824 002c 00E100E0 		.word	-536813312
 1825              		.cfi_endproc
 1826              	.LFE27:
 1827              		.size	CyIntGetState, .-CyIntGetState
 1828              		.section	.text.CyIntDisable,"ax",%progbits
 1829              		.align	2
 1830              		.global	CyIntDisable
 1831              		.code	16
 1832              		.thumb_func
 1833              		.type	CyIntDisable, %function
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 78


 1834              	CyIntDisable:
 1835              	.LFB28:
2543:Generated_Source\PSoC4/CyLib.c **** 
2544:Generated_Source\PSoC4/CyLib.c **** 
2545:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2546:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2547:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2548:Generated_Source\PSoC4/CyLib.c **** *
2549:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2550:Generated_Source\PSoC4/CyLib.c **** *
2551:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2552:Generated_Source\PSoC4/CyLib.c **** *
2553:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2554:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2555:Generated_Source\PSoC4/CyLib.c **** {
 1836              		.loc 1 2555 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 8
 1839              		@ frame_needed = 1, uses_anonymous_args = 0
 1840 0000 80B5     		push	{r7, lr}
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 7, -8
 1843              		.cfi_offset 14, -4
 1844 0002 82B0     		sub	sp, sp, #8
 1845              		.cfi_def_cfa_offset 16
 1846 0004 00AF     		add	r7, sp, #0
 1847              		.cfi_def_cfa_register 7
 1848 0006 0200     		movs	r2, r0
 1849 0008 FB1D     		adds	r3, r7, #7
 1850 000a 1A70     		strb	r2, [r3]
2556:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1851              		.loc 1 2556 0
 1852 000c 064B     		ldr	r3, .L112
 1853 000e FA1D     		adds	r2, r7, #7
 1854 0010 1278     		ldrb	r2, [r2]
 1855 0012 1F21     		movs	r1, #31
 1856 0014 0A40     		ands	r2, r1
 1857 0016 0121     		movs	r1, #1
 1858 0018 9140     		lsls	r1, r1, r2
 1859 001a 0A00     		movs	r2, r1
 1860 001c 1A60     		str	r2, [r3]
2557:Generated_Source\PSoC4/CyLib.c **** }
 1861              		.loc 1 2557 0
 1862 001e C046     		nop
 1863 0020 BD46     		mov	sp, r7
 1864 0022 02B0     		add	sp, sp, #8
 1865              		@ sp needed
 1866 0024 80BD     		pop	{r7, pc}
 1867              	.L113:
 1868 0026 C046     		.align	2
 1869              	.L112:
 1870 0028 80E100E0 		.word	-536813184
 1871              		.cfi_endproc
 1872              	.LFE28:
 1873              		.size	CyIntDisable, .-CyIntDisable
 1874              		.section	.text.CyIntSetPending,"ax",%progbits
 1875              		.align	2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 79


 1876              		.global	CyIntSetPending
 1877              		.code	16
 1878              		.thumb_func
 1879              		.type	CyIntSetPending, %function
 1880              	CyIntSetPending:
 1881              	.LFB29:
2558:Generated_Source\PSoC4/CyLib.c **** 
2559:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2560:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2561:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2564:Generated_Source\PSoC4/CyLib.c **** *
2565:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2566:Generated_Source\PSoC4/CyLib.c **** *
2567:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2568:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2569:Generated_Source\PSoC4/CyLib.c **** {
 1882              		.loc 1 2569 0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 8
 1885              		@ frame_needed = 1, uses_anonymous_args = 0
 1886 0000 80B5     		push	{r7, lr}
 1887              		.cfi_def_cfa_offset 8
 1888              		.cfi_offset 7, -8
 1889              		.cfi_offset 14, -4
 1890 0002 82B0     		sub	sp, sp, #8
 1891              		.cfi_def_cfa_offset 16
 1892 0004 00AF     		add	r7, sp, #0
 1893              		.cfi_def_cfa_register 7
 1894 0006 0200     		movs	r2, r0
 1895 0008 FB1D     		adds	r3, r7, #7
 1896 000a 1A70     		strb	r2, [r3]
2570:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1897              		.loc 1 2570 0
 1898 000c 064B     		ldr	r3, .L115
 1899 000e FA1D     		adds	r2, r7, #7
 1900 0010 1278     		ldrb	r2, [r2]
 1901 0012 1F21     		movs	r1, #31
 1902 0014 0A40     		ands	r2, r1
 1903 0016 0121     		movs	r1, #1
 1904 0018 9140     		lsls	r1, r1, r2
 1905 001a 0A00     		movs	r2, r1
 1906 001c 1A60     		str	r2, [r3]
2571:Generated_Source\PSoC4/CyLib.c **** }
 1907              		.loc 1 2571 0
 1908 001e C046     		nop
 1909 0020 BD46     		mov	sp, r7
 1910 0022 02B0     		add	sp, sp, #8
 1911              		@ sp needed
 1912 0024 80BD     		pop	{r7, pc}
 1913              	.L116:
 1914 0026 C046     		.align	2
 1915              	.L115:
 1916 0028 00E200E0 		.word	-536813056
 1917              		.cfi_endproc
 1918              	.LFE29:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 80


 1919              		.size	CyIntSetPending, .-CyIntSetPending
 1920              		.section	.text.CyIntClearPending,"ax",%progbits
 1921              		.align	2
 1922              		.global	CyIntClearPending
 1923              		.code	16
 1924              		.thumb_func
 1925              		.type	CyIntClearPending, %function
 1926              	CyIntClearPending:
 1927              	.LFB30:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *
2578:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2583:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2584:Generated_Source\PSoC4/CyLib.c **** {
 1928              		.loc 1 2584 0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 8
 1931              		@ frame_needed = 1, uses_anonymous_args = 0
 1932 0000 80B5     		push	{r7, lr}
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 7, -8
 1935              		.cfi_offset 14, -4
 1936 0002 82B0     		sub	sp, sp, #8
 1937              		.cfi_def_cfa_offset 16
 1938 0004 00AF     		add	r7, sp, #0
 1939              		.cfi_def_cfa_register 7
 1940 0006 0200     		movs	r2, r0
 1941 0008 FB1D     		adds	r3, r7, #7
 1942 000a 1A70     		strb	r2, [r3]
2585:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1943              		.loc 1 2585 0
 1944 000c 064B     		ldr	r3, .L118
 1945 000e FA1D     		adds	r2, r7, #7
 1946 0010 1278     		ldrb	r2, [r2]
 1947 0012 1F21     		movs	r1, #31
 1948 0014 0A40     		ands	r2, r1
 1949 0016 0121     		movs	r1, #1
 1950 0018 9140     		lsls	r1, r1, r2
 1951 001a 0A00     		movs	r2, r1
 1952 001c 1A60     		str	r2, [r3]
2586:Generated_Source\PSoC4/CyLib.c **** }
 1953              		.loc 1 2586 0
 1954 001e C046     		nop
 1955 0020 BD46     		mov	sp, r7
 1956 0022 02B0     		add	sp, sp, #8
 1957              		@ sp needed
 1958 0024 80BD     		pop	{r7, pc}
 1959              	.L119:
 1960 0026 C046     		.align	2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 81


 1961              	.L118:
 1962 0028 80E200E0 		.word	-536812928
 1963              		.cfi_endproc
 1964              	.LFE30:
 1965              		.size	CyIntClearPending, .-CyIntClearPending
 1966              		.section	.text.CyHalt,"ax",%progbits
 1967              		.align	2
 1968              		.global	CyHalt
 1969              		.code	16
 1970              		.thumb_func
 1971              		.type	CyHalt, %function
 1972              	CyHalt:
 1973              	.LFB31:
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2590:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2591:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2599:Generated_Source\PSoC4/CyLib.c **** {
 1974              		.loc 1 2599 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 8
 1977              		@ frame_needed = 1, uses_anonymous_args = 0
 1978 0000 80B5     		push	{r7, lr}
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 7, -8
 1981              		.cfi_offset 14, -4
 1982 0002 82B0     		sub	sp, sp, #8
 1983              		.cfi_def_cfa_offset 16
 1984 0004 00AF     		add	r7, sp, #0
 1985              		.cfi_def_cfa_register 7
 1986 0006 0200     		movs	r2, r0
 1987 0008 FB1D     		adds	r3, r7, #7
 1988 000a 1A70     		strb	r2, [r3]
2600:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2601:Generated_Source\PSoC4/CyLib.c ****     {
2602:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2603:Generated_Source\PSoC4/CyLib.c ****     }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2606:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2607:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2608:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1989              		.loc 1 2608 0
 1990              		.syntax divided
 1991              	@ 2608 "Generated_Source\PSoC4\CyLib.c" 1
 1992 000c 01BE     		    bkpt    1
 1993              	@ 0 "" 2
2609:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2610:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 82


2611:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2612:Generated_Source\PSoC4/CyLib.c **** }
 1994              		.loc 1 2612 0
 1995              		.thumb
 1996              		.syntax unified
 1997 000e C046     		nop
 1998 0010 BD46     		mov	sp, r7
 1999 0012 02B0     		add	sp, sp, #8
 2000              		@ sp needed
 2001 0014 80BD     		pop	{r7, pc}
 2002              		.cfi_endproc
 2003              	.LFE31:
 2004              		.size	CyHalt, .-CyHalt
 2005 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 2006              		.align	2
 2007              		.global	CySoftwareReset
 2008              		.code	16
 2009              		.thumb_func
 2010              		.type	CySoftwareReset, %function
 2011              	CySoftwareReset:
 2012              	.LFB32:
2613:Generated_Source\PSoC4/CyLib.c **** 
2614:Generated_Source\PSoC4/CyLib.c **** 
2615:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2616:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2617:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2620:Generated_Source\PSoC4/CyLib.c **** *
2621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2622:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2623:Generated_Source\PSoC4/CyLib.c **** {
 2013              		.loc 1 2623 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
 2016              		@ frame_needed = 1, uses_anonymous_args = 0
 2017 0000 80B5     		push	{r7, lr}
 2018              		.cfi_def_cfa_offset 8
 2019              		.cfi_offset 7, -8
 2020              		.cfi_offset 14, -4
 2021 0002 00AF     		add	r7, sp, #0
 2022              		.cfi_def_cfa_register 7
2624:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2625:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2626:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2627:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 2023              		.loc 1 2628 0
 2024 0004 054B     		ldr	r3, .L122
 2025 0006 054A     		ldr	r2, .L122
 2026 0008 1268     		ldr	r2, [r2]
 2027 000a 1204     		lsls	r2, r2, #16
 2028 000c 120C     		lsrs	r2, r2, #16
2629:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2029              		.loc 1 2629 0
 2030 000e 0449     		ldr	r1, .L122+4
 2031 0010 0A43     		orrs	r2, r1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 83


2628:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2032              		.loc 1 2628 0
 2033 0012 1A60     		str	r2, [r3]
2630:Generated_Source\PSoC4/CyLib.c **** }
 2034              		.loc 1 2630 0
 2035 0014 C046     		nop
 2036 0016 BD46     		mov	sp, r7
 2037              		@ sp needed
 2038 0018 80BD     		pop	{r7, pc}
 2039              	.L123:
 2040 001a C046     		.align	2
 2041              	.L122:
 2042 001c 0CED00E0 		.word	-536810228
 2043 0020 0400FA05 		.word	100270084
 2044              		.cfi_endproc
 2045              	.LFE32:
 2046              		.size	CySoftwareReset, .-CySoftwareReset
 2047              		.section	.text.CyDelay,"ax",%progbits
 2048              		.align	2
 2049              		.global	CyDelay
 2050              		.code	16
 2051              		.thumb_func
 2052              		.type	CyDelay, %function
 2053              	CyDelay:
 2054              	.LFB33:
2631:Generated_Source\PSoC4/CyLib.c **** 
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2635:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c **** *
2637:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2638:Generated_Source\PSoC4/CyLib.c **** *
2639:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2640:Generated_Source\PSoC4/CyLib.c **** *
2641:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2642:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2643:Generated_Source\PSoC4/CyLib.c **** {
 2055              		.loc 1 2643 0
 2056              		.cfi_startproc
 2057              		@ args = 0, pretend = 0, frame = 8
 2058              		@ frame_needed = 1, uses_anonymous_args = 0
 2059 0000 80B5     		push	{r7, lr}
 2060              		.cfi_def_cfa_offset 8
 2061              		.cfi_offset 7, -8
 2062              		.cfi_offset 14, -4
 2063 0002 82B0     		sub	sp, sp, #8
 2064              		.cfi_def_cfa_offset 16
 2065 0004 00AF     		add	r7, sp, #0
 2066              		.cfi_def_cfa_register 7
 2067 0006 7860     		str	r0, [r7, #4]
2644:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2068              		.loc 1 2644 0
 2069 0008 09E0     		b	.L125
 2070              	.L126:
2645:Generated_Source\PSoC4/CyLib.c ****     {
2646:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 84


2647:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2648:Generated_Source\PSoC4/CyLib.c ****          */
2649:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 2071              		.loc 1 2649 0
 2072 000a 0D4B     		ldr	r3, .L127
 2073 000c 1B68     		ldr	r3, [r3]
 2074 000e 1800     		movs	r0, r3
 2075 0010 FFF7FEFF 		bl	CyDelayCycles
2650:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 2076              		.loc 1 2650 0
 2077 0014 7B68     		ldr	r3, [r7, #4]
 2078 0016 0B4A     		ldr	r2, .L127+4
 2079 0018 9446     		mov	ip, r2
 2080 001a 6344     		add	r3, r3, ip
 2081 001c 7B60     		str	r3, [r7, #4]
 2082              	.L125:
2644:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2083              		.loc 1 2644 0
 2084 001e 7A68     		ldr	r2, [r7, #4]
 2085 0020 8023     		movs	r3, #128
 2086 0022 1B02     		lsls	r3, r3, #8
 2087 0024 9A42     		cmp	r2, r3
 2088 0026 F0D8     		bhi	.L126
2651:Generated_Source\PSoC4/CyLib.c ****     }
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 2089              		.loc 1 2653 0
 2090 0028 074B     		ldr	r3, .L127+8
 2091 002a 1B68     		ldr	r3, [r3]
 2092 002c 7A68     		ldr	r2, [r7, #4]
 2093 002e 5343     		muls	r3, r2
 2094 0030 1800     		movs	r0, r3
 2095 0032 FFF7FEFF 		bl	CyDelayCycles
2654:Generated_Source\PSoC4/CyLib.c **** }
 2096              		.loc 1 2654 0
 2097 0036 C046     		nop
 2098 0038 BD46     		mov	sp, r7
 2099 003a 02B0     		add	sp, sp, #8
 2100              		@ sp needed
 2101 003c 80BD     		pop	{r7, pc}
 2102              	.L128:
 2103 003e C046     		.align	2
 2104              	.L127:
 2105 0040 00000000 		.word	cydelay32kMs
 2106 0044 0080FFFF 		.word	-32768
 2107 0048 00000000 		.word	cydelayFreqKhz
 2108              		.cfi_endproc
 2109              	.LFE33:
 2110              		.size	CyDelay, .-CyDelay
 2111              		.section	.text.CyDelayUs,"ax",%progbits
 2112              		.align	2
 2113              		.global	CyDelayUs
 2114              		.code	16
 2115              		.thumb_func
 2116              		.type	CyDelayUs, %function
 2117              	CyDelayUs:
 2118              	.LFB34:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 85


2655:Generated_Source\PSoC4/CyLib.c **** 
2656:Generated_Source\PSoC4/CyLib.c **** 
2657:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2659:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2663:Generated_Source\PSoC4/CyLib.c **** *
2664:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2665:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2666:Generated_Source\PSoC4/CyLib.c **** {
 2119              		.loc 1 2666 0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 8
 2122              		@ frame_needed = 1, uses_anonymous_args = 0
 2123 0000 80B5     		push	{r7, lr}
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 7, -8
 2126              		.cfi_offset 14, -4
 2127 0002 82B0     		sub	sp, sp, #8
 2128              		.cfi_def_cfa_offset 16
 2129 0004 00AF     		add	r7, sp, #0
 2130              		.cfi_def_cfa_register 7
 2131 0006 0200     		movs	r2, r0
 2132 0008 BB1D     		adds	r3, r7, #6
 2133 000a 1A80     		strh	r2, [r3]
2667:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 2134              		.loc 1 2667 0
 2135 000c BB1D     		adds	r3, r7, #6
 2136 000e 1B88     		ldrh	r3, [r3]
 2137 0010 044A     		ldr	r2, .L130
 2138 0012 1278     		ldrb	r2, [r2]
 2139 0014 5343     		muls	r3, r2
 2140 0016 1800     		movs	r0, r3
 2141 0018 FFF7FEFF 		bl	CyDelayCycles
2668:Generated_Source\PSoC4/CyLib.c **** }
 2142              		.loc 1 2668 0
 2143 001c C046     		nop
 2144 001e BD46     		mov	sp, r7
 2145 0020 02B0     		add	sp, sp, #8
 2146              		@ sp needed
 2147 0022 80BD     		pop	{r7, pc}
 2148              	.L131:
 2149              		.align	2
 2150              	.L130:
 2151 0024 00000000 		.word	cydelayFreqMhz
 2152              		.cfi_endproc
 2153              	.LFE34:
 2154              		.size	CyDelayUs, .-CyDelayUs
 2155              		.global	__aeabi_uidiv
 2156              		.section	.text.CyDelayFreq,"ax",%progbits
 2157              		.align	2
 2158              		.global	CyDelayFreq
 2159              		.code	16
 2160              		.thumb_func
 2161              		.type	CyDelayFreq, %function
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 86


 2162              	CyDelayFreq:
 2163              	.LFB35:
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2672:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2673:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2674:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2675:Generated_Source\PSoC4/CyLib.c **** *
2676:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2677:Generated_Source\PSoC4/CyLib.c **** *
2678:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2679:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2680:Generated_Source\PSoC4/CyLib.c **** {
 2164              		.loc 1 2680 0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 8
 2167              		@ frame_needed = 1, uses_anonymous_args = 0
 2168 0000 80B5     		push	{r7, lr}
 2169              		.cfi_def_cfa_offset 8
 2170              		.cfi_offset 7, -8
 2171              		.cfi_offset 14, -4
 2172 0002 82B0     		sub	sp, sp, #8
 2173              		.cfi_def_cfa_offset 16
 2174 0004 00AF     		add	r7, sp, #0
 2175              		.cfi_def_cfa_register 7
 2176 0006 7860     		str	r0, [r7, #4]
2681:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 2177              		.loc 1 2681 0
 2178 0008 7B68     		ldr	r3, [r7, #4]
 2179 000a 002B     		cmp	r3, #0
 2180 000c 03D0     		beq	.L133
2682:Generated_Source\PSoC4/CyLib.c ****     {
2683:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 2181              		.loc 1 2683 0
 2182 000e 154B     		ldr	r3, .L135
 2183 0010 7A68     		ldr	r2, [r7, #4]
 2184 0012 1A60     		str	r2, [r3]
 2185 0014 02E0     		b	.L134
 2186              	.L133:
2684:Generated_Source\PSoC4/CyLib.c ****     }
2685:Generated_Source\PSoC4/CyLib.c ****     else
2686:Generated_Source\PSoC4/CyLib.c ****     {
2687:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2187              		.loc 1 2687 0
 2188 0016 134B     		ldr	r3, .L135
 2189 0018 134A     		ldr	r2, .L135+4
 2190 001a 1A60     		str	r2, [r3]
 2191              	.L134:
2688:Generated_Source\PSoC4/CyLib.c ****     }
2689:Generated_Source\PSoC4/CyLib.c **** 
2690:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2192              		.loc 1 2690 0
 2193 001c 114B     		ldr	r3, .L135
 2194 001e 1B68     		ldr	r3, [r3]
 2195 0020 124A     		ldr	r2, .L135+8
 2196 0022 9446     		mov	ip, r2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 87


 2197 0024 6344     		add	r3, r3, ip
 2198 0026 1249     		ldr	r1, .L135+12
 2199 0028 1800     		movs	r0, r3
 2200 002a FFF7FEFF 		bl	__aeabi_uidiv
 2201 002e 0300     		movs	r3, r0
 2202 0030 DAB2     		uxtb	r2, r3
 2203 0032 104B     		ldr	r3, .L135+16
 2204 0034 1A70     		strb	r2, [r3]
2691:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2205              		.loc 1 2691 0
 2206 0036 0B4B     		ldr	r3, .L135
 2207 0038 1B68     		ldr	r3, [r3]
 2208 003a 0F4A     		ldr	r2, .L135+20
 2209 003c 9A18     		adds	r2, r3, r2
 2210 003e FA23     		movs	r3, #250
 2211 0040 9900     		lsls	r1, r3, #2
 2212 0042 1000     		movs	r0, r2
 2213 0044 FFF7FEFF 		bl	__aeabi_uidiv
 2214 0048 0300     		movs	r3, r0
 2215 004a 1A00     		movs	r2, r3
 2216 004c 0B4B     		ldr	r3, .L135+24
 2217 004e 1A60     		str	r2, [r3]
2692:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2218              		.loc 1 2692 0
 2219 0050 0A4B     		ldr	r3, .L135+24
 2220 0052 1B68     		ldr	r3, [r3]
 2221 0054 DA03     		lsls	r2, r3, #15
 2222 0056 0A4B     		ldr	r3, .L135+28
 2223 0058 1A60     		str	r2, [r3]
2693:Generated_Source\PSoC4/CyLib.c **** }
 2224              		.loc 1 2693 0
 2225 005a C046     		nop
 2226 005c BD46     		mov	sp, r7
 2227 005e 02B0     		add	sp, sp, #8
 2228              		@ sp needed
 2229 0060 80BD     		pop	{r7, pc}
 2230              	.L136:
 2231 0062 C046     		.align	2
 2232              	.L135:
 2233 0064 00000000 		.word	cydelayFreqHz
 2234 0068 006CDC02 		.word	48000000
 2235 006c 3F420F00 		.word	999999
 2236 0070 40420F00 		.word	1000000
 2237 0074 00000000 		.word	cydelayFreqMhz
 2238 0078 E7030000 		.word	999
 2239 007c 00000000 		.word	cydelayFreqKhz
 2240 0080 00000000 		.word	cydelay32kMs
 2241              		.cfi_endproc
 2242              	.LFE35:
 2243              		.size	CyDelayFreq, .-CyDelayFreq
 2244              		.section	.text.CySysTickStart,"ax",%progbits
 2245              		.align	2
 2246              		.global	CySysTickStart
 2247              		.code	16
 2248              		.thumb_func
 2249              		.type	CySysTickStart, %function
 2250              	CySysTickStart:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 88


 2251              	.LFB36:
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** 
2696:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2697:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2698:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2701:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2704:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2705:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2706:Generated_Source\PSoC4/CyLib.c **** *
2707:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2708:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2709:Generated_Source\PSoC4/CyLib.c **** *
2710:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2712:Generated_Source\PSoC4/CyLib.c **** {
 2252              		.loc 1 2712 0
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 0
 2255              		@ frame_needed = 1, uses_anonymous_args = 0
 2256 0000 80B5     		push	{r7, lr}
 2257              		.cfi_def_cfa_offset 8
 2258              		.cfi_offset 7, -8
 2259              		.cfi_offset 14, -4
 2260 0002 00AF     		add	r7, sp, #0
 2261              		.cfi_def_cfa_register 7
2713:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2262              		.loc 1 2713 0
 2263 0004 064B     		ldr	r3, .L139
 2264 0006 1B68     		ldr	r3, [r3]
 2265 0008 002B     		cmp	r3, #0
 2266 000a 04D1     		bne	.L138
2714:Generated_Source\PSoC4/CyLib.c ****     {
2715:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2267              		.loc 1 2715 0
 2268 000c FFF7FEFF 		bl	CySysTickInit
2716:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2269              		.loc 1 2716 0
 2270 0010 034B     		ldr	r3, .L139
 2271 0012 0122     		movs	r2, #1
 2272 0014 1A60     		str	r2, [r3]
 2273              	.L138:
2717:Generated_Source\PSoC4/CyLib.c ****     }
2718:Generated_Source\PSoC4/CyLib.c **** 
2719:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2274              		.loc 1 2719 0
 2275 0016 FFF7FEFF 		bl	CySysTickEnable
2720:Generated_Source\PSoC4/CyLib.c **** }
 2276              		.loc 1 2720 0
 2277 001a C046     		nop
 2278 001c BD46     		mov	sp, r7
 2279              		@ sp needed
 2280 001e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 89


 2281              	.L140:
 2282              		.align	2
 2283              	.L139:
 2284 0020 00000000 		.word	CySysTickInitVar
 2285              		.cfi_endproc
 2286              	.LFE36:
 2287              		.size	CySysTickStart, .-CySysTickStart
 2288              		.section	.text.CySysTickInit,"ax",%progbits
 2289              		.align	2
 2290              		.global	CySysTickInit
 2291              		.code	16
 2292              		.thumb_func
 2293              		.type	CySysTickInit, %function
 2294              	CySysTickInit:
 2295              	.LFB37:
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** 
2723:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2724:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2725:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2728:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2729:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2730:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2733:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2734:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2737:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2740:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2741:Generated_Source\PSoC4/CyLib.c **** {
 2296              		.loc 1 2741 0
 2297              		.cfi_startproc
 2298              		@ args = 0, pretend = 0, frame = 8
 2299              		@ frame_needed = 1, uses_anonymous_args = 0
 2300 0000 80B5     		push	{r7, lr}
 2301              		.cfi_def_cfa_offset 8
 2302              		.cfi_offset 7, -8
 2303              		.cfi_offset 14, -4
 2304 0002 82B0     		sub	sp, sp, #8
 2305              		.cfi_def_cfa_offset 16
 2306 0004 00AF     		add	r7, sp, #0
 2307              		.cfi_def_cfa_register 7
2742:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2743:Generated_Source\PSoC4/CyLib.c **** 
2744:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2308              		.loc 1 2744 0
 2309 0006 0023     		movs	r3, #0
 2310 0008 7B60     		str	r3, [r7, #4]
 2311 000a 07E0     		b	.L142
 2312              	.L143:
2745:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 90


2746:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2313              		.loc 1 2746 0 discriminator 3
 2314 000c 114B     		ldr	r3, .L144
 2315 000e 7A68     		ldr	r2, [r7, #4]
 2316 0010 9200     		lsls	r2, r2, #2
 2317 0012 0021     		movs	r1, #0
 2318 0014 D150     		str	r1, [r2, r3]
2744:Generated_Source\PSoC4/CyLib.c ****     {
 2319              		.loc 1 2744 0 discriminator 3
 2320 0016 7B68     		ldr	r3, [r7, #4]
 2321 0018 0133     		adds	r3, r3, #1
 2322 001a 7B60     		str	r3, [r7, #4]
 2323              	.L142:
2744:Generated_Source\PSoC4/CyLib.c ****     {
 2324              		.loc 1 2744 0 is_stmt 0 discriminator 1
 2325 001c 7B68     		ldr	r3, [r7, #4]
 2326 001e 042B     		cmp	r3, #4
 2327 0020 F4D9     		bls	.L143
2747:Generated_Source\PSoC4/CyLib.c ****     }
2748:Generated_Source\PSoC4/CyLib.c **** 
2749:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2328              		.loc 1 2749 0 is_stmt 1
 2329 0022 0D4B     		ldr	r3, .L144+4
 2330 0024 1900     		movs	r1, r3
 2331 0026 0F20     		movs	r0, #15
 2332 0028 FFF7FEFF 		bl	CyIntSetSysVector
2750:Generated_Source\PSoC4/CyLib.c **** 
2751:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2752:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2333              		.loc 1 2752 0
 2334 002c 0120     		movs	r0, #1
 2335 002e FFF7FEFF 		bl	CySysTickSetClockSource
2753:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2336              		.loc 1 2755 0
 2337 0032 0A4B     		ldr	r3, .L144+8
 2338 0034 1A68     		ldr	r2, [r3]
 2339 0036 FA23     		movs	r3, #250
 2340 0038 9900     		lsls	r1, r3, #2
 2341 003a 1000     		movs	r0, r2
 2342 003c FFF7FEFF 		bl	__aeabi_uidiv
 2343 0040 0300     		movs	r3, r0
 2344 0042 1800     		movs	r0, r3
 2345 0044 FFF7FEFF 		bl	CySysTickSetReload
2756:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2346              		.loc 1 2756 0
 2347 0048 FFF7FEFF 		bl	CySysTickClear
2757:Generated_Source\PSoC4/CyLib.c **** }
 2348              		.loc 1 2757 0
 2349 004c C046     		nop
 2350 004e BD46     		mov	sp, r7
 2351 0050 02B0     		add	sp, sp, #8
 2352              		@ sp needed
 2353 0052 80BD     		pop	{r7, pc}
 2354              	.L145:
 2355              		.align	2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 91


 2356              	.L144:
 2357 0054 00000000 		.word	CySysTickCallbacks
 2358 0058 00000000 		.word	CySysTickServiceCallbacks
 2359 005c 00000000 		.word	cydelayFreqHz
 2360              		.cfi_endproc
 2361              	.LFE37:
 2362              		.size	CySysTickInit, .-CySysTickInit
 2363              		.section	.text.CySysTickEnable,"ax",%progbits
 2364              		.align	2
 2365              		.global	CySysTickEnable
 2366              		.code	16
 2367              		.thumb_func
 2368              		.type	CySysTickEnable, %function
 2369              	CySysTickEnable:
 2370              	.LFB38:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2767:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 2371              		.loc 1 2771 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 1, uses_anonymous_args = 0
 2375 0000 80B5     		push	{r7, lr}
 2376              		.cfi_def_cfa_offset 8
 2377              		.cfi_offset 7, -8
 2378              		.cfi_offset 14, -4
 2379 0002 00AF     		add	r7, sp, #0
 2380              		.cfi_def_cfa_register 7
2772:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2381              		.loc 1 2772 0
 2382 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2773:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2383              		.loc 1 2773 0
 2384 0008 044B     		ldr	r3, .L147
 2385 000a 044A     		ldr	r2, .L147
 2386 000c 1268     		ldr	r2, [r2]
 2387 000e 0121     		movs	r1, #1
 2388 0010 0A43     		orrs	r2, r1
 2389 0012 1A60     		str	r2, [r3]
2774:Generated_Source\PSoC4/CyLib.c **** }
 2390              		.loc 1 2774 0
 2391 0014 C046     		nop
 2392 0016 BD46     		mov	sp, r7
 2393              		@ sp needed
 2394 0018 80BD     		pop	{r7, pc}
 2395              	.L148:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 92


 2396 001a C046     		.align	2
 2397              	.L147:
 2398 001c 10E000E0 		.word	-536813552
 2399              		.cfi_endproc
 2400              	.LFE38:
 2401              		.size	CySysTickEnable, .-CySysTickEnable
 2402              		.section	.text.CySysTickStop,"ax",%progbits
 2403              		.align	2
 2404              		.global	CySysTickStop
 2405              		.code	16
 2406              		.thumb_func
 2407              		.type	CySysTickStop, %function
 2408              	CySysTickStop:
 2409              	.LFB39:
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** 
2777:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2778:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2779:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2782:Generated_Source\PSoC4/CyLib.c **** *
2783:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2784:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2785:Generated_Source\PSoC4/CyLib.c **** *
2786:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2787:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2788:Generated_Source\PSoC4/CyLib.c **** {
 2410              		.loc 1 2788 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 1, uses_anonymous_args = 0
 2414 0000 80B5     		push	{r7, lr}
 2415              		.cfi_def_cfa_offset 8
 2416              		.cfi_offset 7, -8
 2417              		.cfi_offset 14, -4
 2418 0002 00AF     		add	r7, sp, #0
 2419              		.cfi_def_cfa_register 7
2789:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2420              		.loc 1 2789 0
 2421 0004 044B     		ldr	r3, .L150
 2422 0006 044A     		ldr	r2, .L150
 2423 0008 1268     		ldr	r2, [r2]
 2424 000a 0121     		movs	r1, #1
 2425 000c 8A43     		bics	r2, r1
 2426 000e 1A60     		str	r2, [r3]
2790:Generated_Source\PSoC4/CyLib.c **** }
 2427              		.loc 1 2790 0
 2428 0010 C046     		nop
 2429 0012 BD46     		mov	sp, r7
 2430              		@ sp needed
 2431 0014 80BD     		pop	{r7, pc}
 2432              	.L151:
 2433 0016 C046     		.align	2
 2434              	.L150:
 2435 0018 10E000E0 		.word	-536813552
 2436              		.cfi_endproc
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 93


 2437              	.LFE39:
 2438              		.size	CySysTickStop, .-CySysTickStop
 2439              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2440              		.align	2
 2441              		.global	CySysTickEnableInterrupt
 2442              		.code	16
 2443              		.thumb_func
 2444              		.type	CySysTickEnableInterrupt, %function
 2445              	CySysTickEnableInterrupt:
 2446              	.LFB40:
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** 
2793:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2795:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2798:Generated_Source\PSoC4/CyLib.c **** *
2799:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2800:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2801:Generated_Source\PSoC4/CyLib.c **** *
2802:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2803:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2804:Generated_Source\PSoC4/CyLib.c **** {
 2447              		.loc 1 2804 0
 2448              		.cfi_startproc
 2449              		@ args = 0, pretend = 0, frame = 0
 2450              		@ frame_needed = 1, uses_anonymous_args = 0
 2451 0000 80B5     		push	{r7, lr}
 2452              		.cfi_def_cfa_offset 8
 2453              		.cfi_offset 7, -8
 2454              		.cfi_offset 14, -4
 2455 0002 00AF     		add	r7, sp, #0
 2456              		.cfi_def_cfa_register 7
2805:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2457              		.loc 1 2805 0
 2458 0004 044B     		ldr	r3, .L153
 2459 0006 044A     		ldr	r2, .L153
 2460 0008 1268     		ldr	r2, [r2]
 2461 000a 0221     		movs	r1, #2
 2462 000c 0A43     		orrs	r2, r1
 2463 000e 1A60     		str	r2, [r3]
2806:Generated_Source\PSoC4/CyLib.c **** }
 2464              		.loc 1 2806 0
 2465 0010 C046     		nop
 2466 0012 BD46     		mov	sp, r7
 2467              		@ sp needed
 2468 0014 80BD     		pop	{r7, pc}
 2469              	.L154:
 2470 0016 C046     		.align	2
 2471              	.L153:
 2472 0018 10E000E0 		.word	-536813552
 2473              		.cfi_endproc
 2474              	.LFE40:
 2475              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2476              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2477              		.align	2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 94


 2478              		.global	CySysTickDisableInterrupt
 2479              		.code	16
 2480              		.thumb_func
 2481              		.type	CySysTickDisableInterrupt, %function
 2482              	CySysTickDisableInterrupt:
 2483              	.LFB41:
2807:Generated_Source\PSoC4/CyLib.c **** 
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2810:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2811:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2812:Generated_Source\PSoC4/CyLib.c **** *
2813:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2814:Generated_Source\PSoC4/CyLib.c **** *
2815:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2816:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2819:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2820:Generated_Source\PSoC4/CyLib.c **** {
 2484              		.loc 1 2820 0
 2485              		.cfi_startproc
 2486              		@ args = 0, pretend = 0, frame = 0
 2487              		@ frame_needed = 1, uses_anonymous_args = 0
 2488 0000 80B5     		push	{r7, lr}
 2489              		.cfi_def_cfa_offset 8
 2490              		.cfi_offset 7, -8
 2491              		.cfi_offset 14, -4
 2492 0002 00AF     		add	r7, sp, #0
 2493              		.cfi_def_cfa_register 7
2821:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2494              		.loc 1 2821 0
 2495 0004 044B     		ldr	r3, .L156
 2496 0006 044A     		ldr	r2, .L156
 2497 0008 1268     		ldr	r2, [r2]
 2498 000a 0221     		movs	r1, #2
 2499 000c 8A43     		bics	r2, r1
 2500 000e 1A60     		str	r2, [r3]
2822:Generated_Source\PSoC4/CyLib.c **** }
 2501              		.loc 1 2822 0
 2502 0010 C046     		nop
 2503 0012 BD46     		mov	sp, r7
 2504              		@ sp needed
 2505 0014 80BD     		pop	{r7, pc}
 2506              	.L157:
 2507 0016 C046     		.align	2
 2508              	.L156:
 2509 0018 10E000E0 		.word	-536813552
 2510              		.cfi_endproc
 2511              	.LFE41:
 2512              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2513              		.section	.text.CySysTickSetReload,"ax",%progbits
 2514              		.align	2
 2515              		.global	CySysTickSetReload
 2516              		.code	16
 2517              		.thumb_func
 2518              		.type	CySysTickSetReload, %function
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 95


 2519              	CySysTickSetReload:
 2520              	.LFB42:
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2830:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2831:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2832:Generated_Source\PSoC4/CyLib.c **** *
2833:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2834:Generated_Source\PSoC4/CyLib.c **** *
2835:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2836:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2837:Generated_Source\PSoC4/CyLib.c **** {
 2521              		.loc 1 2837 0
 2522              		.cfi_startproc
 2523              		@ args = 0, pretend = 0, frame = 8
 2524              		@ frame_needed = 1, uses_anonymous_args = 0
 2525 0000 80B5     		push	{r7, lr}
 2526              		.cfi_def_cfa_offset 8
 2527              		.cfi_offset 7, -8
 2528              		.cfi_offset 14, -4
 2529 0002 82B0     		sub	sp, sp, #8
 2530              		.cfi_def_cfa_offset 16
 2531 0004 00AF     		add	r7, sp, #0
 2532              		.cfi_def_cfa_register 7
 2533 0006 7860     		str	r0, [r7, #4]
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2534              		.loc 1 2838 0
 2535 0008 044B     		ldr	r3, .L159
 2536 000a 7A68     		ldr	r2, [r7, #4]
 2537 000c 1202     		lsls	r2, r2, #8
 2538 000e 120A     		lsrs	r2, r2, #8
 2539 0010 1A60     		str	r2, [r3]
2839:Generated_Source\PSoC4/CyLib.c **** }
 2540              		.loc 1 2839 0
 2541 0012 C046     		nop
 2542 0014 BD46     		mov	sp, r7
 2543 0016 02B0     		add	sp, sp, #8
 2544              		@ sp needed
 2545 0018 80BD     		pop	{r7, pc}
 2546              	.L160:
 2547 001a C046     		.align	2
 2548              	.L159:
 2549 001c 14E000E0 		.word	-536813548
 2550              		.cfi_endproc
 2551              	.LFE42:
 2552              		.size	CySysTickSetReload, .-CySysTickSetReload
 2553              		.section	.text.CySysTickGetReload,"ax",%progbits
 2554              		.align	2
 2555              		.global	CySysTickGetReload
 2556              		.code	16
 2557              		.thumb_func
 2558              		.type	CySysTickGetReload, %function
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 96


 2559              	CySysTickGetReload:
 2560              	.LFB43:
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \return
2849:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
 2561              		.loc 1 2853 0
 2562              		.cfi_startproc
 2563              		@ args = 0, pretend = 0, frame = 0
 2564              		@ frame_needed = 1, uses_anonymous_args = 0
 2565 0000 80B5     		push	{r7, lr}
 2566              		.cfi_def_cfa_offset 8
 2567              		.cfi_offset 7, -8
 2568              		.cfi_offset 14, -4
 2569 0002 00AF     		add	r7, sp, #0
 2570              		.cfi_def_cfa_register 7
2854:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2571              		.loc 1 2854 0
 2572 0004 034B     		ldr	r3, .L163
 2573 0006 1B68     		ldr	r3, [r3]
 2574 0008 1B02     		lsls	r3, r3, #8
 2575 000a 1B0A     		lsrs	r3, r3, #8
2855:Generated_Source\PSoC4/CyLib.c **** }
 2576              		.loc 1 2855 0
 2577 000c 1800     		movs	r0, r3
 2578 000e BD46     		mov	sp, r7
 2579              		@ sp needed
 2580 0010 80BD     		pop	{r7, pc}
 2581              	.L164:
 2582 0012 C046     		.align	2
 2583              	.L163:
 2584 0014 14E000E0 		.word	-536813548
 2585              		.cfi_endproc
 2586              	.LFE43:
 2587              		.size	CySysTickGetReload, .-CySysTickGetReload
 2588              		.section	.text.CySysTickGetValue,"ax",%progbits
 2589              		.align	2
 2590              		.global	CySysTickGetValue
 2591              		.code	16
 2592              		.thumb_func
 2593              		.type	CySysTickGetValue, %function
 2594              	CySysTickGetValue:
 2595              	.LFB44:
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 97


2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \return
2865:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
 2596              		.loc 1 2869 0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 0
 2599              		@ frame_needed = 1, uses_anonymous_args = 0
 2600 0000 80B5     		push	{r7, lr}
 2601              		.cfi_def_cfa_offset 8
 2602              		.cfi_offset 7, -8
 2603              		.cfi_offset 14, -4
 2604 0002 00AF     		add	r7, sp, #0
 2605              		.cfi_def_cfa_register 7
2870:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2606              		.loc 1 2870 0
 2607 0004 034B     		ldr	r3, .L167
 2608 0006 1B68     		ldr	r3, [r3]
 2609 0008 1B02     		lsls	r3, r3, #8
 2610 000a 1B0A     		lsrs	r3, r3, #8
2871:Generated_Source\PSoC4/CyLib.c **** }
 2611              		.loc 1 2871 0
 2612 000c 1800     		movs	r0, r3
 2613 000e BD46     		mov	sp, r7
 2614              		@ sp needed
 2615 0010 80BD     		pop	{r7, pc}
 2616              	.L168:
 2617 0012 C046     		.align	2
 2618              	.L167:
 2619 0014 18E000E0 		.word	-536813544
 2620              		.cfi_endproc
 2621              	.LFE44:
 2622              		.size	CySysTickGetValue, .-CySysTickGetValue
 2623              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2624              		.align	2
 2625              		.global	CySysTickSetClockSource
 2626              		.code	16
 2627              		.thumb_func
 2628              		.type	CySysTickSetClockSource, %function
 2629              	CySysTickSetClockSource:
 2630              	.LFB45:
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2875:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2876:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2877:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2878:Generated_Source\PSoC4/CyLib.c ****     *
2879:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2880:Generated_Source\PSoC4/CyLib.c ****     *
2881:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 98


2882:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2883:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2884:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2885:Generated_Source\PSoC4/CyLib.c ****     *
2886:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2887:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2888:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2889:Generated_Source\PSoC4/CyLib.c ****     *
2890:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2891:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2892:Generated_Source\PSoC4/CyLib.c ****     *
2893:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2894:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2895:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2896:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2897:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2898:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2899:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2900:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2901:Generated_Source\PSoC4/CyLib.c ****     {
 2631              		.loc 1 2901 0
 2632              		.cfi_startproc
 2633              		@ args = 0, pretend = 0, frame = 8
 2634              		@ frame_needed = 1, uses_anonymous_args = 0
 2635 0000 80B5     		push	{r7, lr}
 2636              		.cfi_def_cfa_offset 8
 2637              		.cfi_offset 7, -8
 2638              		.cfi_offset 14, -4
 2639 0002 82B0     		sub	sp, sp, #8
 2640              		.cfi_def_cfa_offset 16
 2641 0004 00AF     		add	r7, sp, #0
 2642              		.cfi_def_cfa_register 7
 2643 0006 7860     		str	r0, [r7, #4]
2902:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2644              		.loc 1 2902 0
 2645 0008 7B68     		ldr	r3, [r7, #4]
 2646 000a 012B     		cmp	r3, #1
 2647 000c 06D1     		bne	.L170
2903:Generated_Source\PSoC4/CyLib.c ****         {
2904:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2648              		.loc 1 2904 0
 2649 000e 084B     		ldr	r3, .L173
 2650 0010 074A     		ldr	r2, .L173
 2651 0012 1268     		ldr	r2, [r2]
 2652 0014 0421     		movs	r1, #4
 2653 0016 0A43     		orrs	r2, r1
 2654 0018 1A60     		str	r2, [r3]
2905:Generated_Source\PSoC4/CyLib.c ****         }
2906:Generated_Source\PSoC4/CyLib.c ****         else
2907:Generated_Source\PSoC4/CyLib.c ****         {
2908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2909:Generated_Source\PSoC4/CyLib.c ****         }
2910:Generated_Source\PSoC4/CyLib.c ****     }
 2655              		.loc 1 2910 0
 2656 001a 05E0     		b	.L172
 2657              	.L170:
2908:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 99


 2658              		.loc 1 2908 0
 2659 001c 044B     		ldr	r3, .L173
 2660 001e 044A     		ldr	r2, .L173
 2661 0020 1268     		ldr	r2, [r2]
 2662 0022 0421     		movs	r1, #4
 2663 0024 8A43     		bics	r2, r1
 2664 0026 1A60     		str	r2, [r3]
 2665              	.L172:
 2666              		.loc 1 2910 0
 2667 0028 C046     		nop
 2668 002a BD46     		mov	sp, r7
 2669 002c 02B0     		add	sp, sp, #8
 2670              		@ sp needed
 2671 002e 80BD     		pop	{r7, pc}
 2672              	.L174:
 2673              		.align	2
 2674              	.L173:
 2675 0030 10E000E0 		.word	-536813552
 2676              		.cfi_endproc
 2677              	.LFE45:
 2678              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2679              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2680              		.align	2
 2681              		.global	CySysTickGetClockSource
 2682              		.code	16
 2683              		.thumb_func
 2684              		.type	CySysTickGetClockSource, %function
 2685              	CySysTickGetClockSource:
 2686              	.LFB46:
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c ****     
2913:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2914:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2915:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2916:Generated_Source\PSoC4/CyLib.c ****     *
2917:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2918:Generated_Source\PSoC4/CyLib.c ****     *
2919:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2920:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2921:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2922:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2923:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2924:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2925:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2926:Generated_Source\PSoC4/CyLib.c ****     {
 2687              		.loc 1 2926 0
 2688              		.cfi_startproc
 2689              		@ args = 0, pretend = 0, frame = 0
 2690              		@ frame_needed = 1, uses_anonymous_args = 0
 2691 0000 80B5     		push	{r7, lr}
 2692              		.cfi_def_cfa_offset 8
 2693              		.cfi_offset 7, -8
 2694              		.cfi_offset 14, -4
 2695 0002 00AF     		add	r7, sp, #0
 2696              		.cfi_def_cfa_register 7
2927:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2697              		.loc 1 2927 0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 100


 2698 0004 034B     		ldr	r3, .L177
 2699 0006 1B68     		ldr	r3, [r3]
 2700 0008 9B08     		lsrs	r3, r3, #2
 2701 000a 0122     		movs	r2, #1
 2702 000c 1340     		ands	r3, r2
2928:Generated_Source\PSoC4/CyLib.c ****     }
 2703              		.loc 1 2928 0
 2704 000e 1800     		movs	r0, r3
 2705 0010 BD46     		mov	sp, r7
 2706              		@ sp needed
 2707 0012 80BD     		pop	{r7, pc}
 2708              	.L178:
 2709              		.align	2
 2710              	.L177:
 2711 0014 10E000E0 		.word	-536813552
 2712              		.cfi_endproc
 2713              	.LFE46:
 2714              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2715              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2716              		.align	2
 2717              		.global	CySysTickGetCountFlag
 2718              		.code	16
 2719              		.thumb_func
 2720              		.type	CySysTickGetCountFlag, %function
 2721              	CySysTickGetCountFlag:
 2722              	.LFB47:
2929:Generated_Source\PSoC4/CyLib.c ****     
2930:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c **** 
2933:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2934:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2935:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2938:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2939:Generated_Source\PSoC4/CyLib.c **** *
2940:Generated_Source\PSoC4/CyLib.c **** * \return
2941:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2942:Generated_Source\PSoC4/CyLib.c **** *
2943:Generated_Source\PSoC4/CyLib.c **** *
2944:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2945:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2948:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2949:Generated_Source\PSoC4/CyLib.c **** {
 2723              		.loc 1 2949 0
 2724              		.cfi_startproc
 2725              		@ args = 0, pretend = 0, frame = 0
 2726              		@ frame_needed = 1, uses_anonymous_args = 0
 2727 0000 80B5     		push	{r7, lr}
 2728              		.cfi_def_cfa_offset 8
 2729              		.cfi_offset 7, -8
 2730              		.cfi_offset 14, -4
 2731 0002 00AF     		add	r7, sp, #0
 2732              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 101


2950:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2733              		.loc 1 2950 0
 2734 0004 034B     		ldr	r3, .L181
 2735 0006 1B68     		ldr	r3, [r3]
 2736 0008 1B0C     		lsrs	r3, r3, #16
 2737 000a 0122     		movs	r2, #1
 2738 000c 1340     		ands	r3, r2
2951:Generated_Source\PSoC4/CyLib.c **** }
 2739              		.loc 1 2951 0
 2740 000e 1800     		movs	r0, r3
 2741 0010 BD46     		mov	sp, r7
 2742              		@ sp needed
 2743 0012 80BD     		pop	{r7, pc}
 2744              	.L182:
 2745              		.align	2
 2746              	.L181:
 2747 0014 10E000E0 		.word	-536813552
 2748              		.cfi_endproc
 2749              	.LFE47:
 2750              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2751              		.section	.text.CySysTickClear,"ax",%progbits
 2752              		.align	2
 2753              		.global	CySysTickClear
 2754              		.code	16
 2755              		.thumb_func
 2756              		.type	CySysTickClear, %function
 2757              	CySysTickClear:
 2758              	.LFB48:
2952:Generated_Source\PSoC4/CyLib.c **** 
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2955:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2956:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2957:Generated_Source\PSoC4/CyLib.c **** *
2958:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2959:Generated_Source\PSoC4/CyLib.c **** *
2960:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2961:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2962:Generated_Source\PSoC4/CyLib.c **** {
 2759              		.loc 1 2962 0
 2760              		.cfi_startproc
 2761              		@ args = 0, pretend = 0, frame = 0
 2762              		@ frame_needed = 1, uses_anonymous_args = 0
 2763 0000 80B5     		push	{r7, lr}
 2764              		.cfi_def_cfa_offset 8
 2765              		.cfi_offset 7, -8
 2766              		.cfi_offset 14, -4
 2767 0002 00AF     		add	r7, sp, #0
 2768              		.cfi_def_cfa_register 7
2963:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2769              		.loc 1 2963 0
 2770 0004 024B     		ldr	r3, .L184
 2771 0006 0022     		movs	r2, #0
 2772 0008 1A60     		str	r2, [r3]
2964:Generated_Source\PSoC4/CyLib.c **** }
 2773              		.loc 1 2964 0
 2774 000a C046     		nop
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 102


 2775 000c BD46     		mov	sp, r7
 2776              		@ sp needed
 2777 000e 80BD     		pop	{r7, pc}
 2778              	.L185:
 2779              		.align	2
 2780              	.L184:
 2781 0010 18E000E0 		.word	-536813544
 2782              		.cfi_endproc
 2783              	.LFE48:
 2784              		.size	CySysTickClear, .-CySysTickClear
 2785              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2786              		.align	2
 2787              		.global	CySysTickSetCallback
 2788              		.code	16
 2789              		.thumb_func
 2790              		.type	CySysTickSetCallback, %function
 2791              	CySysTickSetCallback:
 2792              	.LFB49:
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2968:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2969:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2970:Generated_Source\PSoC4/CyLib.c **** *
2971:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2972:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2973:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2974:Generated_Source\PSoC4/CyLib.c **** *
2975:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2976:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2977:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2978:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2979:Generated_Source\PSoC4/CyLib.c **** *  functions.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2982:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2983:Generated_Source\PSoC4/CyLib.c **** *
2984:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2985:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2986:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2987:Generated_Source\PSoC4/CyLib.c **** *
2988:Generated_Source\PSoC4/CyLib.c **** * \return
2989:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2990:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2991:Generated_Source\PSoC4/CyLib.c **** *
2992:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2993:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2996:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2997:Generated_Source\PSoC4/CyLib.c **** {
 2793              		.loc 1 2997 0
 2794              		.cfi_startproc
 2795              		@ args = 0, pretend = 0, frame = 16
 2796              		@ frame_needed = 1, uses_anonymous_args = 0
 2797 0000 80B5     		push	{r7, lr}
 2798              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 103


 2799              		.cfi_offset 7, -8
 2800              		.cfi_offset 14, -4
 2801 0002 84B0     		sub	sp, sp, #16
 2802              		.cfi_def_cfa_offset 24
 2803 0004 00AF     		add	r7, sp, #0
 2804              		.cfi_def_cfa_register 7
 2805 0006 7860     		str	r0, [r7, #4]
 2806 0008 3960     		str	r1, [r7]
2998:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2807              		.loc 1 3000 0
 2808 000a 074B     		ldr	r3, .L188
 2809 000c 7A68     		ldr	r2, [r7, #4]
 2810 000e 9200     		lsls	r2, r2, #2
 2811 0010 D358     		ldr	r3, [r2, r3]
 2812 0012 FB60     		str	r3, [r7, #12]
3001:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2813              		.loc 1 3001 0
 2814 0014 044B     		ldr	r3, .L188
 2815 0016 7A68     		ldr	r2, [r7, #4]
 2816 0018 9200     		lsls	r2, r2, #2
 2817 001a 3968     		ldr	r1, [r7]
 2818 001c D150     		str	r1, [r2, r3]
3002:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2819              		.loc 1 3002 0
 2820 001e FB68     		ldr	r3, [r7, #12]
3003:Generated_Source\PSoC4/CyLib.c **** }
 2821              		.loc 1 3003 0
 2822 0020 1800     		movs	r0, r3
 2823 0022 BD46     		mov	sp, r7
 2824 0024 04B0     		add	sp, sp, #16
 2825              		@ sp needed
 2826 0026 80BD     		pop	{r7, pc}
 2827              	.L189:
 2828              		.align	2
 2829              	.L188:
 2830 0028 00000000 		.word	CySysTickCallbacks
 2831              		.cfi_endproc
 2832              	.LFE49:
 2833              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2834              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2835              		.align	2
 2836              		.global	CySysTickGetCallback
 2837              		.code	16
 2838              		.thumb_func
 2839              		.type	CySysTickGetCallback, %function
 2840              	CySysTickGetCallback:
 2841              	.LFB50:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3011:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 104


3012:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3013:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3014:Generated_Source\PSoC4/CyLib.c **** *
3015:Generated_Source\PSoC4/CyLib.c **** * \return
3016:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3017:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3018:Generated_Source\PSoC4/CyLib.c **** *
3019:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3020:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3021:Generated_Source\PSoC4/CyLib.c **** {
 2842              		.loc 1 3021 0
 2843              		.cfi_startproc
 2844              		@ args = 0, pretend = 0, frame = 8
 2845              		@ frame_needed = 1, uses_anonymous_args = 0
 2846 0000 80B5     		push	{r7, lr}
 2847              		.cfi_def_cfa_offset 8
 2848              		.cfi_offset 7, -8
 2849              		.cfi_offset 14, -4
 2850 0002 82B0     		sub	sp, sp, #8
 2851              		.cfi_def_cfa_offset 16
 2852 0004 00AF     		add	r7, sp, #0
 2853              		.cfi_def_cfa_register 7
 2854 0006 7860     		str	r0, [r7, #4]
3022:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2855              		.loc 1 3022 0
 2856 0008 034B     		ldr	r3, .L192
 2857 000a 7A68     		ldr	r2, [r7, #4]
 2858 000c 9200     		lsls	r2, r2, #2
 2859 000e D358     		ldr	r3, [r2, r3]
3023:Generated_Source\PSoC4/CyLib.c **** }
 2860              		.loc 1 3023 0
 2861 0010 1800     		movs	r0, r3
 2862 0012 BD46     		mov	sp, r7
 2863 0014 02B0     		add	sp, sp, #8
 2864              		@ sp needed
 2865 0016 80BD     		pop	{r7, pc}
 2866              	.L193:
 2867              		.align	2
 2868              	.L192:
 2869 0018 00000000 		.word	CySysTickCallbacks
 2870              		.cfi_endproc
 2871              	.LFE50:
 2872              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2873              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2874              		.align	2
 2875              		.code	16
 2876              		.thumb_func
 2877              		.type	CySysTickServiceCallbacks, %function
 2878              	CySysTickServiceCallbacks:
 2879              	.LFB51:
3024:Generated_Source\PSoC4/CyLib.c **** 
3025:Generated_Source\PSoC4/CyLib.c **** 
3026:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3027:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3028:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3029:Generated_Source\PSoC4/CyLib.c **** *
3030:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 105


3031:Generated_Source\PSoC4/CyLib.c **** *
3032:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3033:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3034:Generated_Source\PSoC4/CyLib.c **** {
 2880              		.loc 1 3034 0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 8
 2883              		@ frame_needed = 1, uses_anonymous_args = 0
 2884 0000 80B5     		push	{r7, lr}
 2885              		.cfi_def_cfa_offset 8
 2886              		.cfi_offset 7, -8
 2887              		.cfi_offset 14, -4
 2888 0002 82B0     		sub	sp, sp, #8
 2889              		.cfi_def_cfa_offset 16
 2890 0004 00AF     		add	r7, sp, #0
 2891              		.cfi_def_cfa_register 7
3035:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3038:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2892              		.loc 1 3038 0
 2893 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2894 000a 0300     		movs	r3, r0
 2895 000c 012B     		cmp	r3, #1
 2896 000e 13D1     		bne	.L199
3039:Generated_Source\PSoC4/CyLib.c ****     {
3040:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2897              		.loc 1 3040 0
 2898 0010 0023     		movs	r3, #0
 2899 0012 7B60     		str	r3, [r7, #4]
 2900 0014 0DE0     		b	.L196
 2901              	.L198:
3041:Generated_Source\PSoC4/CyLib.c ****         {
3042:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2902              		.loc 1 3042 0
 2903 0016 0A4B     		ldr	r3, .L200
 2904 0018 7A68     		ldr	r2, [r7, #4]
 2905 001a 9200     		lsls	r2, r2, #2
 2906 001c D358     		ldr	r3, [r2, r3]
 2907 001e 002B     		cmp	r3, #0
 2908 0020 04D0     		beq	.L197
3043:Generated_Source\PSoC4/CyLib.c ****             {
3044:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2909              		.loc 1 3044 0
 2910 0022 074B     		ldr	r3, .L200
 2911 0024 7A68     		ldr	r2, [r7, #4]
 2912 0026 9200     		lsls	r2, r2, #2
 2913 0028 D358     		ldr	r3, [r2, r3]
 2914 002a 9847     		blx	r3
 2915              	.L197:
3040:Generated_Source\PSoC4/CyLib.c ****         {
 2916              		.loc 1 3040 0 discriminator 2
 2917 002c 7B68     		ldr	r3, [r7, #4]
 2918 002e 0133     		adds	r3, r3, #1
 2919 0030 7B60     		str	r3, [r7, #4]
 2920              	.L196:
3040:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 106


 2921              		.loc 1 3040 0 is_stmt 0 discriminator 1
 2922 0032 7B68     		ldr	r3, [r7, #4]
 2923 0034 042B     		cmp	r3, #4
 2924 0036 EED9     		bls	.L198
 2925              	.L199:
3045:Generated_Source\PSoC4/CyLib.c ****             }
3046:Generated_Source\PSoC4/CyLib.c ****         }
3047:Generated_Source\PSoC4/CyLib.c ****     }
3048:Generated_Source\PSoC4/CyLib.c **** }
 2926              		.loc 1 3048 0 is_stmt 1
 2927 0038 C046     		nop
 2928 003a BD46     		mov	sp, r7
 2929 003c 02B0     		add	sp, sp, #8
 2930              		@ sp needed
 2931 003e 80BD     		pop	{r7, pc}
 2932              	.L201:
 2933              		.align	2
 2934              	.L200:
 2935 0040 00000000 		.word	CySysTickCallbacks
 2936              		.cfi_endproc
 2937              	.LFE51:
 2938              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2939              		.section	.text.CyGetUniqueId,"ax",%progbits
 2940              		.align	2
 2941              		.global	CyGetUniqueId
 2942              		.code	16
 2943              		.thumb_func
 2944              		.type	CyGetUniqueId, %function
 2945              	CyGetUniqueId:
 2946              	.LFB52:
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** 
3051:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3052:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3053:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3054:Generated_Source\PSoC4/CyLib.c **** *
3055:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3056:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3057:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3058:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3061:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3062:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3063:Generated_Source\PSoC4/CyLib.c **** *
3064:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3065:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3066:Generated_Source\PSoC4/CyLib.c **** {
 2947              		.loc 1 3066 0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 8
 2950              		@ frame_needed = 1, uses_anonymous_args = 0
 2951 0000 80B5     		push	{r7, lr}
 2952              		.cfi_def_cfa_offset 8
 2953              		.cfi_offset 7, -8
 2954              		.cfi_offset 14, -4
 2955 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 107


 2956              		.cfi_def_cfa_offset 16
 2957 0004 00AF     		add	r7, sp, #0
 2958              		.cfi_def_cfa_register 7
 2959 0006 7860     		str	r0, [r7, #4]
3067:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3068:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2960              		.loc 1 3068 0
 2961 0008 254B     		ldr	r3, .L203
 2962 000a 1B78     		ldrb	r3, [r3]
 2963 000c DBB2     		uxtb	r3, r3
 2964 000e 1A00     		movs	r2, r3
 2965 0010 7B68     		ldr	r3, [r7, #4]
 2966 0012 1A60     		str	r2, [r3]
3069:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2967              		.loc 1 3069 0
 2968 0014 234B     		ldr	r3, .L203+4
 2969 0016 1B78     		ldrb	r3, [r3]
 2970 0018 DBB2     		uxtb	r3, r3
 2971 001a 1A02     		lsls	r2, r3, #8
 2972 001c 7B68     		ldr	r3, [r7, #4]
 2973 001e 1B68     		ldr	r3, [r3]
 2974 0020 1A43     		orrs	r2, r3
 2975 0022 7B68     		ldr	r3, [r7, #4]
 2976 0024 1A60     		str	r2, [r3]
3070:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2977              		.loc 1 3070 0
 2978 0026 204B     		ldr	r3, .L203+8
 2979 0028 1B78     		ldrb	r3, [r3]
 2980 002a DBB2     		uxtb	r3, r3
 2981 002c 1A04     		lsls	r2, r3, #16
 2982 002e 7B68     		ldr	r3, [r7, #4]
 2983 0030 1B68     		ldr	r3, [r3]
 2984 0032 1A43     		orrs	r2, r3
 2985 0034 7B68     		ldr	r3, [r7, #4]
 2986 0036 1A60     		str	r2, [r3]
3071:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2987              		.loc 1 3071 0
 2988 0038 1C4B     		ldr	r3, .L203+12
 2989 003a 1B78     		ldrb	r3, [r3]
 2990 003c DBB2     		uxtb	r3, r3
 2991 003e 1A06     		lsls	r2, r3, #24
 2992 0040 7B68     		ldr	r3, [r7, #4]
 2993 0042 1B68     		ldr	r3, [r3]
 2994 0044 1A43     		orrs	r2, r3
 2995 0046 7B68     		ldr	r3, [r7, #4]
 2996 0048 1A60     		str	r2, [r3]
3072:Generated_Source\PSoC4/CyLib.c **** 
3073:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2997              		.loc 1 3073 0
 2998 004a 7B68     		ldr	r3, [r7, #4]
 2999 004c 0433     		adds	r3, r3, #4
 3000 004e 184A     		ldr	r2, .L203+16
 3001 0050 1278     		ldrb	r2, [r2]
 3002 0052 D2B2     		uxtb	r2, r2
 3003 0054 1A60     		str	r2, [r3]
3074:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 3004              		.loc 1 3074 0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 108


 3005 0056 174B     		ldr	r3, .L203+20
 3006 0058 1B78     		ldrb	r3, [r3]
 3007 005a DBB2     		uxtb	r3, r3
 3008 005c 1902     		lsls	r1, r3, #8
 3009 005e 7B68     		ldr	r3, [r7, #4]
 3010 0060 0433     		adds	r3, r3, #4
 3011 0062 7A68     		ldr	r2, [r7, #4]
 3012 0064 0432     		adds	r2, r2, #4
 3013 0066 1268     		ldr	r2, [r2]
 3014 0068 0A43     		orrs	r2, r1
 3015 006a 1A60     		str	r2, [r3]
3075:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 3016              		.loc 1 3075 0
 3017 006c 124B     		ldr	r3, .L203+24
 3018 006e 1B78     		ldrb	r3, [r3]
 3019 0070 DBB2     		uxtb	r3, r3
 3020 0072 1904     		lsls	r1, r3, #16
 3021 0074 7B68     		ldr	r3, [r7, #4]
 3022 0076 0433     		adds	r3, r3, #4
 3023 0078 7A68     		ldr	r2, [r7, #4]
 3024 007a 0432     		adds	r2, r2, #4
 3025 007c 1268     		ldr	r2, [r2]
 3026 007e 0A43     		orrs	r2, r1
 3027 0080 1A60     		str	r2, [r3]
3076:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 3028              		.loc 1 3076 0
 3029 0082 0E4B     		ldr	r3, .L203+28
 3030 0084 1B78     		ldrb	r3, [r3]
 3031 0086 DBB2     		uxtb	r3, r3
 3032 0088 1906     		lsls	r1, r3, #24
 3033 008a 7B68     		ldr	r3, [r7, #4]
 3034 008c 0433     		adds	r3, r3, #4
 3035 008e 7A68     		ldr	r2, [r7, #4]
 3036 0090 0432     		adds	r2, r2, #4
 3037 0092 1268     		ldr	r2, [r2]
 3038 0094 0A43     		orrs	r2, r1
 3039 0096 1A60     		str	r2, [r3]
3077:Generated_Source\PSoC4/CyLib.c **** #else
3078:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3079:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3080:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3081:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3082:Generated_Source\PSoC4/CyLib.c **** 
3083:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3084:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3085:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3086:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3087:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3088:Generated_Source\PSoC4/CyLib.c **** }
 3040              		.loc 1 3088 0
 3041 0098 C046     		nop
 3042 009a BD46     		mov	sp, r7
 3043 009c 02B0     		add	sp, sp, #8
 3044              		@ sp needed
 3045 009e 80BD     		pop	{r7, pc}
 3046              	.L204:
 3047              		.align	2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 109


 3048              	.L203:
 3049 00a0 78F2FF0F 		.word	268431992
 3050 00a4 79F2FF0F 		.word	268431993
 3051 00a8 7AF2FF0F 		.word	268431994
 3052 00ac 7BF2FF0F 		.word	268431995
 3053 00b0 7CF2FF0F 		.word	268431996
 3054 00b4 7DF2FF0F 		.word	268431997
 3055 00b8 7EF2FF0F 		.word	268431998
 3056 00bc 7FF2FF0F 		.word	268431999
 3057              		.cfi_endproc
 3058              	.LFE52:
 3059              		.size	CyGetUniqueId, .-CyGetUniqueId
 3060              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 3061              		.align	2
 3062              		.global	CySysSetRamAccessArbPriority
 3063              		.code	16
 3064              		.thumb_func
 3065              		.type	CySysSetRamAccessArbPriority, %function
 3066              	CySysSetRamAccessArbPriority:
 3067              	.LFB53:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3092:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3093:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3094:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3095:Generated_Source\PSoC4/CyLib.c ****     *
3096:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3097:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3098:Generated_Source\PSoC4/CyLib.c ****     *  details.
3099:Generated_Source\PSoC4/CyLib.c ****     *
3100:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3101:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3102:Generated_Source\PSoC4/CyLib.c ****     *
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
 3068              		.loc 1 3111 0
 3069              		.cfi_startproc
 3070              		@ args = 0, pretend = 0, frame = 16
 3071              		@ frame_needed = 1, uses_anonymous_args = 0
 3072 0000 80B5     		push	{r7, lr}
 3073              		.cfi_def_cfa_offset 8
 3074              		.cfi_offset 7, -8
 3075              		.cfi_offset 14, -4
 3076 0002 84B0     		sub	sp, sp, #16
 3077              		.cfi_def_cfa_offset 24
 3078 0004 00AF     		add	r7, sp, #0
 3079              		.cfi_def_cfa_register 7
 3080 0006 7860     		str	r0, [r7, #4]
3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 110


3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 3081              		.loc 1 3114 0
 3082 0008 094B     		ldr	r3, .L206
 3083 000a 1B68     		ldr	r3, [r3]
 3084 000c 094A     		ldr	r2, .L206+4
 3085 000e 1340     		ands	r3, r2
 3086 0010 FB60     		str	r3, [r7, #12]
3115:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 3087              		.loc 1 3115 0
 3088 0012 7B68     		ldr	r3, [r7, #4]
 3089 0014 5A04     		lsls	r2, r3, #17
 3090 0016 C023     		movs	r3, #192
 3091 0018 DB02     		lsls	r3, r3, #11
 3092 001a 1340     		ands	r3, r2
 3093 001c FA68     		ldr	r2, [r7, #12]
 3094 001e 1343     		orrs	r3, r2
 3095 0020 FB60     		str	r3, [r7, #12]
3116:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 3096              		.loc 1 3116 0
 3097 0022 034B     		ldr	r3, .L206
 3098 0024 FA68     		ldr	r2, [r7, #12]
 3099 0026 1A60     		str	r2, [r3]
3117:Generated_Source\PSoC4/CyLib.c ****     }
 3100              		.loc 1 3117 0
 3101 0028 C046     		nop
 3102 002a BD46     		mov	sp, r7
 3103 002c 04B0     		add	sp, sp, #16
 3104              		@ sp needed
 3105 002e 80BD     		pop	{r7, pc}
 3106              	.L207:
 3107              		.align	2
 3108              	.L206:
 3109 0030 38001040 		.word	1074790456
 3110 0034 FFFFF9FF 		.word	-393217
 3111              		.cfi_endproc
 3112              	.LFE53:
 3113              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 3114              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 3115              		.align	2
 3116              		.global	CySysSetFlashAccessArbPriority
 3117              		.code	16
 3118              		.thumb_func
 3119              		.type	CySysSetFlashAccessArbPriority, %function
 3120              	CySysSetFlashAccessArbPriority:
 3121              	.LFB54:
3118:Generated_Source\PSoC4/CyLib.c **** 
3119:Generated_Source\PSoC4/CyLib.c **** 
3120:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3121:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3122:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3123:Generated_Source\PSoC4/CyLib.c ****     *
3124:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3125:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3126:Generated_Source\PSoC4/CyLib.c ****     *  details.
3127:Generated_Source\PSoC4/CyLib.c ****     *
3128:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 111


3129:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3130:Generated_Source\PSoC4/CyLib.c ****     *
3131:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3132:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3133:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3134:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3135:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3136:Generated_Source\PSoC4/CyLib.c ****     *
3137:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3138:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3139:Generated_Source\PSoC4/CyLib.c ****     {
 3122              		.loc 1 3139 0
 3123              		.cfi_startproc
 3124              		@ args = 0, pretend = 0, frame = 16
 3125              		@ frame_needed = 1, uses_anonymous_args = 0
 3126 0000 80B5     		push	{r7, lr}
 3127              		.cfi_def_cfa_offset 8
 3128              		.cfi_offset 7, -8
 3129              		.cfi_offset 14, -4
 3130 0002 84B0     		sub	sp, sp, #16
 3131              		.cfi_def_cfa_offset 24
 3132 0004 00AF     		add	r7, sp, #0
 3133              		.cfi_def_cfa_register 7
 3134 0006 7860     		str	r0, [r7, #4]
3140:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3141:Generated_Source\PSoC4/CyLib.c **** 
3142:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 3135              		.loc 1 3142 0
 3136 0008 094B     		ldr	r3, .L209
 3137 000a 1B68     		ldr	r3, [r3]
 3138 000c 094A     		ldr	r2, .L209+4
 3139 000e 1340     		ands	r3, r2
 3140 0010 FB60     		str	r3, [r7, #12]
3143:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 3141              		.loc 1 3143 0
 3142 0012 7B68     		ldr	r3, [r7, #4]
 3143 0014 5A04     		lsls	r2, r3, #17
 3144 0016 C023     		movs	r3, #192
 3145 0018 DB02     		lsls	r3, r3, #11
 3146 001a 1340     		ands	r3, r2
 3147 001c FA68     		ldr	r2, [r7, #12]
 3148 001e 1343     		orrs	r3, r2
 3149 0020 FB60     		str	r3, [r7, #12]
3144:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 3150              		.loc 1 3144 0
 3151 0022 034B     		ldr	r3, .L209
 3152 0024 FA68     		ldr	r2, [r7, #12]
 3153 0026 1A60     		str	r2, [r3]
3145:Generated_Source\PSoC4/CyLib.c ****     }
 3154              		.loc 1 3145 0
 3155 0028 C046     		nop
 3156 002a BD46     		mov	sp, r7
 3157 002c 04B0     		add	sp, sp, #16
 3158              		@ sp needed
 3159 002e 80BD     		pop	{r7, pc}
 3160              	.L210:
 3161              		.align	2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 112


 3162              	.L209:
 3163 0030 30001040 		.word	1074790448
 3164 0034 FFFFF9FF 		.word	-393217
 3165              		.cfi_endproc
 3166              	.LFE54:
 3167              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 3168              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 3169              		.align	2
 3170              		.global	CySysSetDmacAccessArbPriority
 3171              		.code	16
 3172              		.thumb_func
 3173              		.type	CySysSetDmacAccessArbPriority, %function
 3174              	CySysSetDmacAccessArbPriority:
 3175              	.LFB55:
3146:Generated_Source\PSoC4/CyLib.c **** 
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3149:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3150:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3151:Generated_Source\PSoC4/CyLib.c ****     *
3152:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3153:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3154:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3155:Generated_Source\PSoC4/CyLib.c ****     *
3156:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3157:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3158:Generated_Source\PSoC4/CyLib.c ****     *
3159:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3160:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3161:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3162:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3163:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3164:Generated_Source\PSoC4/CyLib.c ****     *
3165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3166:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3167:Generated_Source\PSoC4/CyLib.c ****     {
 3176              		.loc 1 3167 0
 3177              		.cfi_startproc
 3178              		@ args = 0, pretend = 0, frame = 16
 3179              		@ frame_needed = 1, uses_anonymous_args = 0
 3180 0000 80B5     		push	{r7, lr}
 3181              		.cfi_def_cfa_offset 8
 3182              		.cfi_offset 7, -8
 3183              		.cfi_offset 14, -4
 3184 0002 84B0     		sub	sp, sp, #16
 3185              		.cfi_def_cfa_offset 24
 3186 0004 00AF     		add	r7, sp, #0
 3187              		.cfi_def_cfa_register 7
 3188 0006 7860     		str	r0, [r7, #4]
3168:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3169:Generated_Source\PSoC4/CyLib.c **** 
3170:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 3189              		.loc 1 3170 0
 3190 0008 094B     		ldr	r3, .L212
 3191 000a 1B68     		ldr	r3, [r3]
 3192 000c 094A     		ldr	r2, .L212+4
 3193 000e 1340     		ands	r3, r2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 113


 3194 0010 FB60     		str	r3, [r7, #12]
3171:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 3195              		.loc 1 3171 0
 3196 0012 7B68     		ldr	r3, [r7, #4]
 3197 0014 5A04     		lsls	r2, r3, #17
 3198 0016 C023     		movs	r3, #192
 3199 0018 DB02     		lsls	r3, r3, #11
 3200 001a 1340     		ands	r3, r2
 3201 001c FA68     		ldr	r2, [r7, #12]
 3202 001e 1343     		orrs	r3, r2
 3203 0020 FB60     		str	r3, [r7, #12]
3172:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 3204              		.loc 1 3172 0
 3205 0022 034B     		ldr	r3, .L212
 3206 0024 FA68     		ldr	r2, [r7, #12]
 3207 0026 1A60     		str	r2, [r3]
3173:Generated_Source\PSoC4/CyLib.c ****     }
 3208              		.loc 1 3173 0
 3209 0028 C046     		nop
 3210 002a BD46     		mov	sp, r7
 3211 002c 04B0     		add	sp, sp, #16
 3212              		@ sp needed
 3213 002e 80BD     		pop	{r7, pc}
 3214              	.L213:
 3215              		.align	2
 3216              	.L212:
 3217 0030 3C001040 		.word	1074790460
 3218 0034 FFFFF9FF 		.word	-393217
 3219              		.cfi_endproc
 3220              	.LFE55:
 3221              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 3222              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 3223              		.align	2
 3224              		.global	CySysSetPeripheralAccessArbPriority
 3225              		.code	16
 3226              		.thumb_func
 3227              		.type	CySysSetPeripheralAccessArbPriority, %function
 3228              	CySysSetPeripheralAccessArbPriority:
 3229              	.LFB56:
3174:Generated_Source\PSoC4/CyLib.c **** 
3175:Generated_Source\PSoC4/CyLib.c **** 
3176:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3177:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3178:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3179:Generated_Source\PSoC4/CyLib.c ****     *
3180:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3181:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3182:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3183:Generated_Source\PSoC4/CyLib.c ****     *
3184:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3185:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3186:Generated_Source\PSoC4/CyLib.c ****     *
3187:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3188:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3189:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3190:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3191:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 114


3192:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3193:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3194:Generated_Source\PSoC4/CyLib.c ****     *
3195:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3196:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3197:Generated_Source\PSoC4/CyLib.c ****     {
 3230              		.loc 1 3197 0
 3231              		.cfi_startproc
 3232              		@ args = 0, pretend = 0, frame = 16
 3233              		@ frame_needed = 1, uses_anonymous_args = 0
 3234 0000 80B5     		push	{r7, lr}
 3235              		.cfi_def_cfa_offset 8
 3236              		.cfi_offset 7, -8
 3237              		.cfi_offset 14, -4
 3238 0002 84B0     		sub	sp, sp, #16
 3239              		.cfi_def_cfa_offset 24
 3240 0004 00AF     		add	r7, sp, #0
 3241              		.cfi_def_cfa_register 7
 3242 0006 7860     		str	r0, [r7, #4]
 3243 0008 3960     		str	r1, [r7]
3198:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3199:Generated_Source\PSoC4/CyLib.c **** 
3200:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 3244              		.loc 1 3200 0
 3245 000a 7B68     		ldr	r3, [r7, #4]
 3246 000c 002B     		cmp	r3, #0
 3247 000e 10D1     		bne	.L215
3201:Generated_Source\PSoC4/CyLib.c ****         {
3202:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3248              		.loc 1 3202 0
 3249 0010 1F4B     		ldr	r3, .L220
 3250 0012 1B68     		ldr	r3, [r3]
 3251 0014 1F4A     		ldr	r2, .L220+4
 3252 0016 1340     		ands	r3, r2
 3253 0018 FB60     		str	r3, [r7, #12]
3203:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3254              		.loc 1 3203 0
 3255 001a 3B68     		ldr	r3, [r7]
 3256 001c 5A04     		lsls	r2, r3, #17
 3257 001e C023     		movs	r3, #192
 3258 0020 DB02     		lsls	r3, r3, #11
 3259 0022 1340     		ands	r3, r2
 3260 0024 FA68     		ldr	r2, [r7, #12]
 3261 0026 1343     		orrs	r3, r2
 3262 0028 FB60     		str	r3, [r7, #12]
3204:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 3263              		.loc 1 3204 0
 3264 002a 194B     		ldr	r3, .L220
 3265 002c FA68     		ldr	r2, [r7, #12]
 3266 002e 1A60     		str	r2, [r3]
3205:Generated_Source\PSoC4/CyLib.c ****         } else
3206:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3207:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
3208:Generated_Source\PSoC4/CyLib.c ****         {
3209:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3210:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3211:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 115


3212:Generated_Source\PSoC4/CyLib.c ****         } else
3213:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3214:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3215:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3216:Generated_Source\PSoC4/CyLib.c ****         {
3217:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3218:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3219:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3220:Generated_Source\PSoC4/CyLib.c ****         } else
3221:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3222:Generated_Source\PSoC4/CyLib.c ****         {
3223:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3224:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3225:Generated_Source\PSoC4/CyLib.c ****         }
3226:Generated_Source\PSoC4/CyLib.c ****     }
 3267              		.loc 1 3226 0
 3268 0030 2AE0     		b	.L219
 3269              	.L215:
3207:Generated_Source\PSoC4/CyLib.c ****         {
 3270              		.loc 1 3207 0
 3271 0032 7B68     		ldr	r3, [r7, #4]
 3272 0034 012B     		cmp	r3, #1
 3273 0036 10D1     		bne	.L217
3209:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3274              		.loc 1 3209 0
 3275 0038 174B     		ldr	r3, .L220+8
 3276 003a 1B68     		ldr	r3, [r3]
 3277 003c 154A     		ldr	r2, .L220+4
 3278 003e 1340     		ands	r3, r2
 3279 0040 FB60     		str	r3, [r7, #12]
3210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 3280              		.loc 1 3210 0
 3281 0042 3B68     		ldr	r3, [r7]
 3282 0044 5A04     		lsls	r2, r3, #17
 3283 0046 C023     		movs	r3, #192
 3284 0048 DB02     		lsls	r3, r3, #11
 3285 004a 1340     		ands	r3, r2
 3286 004c FA68     		ldr	r2, [r7, #12]
 3287 004e 1343     		orrs	r3, r2
 3288 0050 FB60     		str	r3, [r7, #12]
3211:Generated_Source\PSoC4/CyLib.c ****         } else
 3289              		.loc 1 3211 0
 3290 0052 114B     		ldr	r3, .L220+8
 3291 0054 FA68     		ldr	r2, [r7, #12]
 3292 0056 1A60     		str	r2, [r3]
 3293              		.loc 1 3226 0
 3294 0058 16E0     		b	.L219
 3295              	.L217:
3215:Generated_Source\PSoC4/CyLib.c ****         {
 3296              		.loc 1 3215 0
 3297 005a 7B68     		ldr	r3, [r7, #4]
 3298 005c 022B     		cmp	r3, #2
 3299 005e 10D1     		bne	.L218
3217:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3300              		.loc 1 3217 0
 3301 0060 0E4B     		ldr	r3, .L220+12
 3302 0062 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 116


 3303 0064 0B4A     		ldr	r2, .L220+4
 3304 0066 1340     		ands	r3, r2
 3305 0068 FB60     		str	r3, [r7, #12]
3218:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 3306              		.loc 1 3218 0
 3307 006a 3B68     		ldr	r3, [r7]
 3308 006c 5A04     		lsls	r2, r3, #17
 3309 006e C023     		movs	r3, #192
 3310 0070 DB02     		lsls	r3, r3, #11
 3311 0072 1340     		ands	r3, r2
 3312 0074 FA68     		ldr	r2, [r7, #12]
 3313 0076 1343     		orrs	r3, r2
 3314 0078 FB60     		str	r3, [r7, #12]
3219:Generated_Source\PSoC4/CyLib.c ****         } else
 3315              		.loc 1 3219 0
 3316 007a 084B     		ldr	r3, .L220+12
 3317 007c FA68     		ldr	r2, [r7, #12]
 3318 007e 1A60     		str	r2, [r3]
 3319              		.loc 1 3226 0
 3320 0080 02E0     		b	.L219
 3321              	.L218:
3224:Generated_Source\PSoC4/CyLib.c ****         }
 3322              		.loc 1 3224 0 discriminator 1
 3323 0082 0020     		movs	r0, #0
 3324 0084 FFF7FEFF 		bl	CyHalt
 3325              	.L219:
 3326              		.loc 1 3226 0
 3327 0088 C046     		nop
 3328 008a BD46     		mov	sp, r7
 3329 008c 04B0     		add	sp, sp, #16
 3330              		@ sp needed
 3331 008e 80BD     		pop	{r7, pc}
 3332              	.L221:
 3333              		.align	2
 3334              	.L220:
 3335 0090 00011040 		.word	1074790656
 3336 0094 FFFFF9FF 		.word	-393217
 3337 0098 04011040 		.word	1074790660
 3338 009c 08011040 		.word	1074790664
 3339              		.cfi_endproc
 3340              	.LFE56:
 3341              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 3342              		.text
 3343              	.Letext0:
 3344              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3345              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3346              		.section	.debug_info,"",%progbits
 3347              	.Ldebug_info0:
 3348 0000 B10A0000 		.4byte	0xab1
 3349 0004 0400     		.2byte	0x4
 3350 0006 00000000 		.4byte	.Ldebug_abbrev0
 3351 000a 04       		.byte	0x4
 3352 000b 01       		.uleb128 0x1
 3353 000c 37030000 		.4byte	.LASF118
 3354 0010 0C       		.byte	0xc
 3355 0011 AB070000 		.4byte	.LASF119
 3356 0015 BF050000 		.4byte	.LASF120
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 117


 3357 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3358 001d 00000000 		.4byte	0
 3359 0021 00000000 		.4byte	.Ldebug_line0
 3360 0025 02       		.uleb128 0x2
 3361 0026 01       		.byte	0x1
 3362 0027 06       		.byte	0x6
 3363 0028 0E010000 		.4byte	.LASF0
 3364 002c 02       		.uleb128 0x2
 3365 002d 01       		.byte	0x1
 3366 002e 08       		.byte	0x8
 3367 002f 5D050000 		.4byte	.LASF1
 3368 0033 02       		.uleb128 0x2
 3369 0034 02       		.byte	0x2
 3370 0035 05       		.byte	0x5
 3371 0036 6B050000 		.4byte	.LASF2
 3372 003a 02       		.uleb128 0x2
 3373 003b 02       		.byte	0x2
 3374 003c 07       		.byte	0x7
 3375 003d D1020000 		.4byte	.LASF3
 3376 0041 02       		.uleb128 0x2
 3377 0042 04       		.byte	0x4
 3378 0043 05       		.byte	0x5
 3379 0044 4D010000 		.4byte	.LASF4
 3380 0048 02       		.uleb128 0x2
 3381 0049 04       		.byte	0x4
 3382 004a 07       		.byte	0x7
 3383 004b 70020000 		.4byte	.LASF5
 3384 004f 02       		.uleb128 0x2
 3385 0050 08       		.byte	0x8
 3386 0051 05       		.byte	0x5
 3387 0052 00010000 		.4byte	.LASF6
 3388 0056 02       		.uleb128 0x2
 3389 0057 08       		.byte	0x8
 3390 0058 07       		.byte	0x7
 3391 0059 84000000 		.4byte	.LASF7
 3392 005d 03       		.uleb128 0x3
 3393 005e 04       		.byte	0x4
 3394 005f 05       		.byte	0x5
 3395 0060 696E7400 		.ascii	"int\000"
 3396 0064 02       		.uleb128 0x2
 3397 0065 04       		.byte	0x4
 3398 0066 07       		.byte	0x7
 3399 0067 54020000 		.4byte	.LASF8
 3400 006b 04       		.uleb128 0x4
 3401 006c 78010000 		.4byte	.LASF9
 3402 0070 02       		.byte	0x2
 3403 0071 E401     		.2byte	0x1e4
 3404 0073 2C000000 		.4byte	0x2c
 3405 0077 04       		.uleb128 0x4
 3406 0078 17000000 		.4byte	.LASF10
 3407 007c 02       		.byte	0x2
 3408 007d E501     		.2byte	0x1e5
 3409 007f 3A000000 		.4byte	0x3a
 3410 0083 04       		.uleb128 0x4
 3411 0084 B8010000 		.4byte	.LASF11
 3412 0088 02       		.byte	0x2
 3413 0089 E601     		.2byte	0x1e6
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 118


 3414 008b 48000000 		.4byte	0x48
 3415 008f 02       		.uleb128 0x2
 3416 0090 04       		.byte	0x4
 3417 0091 04       		.byte	0x4
 3418 0092 E7040000 		.4byte	.LASF12
 3419 0096 02       		.uleb128 0x2
 3420 0097 08       		.byte	0x8
 3421 0098 04       		.byte	0x4
 3422 0099 94010000 		.4byte	.LASF13
 3423 009d 02       		.uleb128 0x2
 3424 009e 01       		.byte	0x1
 3425 009f 08       		.byte	0x8
 3426 00a0 5B060000 		.4byte	.LASF14
 3427 00a4 04       		.uleb128 0x4
 3428 00a5 80070000 		.4byte	.LASF15
 3429 00a9 02       		.byte	0x2
 3430 00aa 8602     		.2byte	0x286
 3431 00ac 48000000 		.4byte	0x48
 3432 00b0 04       		.uleb128 0x4
 3433 00b1 2A050000 		.4byte	.LASF16
 3434 00b5 02       		.byte	0x2
 3435 00b6 8E02     		.2byte	0x28e
 3436 00b8 BC000000 		.4byte	0xbc
 3437 00bc 05       		.uleb128 0x5
 3438 00bd 6B000000 		.4byte	0x6b
 3439 00c1 04       		.uleb128 0x4
 3440 00c2 0B040000 		.4byte	.LASF17
 3441 00c6 02       		.byte	0x2
 3442 00c7 9002     		.2byte	0x290
 3443 00c9 CD000000 		.4byte	0xcd
 3444 00cd 05       		.uleb128 0x5
 3445 00ce 83000000 		.4byte	0x83
 3446 00d2 04       		.uleb128 0x4
 3447 00d3 60060000 		.4byte	.LASF18
 3448 00d7 02       		.byte	0x2
 3449 00d8 A002     		.2byte	0x2a0
 3450 00da DE000000 		.4byte	0xde
 3451 00de 06       		.uleb128 0x6
 3452 00df 04       		.byte	0x4
 3453 00e0 E4000000 		.4byte	0xe4
 3454 00e4 07       		.uleb128 0x7
 3455 00e5 02       		.uleb128 0x2
 3456 00e6 08       		.byte	0x8
 3457 00e7 04       		.byte	0x4
 3458 00e8 73040000 		.4byte	.LASF19
 3459 00ec 02       		.uleb128 0x2
 3460 00ed 04       		.byte	0x4
 3461 00ee 07       		.byte	0x7
 3462 00ef 34040000 		.4byte	.LASF20
 3463 00f3 08       		.uleb128 0x8
 3464 00f4 FC040000 		.4byte	.LASF21
 3465 00f8 03       		.byte	0x3
 3466 00f9 F5       		.byte	0xf5
 3467 00fa DE000000 		.4byte	0xde
 3468 00fe 09       		.uleb128 0x9
 3469 00ff 89070000 		.4byte	.LASF22
 3470 0103 01       		.byte	0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 119


 3471 0104 6C       		.byte	0x6c
 3472 0105 00000000 		.4byte	.LFB2
 3473 0109 1C000000 		.4byte	.LFE2-.LFB2
 3474 010d 01       		.uleb128 0x1
 3475 010e 9C       		.byte	0x9c
 3476 010f 09       		.uleb128 0x9
 3477 0110 9D020000 		.4byte	.LASF23
 3478 0114 01       		.byte	0x1
 3479 0115 8C       		.byte	0x8c
 3480 0116 00000000 		.4byte	.LFB3
 3481 011a 1C000000 		.4byte	.LFE3-.LFB3
 3482 011e 01       		.uleb128 0x1
 3483 011f 9C       		.byte	0x9c
 3484 0120 0A       		.uleb128 0xa
 3485 0121 27000000 		.4byte	.LASF26
 3486 0125 01       		.byte	0x1
 3487 0126 0002     		.2byte	0x200
 3488 0128 00000000 		.4byte	.LFB4
 3489 012c 48000000 		.4byte	.LFE4-.LFB4
 3490 0130 01       		.uleb128 0x1
 3491 0131 9C       		.byte	0x9c
 3492 0132 64010000 		.4byte	0x164
 3493 0136 0B       		.uleb128 0xb
 3494 0137 93050000 		.4byte	.LASF28
 3495 013b 01       		.byte	0x1
 3496 013c 0002     		.2byte	0x200
 3497 013e 83000000 		.4byte	0x83
 3498 0142 02       		.uleb128 0x2
 3499 0143 91       		.byte	0x91
 3500 0144 64       		.sleb128 -28
 3501 0145 0C       		.uleb128 0xc
 3502 0146 2B010000 		.4byte	.LASF24
 3503 014a 01       		.byte	0x1
 3504 014b 0202     		.2byte	0x202
 3505 014d 6B000000 		.4byte	0x6b
 3506 0151 02       		.uleb128 0x2
 3507 0152 91       		.byte	0x91
 3508 0153 6F       		.sleb128 -17
 3509 0154 0C       		.uleb128 0xc
 3510 0155 D7070000 		.4byte	.LASF25
 3511 0159 01       		.byte	0x1
 3512 015a 0302     		.2byte	0x203
 3513 015c 83000000 		.4byte	0x83
 3514 0160 02       		.uleb128 0x2
 3515 0161 91       		.byte	0x91
 3516 0162 68       		.sleb128 -24
 3517 0163 00       		.byte	0
 3518 0164 0D       		.uleb128 0xd
 3519 0165 F6030000 		.4byte	.LASF27
 3520 0169 01       		.byte	0x1
 3521 016a 3202     		.2byte	0x232
 3522 016c 00000000 		.4byte	.LFB5
 3523 0170 50000000 		.4byte	.LFE5-.LFB5
 3524 0174 01       		.uleb128 0x1
 3525 0175 9C       		.byte	0x9c
 3526 0176 8A010000 		.4byte	0x18a
 3527 017a 0B       		.uleb128 0xb
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 120


 3528 017b 8D010000 		.4byte	.LASF29
 3529 017f 01       		.byte	0x1
 3530 0180 3202     		.2byte	0x232
 3531 0182 83000000 		.4byte	0x83
 3532 0186 02       		.uleb128 0x2
 3533 0187 91       		.byte	0x91
 3534 0188 74       		.sleb128 -12
 3535 0189 00       		.byte	0
 3536 018a 0E       		.uleb128 0xe
 3537 018b DA010000 		.4byte	.LASF39
 3538 018f 01       		.byte	0x1
 3539 0190 5702     		.2byte	0x257
 3540 0192 83000000 		.4byte	0x83
 3541 0196 00000000 		.4byte	.LFB6
 3542 019a 34000000 		.4byte	.LFE6-.LFB6
 3543 019e 01       		.uleb128 0x1
 3544 019f 9C       		.byte	0x9c
 3545 01a0 C3010000 		.4byte	0x1c3
 3546 01a4 0C       		.uleb128 0xc
 3547 01a5 2B010000 		.4byte	.LASF24
 3548 01a9 01       		.byte	0x1
 3549 01aa 5902     		.2byte	0x259
 3550 01ac 6B000000 		.4byte	0x6b
 3551 01b0 02       		.uleb128 0x2
 3552 01b1 91       		.byte	0x91
 3553 01b2 6F       		.sleb128 -17
 3554 01b3 0C       		.uleb128 0xc
 3555 01b4 8F040000 		.4byte	.LASF30
 3556 01b8 01       		.byte	0x1
 3557 01b9 5A02     		.2byte	0x25a
 3558 01bb 83000000 		.4byte	0x83
 3559 01bf 02       		.uleb128 0x2
 3560 01c0 91       		.byte	0x91
 3561 01c1 68       		.sleb128 -24
 3562 01c2 00       		.byte	0
 3563 01c3 0A       		.uleb128 0xa
 3564 01c4 7D060000 		.4byte	.LASF31
 3565 01c8 01       		.byte	0x1
 3566 01c9 9402     		.2byte	0x294
 3567 01cb 00000000 		.4byte	.LFB7
 3568 01cf 48000000 		.4byte	.LFE7-.LFB7
 3569 01d3 01       		.uleb128 0x1
 3570 01d4 9C       		.byte	0x9c
 3571 01d5 F8010000 		.4byte	0x1f8
 3572 01d9 0B       		.uleb128 0xb
 3573 01da 64070000 		.4byte	.LASF32
 3574 01de 01       		.byte	0x1
 3575 01df 9402     		.2byte	0x294
 3576 01e1 83000000 		.4byte	0x83
 3577 01e5 02       		.uleb128 0x2
 3578 01e6 91       		.byte	0x91
 3579 01e7 64       		.sleb128 -28
 3580 01e8 0C       		.uleb128 0xc
 3581 01e9 2B010000 		.4byte	.LASF24
 3582 01ed 01       		.byte	0x1
 3583 01ee 9602     		.2byte	0x296
 3584 01f0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 121


 3585 01f4 02       		.uleb128 0x2
 3586 01f5 91       		.byte	0x91
 3587 01f6 6F       		.sleb128 -17
 3588 01f7 00       		.byte	0
 3589 01f8 0A       		.uleb128 0xa
 3590 01f9 22030000 		.4byte	.LASF33
 3591 01fd 01       		.byte	0x1
 3592 01fe CE02     		.2byte	0x2ce
 3593 0200 00000000 		.4byte	.LFB8
 3594 0204 E4010000 		.4byte	.LFE8-.LFB8
 3595 0208 01       		.uleb128 0x1
 3596 0209 9C       		.byte	0x9c
 3597 020a 69020000 		.4byte	0x269
 3598 020e 0B       		.uleb128 0xb
 3599 020f 1A010000 		.4byte	.LASF34
 3600 0213 01       		.byte	0x1
 3601 0214 CE02     		.2byte	0x2ce
 3602 0216 83000000 		.4byte	0x83
 3603 021a 02       		.uleb128 0x2
 3604 021b 91       		.byte	0x91
 3605 021c 64       		.sleb128 -28
 3606 021d 0C       		.uleb128 0xc
 3607 021e 0F000000 		.4byte	.LASF35
 3608 0222 01       		.byte	0x1
 3609 0223 D402     		.2byte	0x2d4
 3610 0225 6B000000 		.4byte	0x6b
 3611 0229 02       		.uleb128 0x2
 3612 022a 91       		.byte	0x91
 3613 022b 6F       		.sleb128 -17
 3614 022c 0C       		.uleb128 0xc
 3615 022d 87040000 		.4byte	.LASF36
 3616 0231 01       		.byte	0x1
 3617 0232 D502     		.2byte	0x2d5
 3618 0234 6B000000 		.4byte	0x6b
 3619 0238 02       		.uleb128 0x2
 3620 0239 91       		.byte	0x91
 3621 023a 6E       		.sleb128 -18
 3622 023b 0C       		.uleb128 0xc
 3623 023c 9A070000 		.4byte	.LASF37
 3624 0240 01       		.byte	0x1
 3625 0241 D602     		.2byte	0x2d6
 3626 0243 6B000000 		.4byte	0x6b
 3627 0247 02       		.uleb128 0x2
 3628 0248 91       		.byte	0x91
 3629 0249 6B       		.sleb128 -21
 3630 024a 0C       		.uleb128 0xc
 3631 024b 6F000000 		.4byte	.LASF38
 3632 024f 01       		.byte	0x1
 3633 0250 D702     		.2byte	0x2d7
 3634 0252 6B000000 		.4byte	0x6b
 3635 0256 02       		.uleb128 0x2
 3636 0257 91       		.byte	0x91
 3637 0258 6D       		.sleb128 -19
 3638 0259 0C       		.uleb128 0xc
 3639 025a 2B010000 		.4byte	.LASF24
 3640 025e 01       		.byte	0x1
 3641 025f E202     		.2byte	0x2e2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 122


 3642 0261 6B000000 		.4byte	0x6b
 3643 0265 02       		.uleb128 0x2
 3644 0266 91       		.byte	0x91
 3645 0267 6C       		.sleb128 -20
 3646 0268 00       		.byte	0
 3647 0269 0E       		.uleb128 0xe
 3648 026a 9D050000 		.4byte	.LASF40
 3649 026e 01       		.byte	0x1
 3650 026f 4E04     		.2byte	0x44e
 3651 0271 A4000000 		.4byte	0xa4
 3652 0275 00000000 		.4byte	.LFB9
 3653 0279 74000000 		.4byte	.LFE9-.LFB9
 3654 027d 01       		.uleb128 0x1
 3655 027e 9C       		.byte	0x9c
 3656 027f A2020000 		.4byte	0x2a2
 3657 0283 0B       		.uleb128 0xb
 3658 0284 5A070000 		.4byte	.LASF41
 3659 0288 01       		.byte	0x1
 3660 0289 4E04     		.2byte	0x44e
 3661 028b 83000000 		.4byte	0x83
 3662 028f 02       		.uleb128 0x2
 3663 0290 91       		.byte	0x91
 3664 0291 6C       		.sleb128 -20
 3665 0292 0C       		.uleb128 0xc
 3666 0293 20040000 		.4byte	.LASF42
 3667 0297 01       		.byte	0x1
 3668 0298 5004     		.2byte	0x450
 3669 029a A4000000 		.4byte	0xa4
 3670 029e 02       		.uleb128 0x2
 3671 029f 91       		.byte	0x91
 3672 02a0 74       		.sleb128 -12
 3673 02a1 00       		.byte	0
 3674 02a2 0F       		.uleb128 0xf
 3675 02a3 1E070000 		.4byte	.LASF43
 3676 02a7 01       		.byte	0x1
 3677 02a8 DC04     		.2byte	0x4dc
 3678 02aa 00000000 		.4byte	.LFB10
 3679 02ae 30000000 		.4byte	.LFE10-.LFB10
 3680 02b2 01       		.uleb128 0x1
 3681 02b3 9C       		.byte	0x9c
 3682 02b4 10       		.uleb128 0x10
 3683 02b5 BF010000 		.4byte	.LASF44
 3684 02b9 01       		.byte	0x1
 3685 02ba FE04     		.2byte	0x4fe
 3686 02bc 83000000 		.4byte	0x83
 3687 02c0 00000000 		.4byte	.LFB11
 3688 02c4 20000000 		.4byte	.LFE11-.LFB11
 3689 02c8 01       		.uleb128 0x1
 3690 02c9 9C       		.byte	0x9c
 3691 02ca DE020000 		.4byte	0x2de
 3692 02ce 0C       		.uleb128 0xc
 3693 02cf 0B080000 		.4byte	.LASF45
 3694 02d3 01       		.byte	0x1
 3695 02d4 0005     		.2byte	0x500
 3696 02d6 83000000 		.4byte	0x83
 3697 02da 02       		.uleb128 0x2
 3698 02db 91       		.byte	0x91
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 123


 3699 02dc 74       		.sleb128 -12
 3700 02dd 00       		.byte	0
 3701 02de 0A       		.uleb128 0xa
 3702 02df 6C070000 		.4byte	.LASF46
 3703 02e3 01       		.byte	0x1
 3704 02e4 2D05     		.2byte	0x52d
 3705 02e6 00000000 		.4byte	.LFB12
 3706 02ea 58000000 		.4byte	.LFE12-.LFB12
 3707 02ee 01       		.uleb128 0x1
 3708 02ef 9C       		.byte	0x9c
 3709 02f0 13030000 		.4byte	0x313
 3710 02f4 0B       		.uleb128 0xb
 3711 02f5 64070000 		.4byte	.LASF32
 3712 02f9 01       		.byte	0x1
 3713 02fa 2D05     		.2byte	0x52d
 3714 02fc 83000000 		.4byte	0x83
 3715 0300 02       		.uleb128 0x2
 3716 0301 91       		.byte	0x91
 3717 0302 64       		.sleb128 -28
 3718 0303 0C       		.uleb128 0xc
 3719 0304 2B010000 		.4byte	.LASF24
 3720 0308 01       		.byte	0x1
 3721 0309 2F05     		.2byte	0x52f
 3722 030b 6B000000 		.4byte	0x6b
 3723 030f 02       		.uleb128 0x2
 3724 0310 91       		.byte	0x91
 3725 0311 6F       		.sleb128 -17
 3726 0312 00       		.byte	0
 3727 0313 0A       		.uleb128 0xa
 3728 0314 ED040000 		.4byte	.LASF47
 3729 0318 01       		.byte	0x1
 3730 0319 9908     		.2byte	0x899
 3731 031b 00000000 		.4byte	.LFB13
 3732 031f 64000000 		.4byte	.LFE13-.LFB13
 3733 0323 01       		.uleb128 0x1
 3734 0324 9C       		.byte	0x9c
 3735 0325 39030000 		.4byte	0x339
 3736 0329 0B       		.uleb128 0xb
 3737 032a 2F050000 		.4byte	.LASF48
 3738 032e 01       		.byte	0x1
 3739 032f 9908     		.2byte	0x899
 3740 0331 83000000 		.4byte	0x83
 3741 0335 02       		.uleb128 0x2
 3742 0336 91       		.byte	0x91
 3743 0337 74       		.sleb128 -12
 3744 0338 00       		.byte	0
 3745 0339 0F       		.uleb128 0xf
 3746 033a FF060000 		.4byte	.LASF49
 3747 033e 01       		.byte	0x1
 3748 033f B708     		.2byte	0x8b7
 3749 0341 00000000 		.4byte	.LFB14
 3750 0345 2C000000 		.4byte	.LFE14-.LFB14
 3751 0349 01       		.uleb128 0x1
 3752 034a 9C       		.byte	0x9c
 3753 034b 11       		.uleb128 0x11
 3754 034c 82020000 		.4byte	.LASF89
 3755 0350 01       		.byte	0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 124


 3756 0351 C908     		.2byte	0x8c9
 3757 0353 83000000 		.4byte	0x83
 3758 0357 00000000 		.4byte	.LFB15
 3759 035b 18000000 		.4byte	.LFE15-.LFB15
 3760 035f 01       		.uleb128 0x1
 3761 0360 9C       		.byte	0x9c
 3762 0361 0F       		.uleb128 0xf
 3763 0362 A1010000 		.4byte	.LASF50
 3764 0366 01       		.byte	0x1
 3765 0367 D908     		.2byte	0x8d9
 3766 0369 00000000 		.4byte	.LFB16
 3767 036d 14000000 		.4byte	.LFE16-.LFB16
 3768 0371 01       		.uleb128 0x1
 3769 0372 9C       		.byte	0x9c
 3770 0373 10       		.uleb128 0x10
 3771 0374 BD020000 		.4byte	.LASF51
 3772 0378 01       		.byte	0x1
 3773 0379 F308     		.2byte	0x8f3
 3774 037b 83000000 		.4byte	0x83
 3775 037f 00000000 		.4byte	.LFB17
 3776 0383 30000000 		.4byte	.LFE17-.LFB17
 3777 0387 01       		.uleb128 0x1
 3778 0388 9C       		.byte	0x9c
 3779 0389 AC030000 		.4byte	0x3ac
 3780 038d 0B       		.uleb128 0xb
 3781 038e B8050000 		.4byte	.LASF52
 3782 0392 01       		.byte	0x1
 3783 0393 F308     		.2byte	0x8f3
 3784 0395 83000000 		.4byte	0x83
 3785 0399 02       		.uleb128 0x2
 3786 039a 91       		.byte	0x91
 3787 039b 6C       		.sleb128 -20
 3788 039c 0C       		.uleb128 0xc
 3789 039d 20040000 		.4byte	.LASF42
 3790 03a1 01       		.byte	0x1
 3791 03a2 F508     		.2byte	0x8f5
 3792 03a4 83000000 		.4byte	0x83
 3793 03a8 02       		.uleb128 0x2
 3794 03a9 91       		.byte	0x91
 3795 03aa 74       		.sleb128 -12
 3796 03ab 00       		.byte	0
 3797 03ac 10       		.uleb128 0x10
 3798 03ad 61000000 		.4byte	.LASF53
 3799 03b1 01       		.byte	0x1
 3800 03b2 0A09     		.2byte	0x90a
 3801 03b4 83000000 		.4byte	0x83
 3802 03b8 00000000 		.4byte	.LFB18
 3803 03bc 24000000 		.4byte	.LFE18-.LFB18
 3804 03c0 01       		.uleb128 0x1
 3805 03c1 9C       		.byte	0x9c
 3806 03c2 D6030000 		.4byte	0x3d6
 3807 03c6 0C       		.uleb128 0xc
 3808 03c7 1E000000 		.4byte	.LASF54
 3809 03cb 01       		.byte	0x1
 3810 03cc 0C09     		.2byte	0x90c
 3811 03ce 83000000 		.4byte	0x83
 3812 03d2 02       		.uleb128 0x2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 125


 3813 03d3 91       		.byte	0x91
 3814 03d4 74       		.sleb128 -12
 3815 03d5 00       		.byte	0
 3816 03d6 0D       		.uleb128 0xd
 3817 03d7 AC000000 		.4byte	.LASF55
 3818 03db 01       		.byte	0x1
 3819 03dc 2109     		.2byte	0x921
 3820 03de 00000000 		.4byte	.LFB19
 3821 03e2 1C000000 		.4byte	.LFE19-.LFB19
 3822 03e6 01       		.uleb128 0x1
 3823 03e7 9C       		.byte	0x9c
 3824 03e8 FC030000 		.4byte	0x3fc
 3825 03ec 0B       		.uleb128 0xb
 3826 03ed D5010000 		.4byte	.LASF56
 3827 03f1 01       		.byte	0x1
 3828 03f2 2109     		.2byte	0x921
 3829 03f4 83000000 		.4byte	0x83
 3830 03f8 02       		.uleb128 0x2
 3831 03f9 91       		.byte	0x91
 3832 03fa 74       		.sleb128 -12
 3833 03fb 00       		.byte	0
 3834 03fc 0E       		.uleb128 0xe
 3835 03fd E4030000 		.4byte	.LASF57
 3836 0401 01       		.byte	0x1
 3837 0402 3A09     		.2byte	0x93a
 3838 0404 D2000000 		.4byte	0xd2
 3839 0408 00000000 		.4byte	.LFB20
 3840 040c 48000000 		.4byte	.LFE20-.LFB20
 3841 0410 01       		.uleb128 0x1
 3842 0411 9C       		.byte	0x9c
 3843 0412 53040000 		.4byte	0x453
 3844 0416 0B       		.uleb128 0xb
 3845 0417 12030000 		.4byte	.LASF58
 3846 041b 01       		.byte	0x1
 3847 041c 3A09     		.2byte	0x93a
 3848 041e 6B000000 		.4byte	0x6b
 3849 0422 02       		.uleb128 0x2
 3850 0423 91       		.byte	0x91
 3851 0424 6F       		.sleb128 -17
 3852 0425 0B       		.uleb128 0xb
 3853 0426 7F040000 		.4byte	.LASF59
 3854 042a 01       		.byte	0x1
 3855 042b 3A09     		.2byte	0x93a
 3856 042d D2000000 		.4byte	0xd2
 3857 0431 02       		.uleb128 0x2
 3858 0432 91       		.byte	0x91
 3859 0433 68       		.sleb128 -24
 3860 0434 0C       		.uleb128 0xc
 3861 0435 53000000 		.4byte	.LASF60
 3862 0439 01       		.byte	0x1
 3863 043a 3C09     		.2byte	0x93c
 3864 043c D2000000 		.4byte	0xd2
 3865 0440 02       		.uleb128 0x2
 3866 0441 91       		.byte	0x91
 3867 0442 70       		.sleb128 -16
 3868 0443 0C       		.uleb128 0xc
 3869 0444 00000000 		.4byte	.LASF61
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 126


 3870 0448 01       		.byte	0x1
 3871 0449 3D09     		.2byte	0x93d
 3872 044b 53040000 		.4byte	0x453
 3873 044f 02       		.uleb128 0x2
 3874 0450 91       		.byte	0x91
 3875 0451 74       		.sleb128 -12
 3876 0452 00       		.byte	0
 3877 0453 06       		.uleb128 0x6
 3878 0454 04       		.byte	0x4
 3879 0455 D2000000 		.4byte	0xd2
 3880 0459 0E       		.uleb128 0xe
 3881 045a 81050000 		.4byte	.LASF62
 3882 045e 01       		.byte	0x1
 3883 045f 5C09     		.2byte	0x95c
 3884 0461 D2000000 		.4byte	0xd2
 3885 0465 00000000 		.4byte	.LFB21
 3886 0469 34000000 		.4byte	.LFE21-.LFB21
 3887 046d 01       		.uleb128 0x1
 3888 046e 9C       		.byte	0x9c
 3889 046f 92040000 		.4byte	0x492
 3890 0473 0B       		.uleb128 0xb
 3891 0474 12030000 		.4byte	.LASF58
 3892 0478 01       		.byte	0x1
 3893 0479 5C09     		.2byte	0x95c
 3894 047b 6B000000 		.4byte	0x6b
 3895 047f 02       		.uleb128 0x2
 3896 0480 91       		.byte	0x91
 3897 0481 6F       		.sleb128 -17
 3898 0482 0C       		.uleb128 0xc
 3899 0483 00000000 		.4byte	.LASF61
 3900 0487 01       		.byte	0x1
 3901 0488 5E09     		.2byte	0x95e
 3902 048a 53040000 		.4byte	0x453
 3903 048e 02       		.uleb128 0x2
 3904 048f 91       		.byte	0x91
 3905 0490 74       		.sleb128 -12
 3906 0491 00       		.byte	0
 3907 0492 0E       		.uleb128 0xe
 3908 0493 03030000 		.4byte	.LASF63
 3909 0497 01       		.byte	0x1
 3910 0498 7209     		.2byte	0x972
 3911 049a D2000000 		.4byte	0xd2
 3912 049e 00000000 		.4byte	.LFB22
 3913 04a2 4C000000 		.4byte	.LFE22-.LFB22
 3914 04a6 01       		.uleb128 0x1
 3915 04a7 9C       		.byte	0x9c
 3916 04a8 E9040000 		.4byte	0x4e9
 3917 04ac 0B       		.uleb128 0xb
 3918 04ad 12030000 		.4byte	.LASF58
 3919 04b1 01       		.byte	0x1
 3920 04b2 7209     		.2byte	0x972
 3921 04b4 6B000000 		.4byte	0x6b
 3922 04b8 02       		.uleb128 0x2
 3923 04b9 91       		.byte	0x91
 3924 04ba 6F       		.sleb128 -17
 3925 04bb 0B       		.uleb128 0xb
 3926 04bc 7F040000 		.4byte	.LASF59
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 127


 3927 04c0 01       		.byte	0x1
 3928 04c1 7209     		.2byte	0x972
 3929 04c3 D2000000 		.4byte	0xd2
 3930 04c7 02       		.uleb128 0x2
 3931 04c8 91       		.byte	0x91
 3932 04c9 68       		.sleb128 -24
 3933 04ca 0C       		.uleb128 0xc
 3934 04cb 53000000 		.4byte	.LASF60
 3935 04cf 01       		.byte	0x1
 3936 04d0 7409     		.2byte	0x974
 3937 04d2 D2000000 		.4byte	0xd2
 3938 04d6 02       		.uleb128 0x2
 3939 04d7 91       		.byte	0x91
 3940 04d8 70       		.sleb128 -16
 3941 04d9 0C       		.uleb128 0xc
 3942 04da 00000000 		.4byte	.LASF61
 3943 04de 01       		.byte	0x1
 3944 04df 7509     		.2byte	0x975
 3945 04e1 53040000 		.4byte	0x453
 3946 04e5 02       		.uleb128 0x2
 3947 04e6 91       		.byte	0x91
 3948 04e7 74       		.sleb128 -12
 3949 04e8 00       		.byte	0
 3950 04e9 0E       		.uleb128 0xe
 3951 04ea 0E050000 		.4byte	.LASF64
 3952 04ee 01       		.byte	0x1
 3953 04ef 8E09     		.2byte	0x98e
 3954 04f1 D2000000 		.4byte	0xd2
 3955 04f5 00000000 		.4byte	.LFB23
 3956 04f9 36000000 		.4byte	.LFE23-.LFB23
 3957 04fd 01       		.uleb128 0x1
 3958 04fe 9C       		.byte	0x9c
 3959 04ff 22050000 		.4byte	0x522
 3960 0503 0B       		.uleb128 0xb
 3961 0504 12030000 		.4byte	.LASF58
 3962 0508 01       		.byte	0x1
 3963 0509 8E09     		.2byte	0x98e
 3964 050b 6B000000 		.4byte	0x6b
 3965 050f 02       		.uleb128 0x2
 3966 0510 91       		.byte	0x91
 3967 0511 6F       		.sleb128 -17
 3968 0512 0C       		.uleb128 0xc
 3969 0513 00000000 		.4byte	.LASF61
 3970 0517 01       		.byte	0x1
 3971 0518 9009     		.2byte	0x990
 3972 051a 53040000 		.4byte	0x453
 3973 051e 02       		.uleb128 0x2
 3974 051f 91       		.byte	0x91
 3975 0520 74       		.sleb128 -12
 3976 0521 00       		.byte	0
 3977 0522 0A       		.uleb128 0xa
 3978 0523 D6040000 		.4byte	.LASF65
 3979 0527 01       		.byte	0x1
 3980 0528 A109     		.2byte	0x9a1
 3981 052a 00000000 		.4byte	.LFB24
 3982 052e A8000000 		.4byte	.LFE24-.LFB24
 3983 0532 01       		.uleb128 0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 128


 3984 0533 9C       		.byte	0x9c
 3985 0534 84050000 		.4byte	0x584
 3986 0538 0B       		.uleb128 0xb
 3987 0539 12030000 		.4byte	.LASF58
 3988 053d 01       		.byte	0x1
 3989 053e A109     		.2byte	0x9a1
 3990 0540 6B000000 		.4byte	0x6b
 3991 0544 02       		.uleb128 0x2
 3992 0545 91       		.byte	0x91
 3993 0546 5F       		.sleb128 -33
 3994 0547 0B       		.uleb128 0xb
 3995 0548 19030000 		.4byte	.LASF66
 3996 054c 01       		.byte	0x1
 3997 054d A109     		.2byte	0x9a1
 3998 054f 6B000000 		.4byte	0x6b
 3999 0553 02       		.uleb128 0x2
 4000 0554 91       		.byte	0x91
 4001 0555 5E       		.sleb128 -34
 4002 0556 0C       		.uleb128 0xc
 4003 0557 2B010000 		.4byte	.LASF24
 4004 055b 01       		.byte	0x1
 4005 055c A309     		.2byte	0x9a3
 4006 055e 6B000000 		.4byte	0x6b
 4007 0562 02       		.uleb128 0x2
 4008 0563 91       		.byte	0x91
 4009 0564 6B       		.sleb128 -21
 4010 0565 0C       		.uleb128 0xc
 4011 0566 9B010000 		.4byte	.LASF67
 4012 056a 01       		.byte	0x1
 4013 056b A409     		.2byte	0x9a4
 4014 056d 83000000 		.4byte	0x83
 4015 0571 02       		.uleb128 0x2
 4016 0572 91       		.byte	0x91
 4017 0573 6C       		.sleb128 -20
 4018 0574 0C       		.uleb128 0xc
 4019 0575 1E020000 		.4byte	.LASF68
 4020 0579 01       		.byte	0x1
 4021 057a A509     		.2byte	0x9a5
 4022 057c 83000000 		.4byte	0x83
 4023 0580 02       		.uleb128 0x2
 4024 0581 91       		.byte	0x91
 4025 0582 64       		.sleb128 -28
 4026 0583 00       		.byte	0
 4027 0584 0E       		.uleb128 0xe
 4028 0585 F2010000 		.4byte	.LASF69
 4029 0589 01       		.byte	0x1
 4030 058a C309     		.2byte	0x9c3
 4031 058c 6B000000 		.4byte	0x6b
 4032 0590 00000000 		.4byte	.LFB25
 4033 0594 58000000 		.4byte	.LFE25-.LFB25
 4034 0598 01       		.uleb128 0x1
 4035 0599 9C       		.byte	0x9c
 4036 059a BD050000 		.4byte	0x5bd
 4037 059e 0B       		.uleb128 0xb
 4038 059f 12030000 		.4byte	.LASF58
 4039 05a3 01       		.byte	0x1
 4040 05a4 C309     		.2byte	0x9c3
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 129


 4041 05a6 6B000000 		.4byte	0x6b
 4042 05aa 02       		.uleb128 0x2
 4043 05ab 91       		.byte	0x91
 4044 05ac 6F       		.sleb128 -17
 4045 05ad 0C       		.uleb128 0xc
 4046 05ae 19030000 		.4byte	.LASF66
 4047 05b2 01       		.byte	0x1
 4048 05b3 C509     		.2byte	0x9c5
 4049 05b5 6B000000 		.4byte	0x6b
 4050 05b9 02       		.uleb128 0x2
 4051 05ba 91       		.byte	0x91
 4052 05bb 77       		.sleb128 -9
 4053 05bc 00       		.byte	0
 4054 05bd 0D       		.uleb128 0xd
 4055 05be 75050000 		.4byte	.LASF70
 4056 05c2 01       		.byte	0x1
 4057 05c3 D809     		.2byte	0x9d8
 4058 05c5 00000000 		.4byte	.LFB26
 4059 05c9 2C000000 		.4byte	.LFE26-.LFB26
 4060 05cd 01       		.uleb128 0x1
 4061 05ce 9C       		.byte	0x9c
 4062 05cf E3050000 		.4byte	0x5e3
 4063 05d3 0B       		.uleb128 0xb
 4064 05d4 12030000 		.4byte	.LASF58
 4065 05d8 01       		.byte	0x1
 4066 05d9 D809     		.2byte	0x9d8
 4067 05db 6B000000 		.4byte	0x6b
 4068 05df 02       		.uleb128 0x2
 4069 05e0 91       		.byte	0x91
 4070 05e1 77       		.sleb128 -9
 4071 05e2 00       		.byte	0
 4072 05e3 10       		.uleb128 0x10
 4073 05e4 F2000000 		.4byte	.LASF71
 4074 05e8 01       		.byte	0x1
 4075 05e9 EA09     		.2byte	0x9ea
 4076 05eb 6B000000 		.4byte	0x6b
 4077 05ef 00000000 		.4byte	.LFB27
 4078 05f3 30000000 		.4byte	.LFE27-.LFB27
 4079 05f7 01       		.uleb128 0x1
 4080 05f8 9C       		.byte	0x9c
 4081 05f9 0D060000 		.4byte	0x60d
 4082 05fd 0B       		.uleb128 0xb
 4083 05fe 12030000 		.4byte	.LASF58
 4084 0602 01       		.byte	0x1
 4085 0603 EA09     		.2byte	0x9ea
 4086 0605 6B000000 		.4byte	0x6b
 4087 0609 02       		.uleb128 0x2
 4088 060a 91       		.byte	0x91
 4089 060b 77       		.sleb128 -9
 4090 060c 00       		.byte	0
 4091 060d 0D       		.uleb128 0xd
 4092 060e 56010000 		.4byte	.LASF72
 4093 0612 01       		.byte	0x1
 4094 0613 FA09     		.2byte	0x9fa
 4095 0615 00000000 		.4byte	.LFB28
 4096 0619 2C000000 		.4byte	.LFE28-.LFB28
 4097 061d 01       		.uleb128 0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 130


 4098 061e 9C       		.byte	0x9c
 4099 061f 33060000 		.4byte	0x633
 4100 0623 0B       		.uleb128 0xb
 4101 0624 12030000 		.4byte	.LASF58
 4102 0628 01       		.byte	0x1
 4103 0629 FA09     		.2byte	0x9fa
 4104 062b 6B000000 		.4byte	0x6b
 4105 062f 02       		.uleb128 0x2
 4106 0630 91       		.byte	0x91
 4107 0631 77       		.sleb128 -9
 4108 0632 00       		.byte	0
 4109 0633 0D       		.uleb128 0xd
 4110 0634 AD020000 		.4byte	.LASF73
 4111 0638 01       		.byte	0x1
 4112 0639 080A     		.2byte	0xa08
 4113 063b 00000000 		.4byte	.LFB29
 4114 063f 2C000000 		.4byte	.LFE29-.LFB29
 4115 0643 01       		.uleb128 0x1
 4116 0644 9C       		.byte	0x9c
 4117 0645 59060000 		.4byte	0x659
 4118 0649 0B       		.uleb128 0xb
 4119 064a 12030000 		.4byte	.LASF58
 4120 064e 01       		.byte	0x1
 4121 064f 080A     		.2byte	0xa08
 4122 0651 6B000000 		.4byte	0x6b
 4123 0655 02       		.uleb128 0x2
 4124 0656 91       		.byte	0x91
 4125 0657 77       		.sleb128 -9
 4126 0658 00       		.byte	0
 4127 0659 0D       		.uleb128 0xd
 4128 065a 61040000 		.4byte	.LASF74
 4129 065e 01       		.byte	0x1
 4130 065f 170A     		.2byte	0xa17
 4131 0661 00000000 		.4byte	.LFB30
 4132 0665 2C000000 		.4byte	.LFE30-.LFB30
 4133 0669 01       		.uleb128 0x1
 4134 066a 9C       		.byte	0x9c
 4135 066b 7F060000 		.4byte	0x67f
 4136 066f 0B       		.uleb128 0xb
 4137 0670 12030000 		.4byte	.LASF58
 4138 0674 01       		.byte	0x1
 4139 0675 170A     		.2byte	0xa17
 4140 0677 6B000000 		.4byte	0x6b
 4141 067b 02       		.uleb128 0x2
 4142 067c 91       		.byte	0x91
 4143 067d 77       		.sleb128 -9
 4144 067e 00       		.byte	0
 4145 067f 0D       		.uleb128 0xd
 4146 0680 39050000 		.4byte	.LASF75
 4147 0684 01       		.byte	0x1
 4148 0685 260A     		.2byte	0xa26
 4149 0687 00000000 		.4byte	.LFB31
 4150 068b 16000000 		.4byte	.LFE31-.LFB31
 4151 068f 01       		.uleb128 0x1
 4152 0690 9C       		.byte	0x9c
 4153 0691 A5060000 		.4byte	0x6a5
 4154 0695 0B       		.uleb128 0xb
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 131


 4155 0696 B8050000 		.4byte	.LASF52
 4156 069a 01       		.byte	0x1
 4157 069b 260A     		.2byte	0xa26
 4158 069d 6B000000 		.4byte	0x6b
 4159 06a1 02       		.uleb128 0x2
 4160 06a2 91       		.byte	0x91
 4161 06a3 77       		.sleb128 -9
 4162 06a4 00       		.byte	0
 4163 06a5 0F       		.uleb128 0xf
 4164 06a6 C9000000 		.4byte	.LASF76
 4165 06aa 01       		.byte	0x1
 4166 06ab 3E0A     		.2byte	0xa3e
 4167 06ad 00000000 		.4byte	.LFB32
 4168 06b1 24000000 		.4byte	.LFE32-.LFB32
 4169 06b5 01       		.uleb128 0x1
 4170 06b6 9C       		.byte	0x9c
 4171 06b7 0A       		.uleb128 0xa
 4172 06b8 C5060000 		.4byte	.LASF77
 4173 06bc 01       		.byte	0x1
 4174 06bd 520A     		.2byte	0xa52
 4175 06bf 00000000 		.4byte	.LFB33
 4176 06c3 4C000000 		.4byte	.LFE33-.LFB33
 4177 06c7 01       		.uleb128 0x1
 4178 06c8 9C       		.byte	0x9c
 4179 06c9 DD060000 		.4byte	0x6dd
 4180 06cd 0B       		.uleb128 0xb
 4181 06ce 1D050000 		.4byte	.LASF78
 4182 06d2 01       		.byte	0x1
 4183 06d3 520A     		.2byte	0xa52
 4184 06d5 83000000 		.4byte	0x83
 4185 06d9 02       		.uleb128 0x2
 4186 06da 91       		.byte	0x91
 4187 06db 74       		.sleb128 -12
 4188 06dc 00       		.byte	0
 4189 06dd 0A       		.uleb128 0xa
 4190 06de AE050000 		.4byte	.LASF79
 4191 06e2 01       		.byte	0x1
 4192 06e3 690A     		.2byte	0xa69
 4193 06e5 00000000 		.4byte	.LFB34
 4194 06e9 28000000 		.4byte	.LFE34-.LFB34
 4195 06ed 01       		.uleb128 0x1
 4196 06ee 9C       		.byte	0x9c
 4197 06ef 03070000 		.4byte	0x703
 4198 06f3 0B       		.uleb128 0xb
 4199 06f4 CA070000 		.4byte	.LASF80
 4200 06f8 01       		.byte	0x1
 4201 06f9 690A     		.2byte	0xa69
 4202 06fb 77000000 		.4byte	0x77
 4203 06ff 02       		.uleb128 0x2
 4204 0700 91       		.byte	0x91
 4205 0701 76       		.sleb128 -10
 4206 0702 00       		.byte	0
 4207 0703 0A       		.uleb128 0xa
 4208 0704 1F010000 		.4byte	.LASF81
 4209 0708 01       		.byte	0x1
 4210 0709 770A     		.2byte	0xa77
 4211 070b 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 132


 4212 070f 84000000 		.4byte	.LFE35-.LFB35
 4213 0713 01       		.uleb128 0x1
 4214 0714 9C       		.byte	0x9c
 4215 0715 29070000 		.4byte	0x729
 4216 0719 0B       		.uleb128 0xb
 4217 071a 1A010000 		.4byte	.LASF34
 4218 071e 01       		.byte	0x1
 4219 071f 770A     		.2byte	0xa77
 4220 0721 83000000 		.4byte	0x83
 4221 0725 02       		.uleb128 0x2
 4222 0726 91       		.byte	0x91
 4223 0727 74       		.sleb128 -12
 4224 0728 00       		.byte	0
 4225 0729 12       		.uleb128 0x12
 4226 072a 11040000 		.4byte	.LASF82
 4227 072e 01       		.byte	0x1
 4228 072f 970A     		.2byte	0xa97
 4229 0731 00000000 		.4byte	.LFB36
 4230 0735 24000000 		.4byte	.LFE36-.LFB36
 4231 0739 01       		.uleb128 0x1
 4232 073a 9C       		.byte	0x9c
 4233 073b 0A       		.uleb128 0xa
 4234 073c 10020000 		.4byte	.LASF83
 4235 0740 01       		.byte	0x1
 4236 0741 B40A     		.2byte	0xab4
 4237 0743 00000000 		.4byte	.LFB37
 4238 0747 60000000 		.4byte	.LFE37-.LFB37
 4239 074b 01       		.uleb128 0x1
 4240 074c 9C       		.byte	0x9c
 4241 074d 5F070000 		.4byte	0x75f
 4242 0751 13       		.uleb128 0x13
 4243 0752 6900     		.ascii	"i\000"
 4244 0754 01       		.byte	0x1
 4245 0755 B60A     		.2byte	0xab6
 4246 0757 83000000 		.4byte	0x83
 4247 075b 02       		.uleb128 0x2
 4248 075c 91       		.byte	0x91
 4249 075d 74       		.sleb128 -12
 4250 075e 00       		.byte	0
 4251 075f 12       		.uleb128 0x12
 4252 0760 6D060000 		.4byte	.LASF84
 4253 0764 01       		.byte	0x1
 4254 0765 D20A     		.2byte	0xad2
 4255 0767 00000000 		.4byte	.LFB38
 4256 076b 20000000 		.4byte	.LFE38-.LFB38
 4257 076f 01       		.uleb128 0x1
 4258 0770 9C       		.byte	0x9c
 4259 0771 0F       		.uleb128 0xf
 4260 0772 4C070000 		.4byte	.LASF85
 4261 0776 01       		.byte	0x1
 4262 0777 E30A     		.2byte	0xae3
 4263 0779 00000000 		.4byte	.LFB39
 4264 077d 1C000000 		.4byte	.LFE39-.LFB39
 4265 0781 01       		.uleb128 0x1
 4266 0782 9C       		.byte	0x9c
 4267 0783 0F       		.uleb128 0xf
 4268 0784 D9000000 		.4byte	.LASF86
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 133


 4269 0788 01       		.byte	0x1
 4270 0789 F30A     		.2byte	0xaf3
 4271 078b 00000000 		.4byte	.LFB40
 4272 078f 1C000000 		.4byte	.LFE40-.LFB40
 4273 0793 01       		.uleb128 0x1
 4274 0794 9C       		.byte	0x9c
 4275 0795 0F       		.uleb128 0xf
 4276 0796 E5060000 		.4byte	.LASF87
 4277 079a 01       		.byte	0x1
 4278 079b 030B     		.2byte	0xb03
 4279 079d 00000000 		.4byte	.LFB41
 4280 07a1 1C000000 		.4byte	.LFE41-.LFB41
 4281 07a5 01       		.uleb128 0x1
 4282 07a6 9C       		.byte	0x9c
 4283 07a7 0D       		.uleb128 0xd
 4284 07a8 DE070000 		.4byte	.LASF88
 4285 07ac 01       		.byte	0x1
 4286 07ad 140B     		.2byte	0xb14
 4287 07af 00000000 		.4byte	.LFB42
 4288 07b3 20000000 		.4byte	.LFE42-.LFB42
 4289 07b7 01       		.uleb128 0x1
 4290 07b8 9C       		.byte	0x9c
 4291 07b9 CD070000 		.4byte	0x7cd
 4292 07bd 0B       		.uleb128 0xb
 4293 07be 1E020000 		.4byte	.LASF68
 4294 07c2 01       		.byte	0x1
 4295 07c3 140B     		.2byte	0xb14
 4296 07c5 83000000 		.4byte	0x83
 4297 07c9 02       		.uleb128 0x2
 4298 07ca 91       		.byte	0x91
 4299 07cb 74       		.sleb128 -12
 4300 07cc 00       		.byte	0
 4301 07cd 11       		.uleb128 0x11
 4302 07ce 3A010000 		.4byte	.LASF90
 4303 07d2 01       		.byte	0x1
 4304 07d3 240B     		.2byte	0xb24
 4305 07d5 83000000 		.4byte	0x83
 4306 07d9 00000000 		.4byte	.LFB43
 4307 07dd 18000000 		.4byte	.LFE43-.LFB43
 4308 07e1 01       		.uleb128 0x1
 4309 07e2 9C       		.byte	0x9c
 4310 07e3 11       		.uleb128 0x11
 4311 07e4 B6040000 		.4byte	.LASF91
 4312 07e8 01       		.byte	0x1
 4313 07e9 340B     		.2byte	0xb34
 4314 07eb 83000000 		.4byte	0x83
 4315 07ef 00000000 		.4byte	.LFB44
 4316 07f3 18000000 		.4byte	.LFE44-.LFB44
 4317 07f7 01       		.uleb128 0x1
 4318 07f8 9C       		.byte	0x9c
 4319 07f9 0D       		.uleb128 0xd
 4320 07fa EB020000 		.4byte	.LASF92
 4321 07fe 01       		.byte	0x1
 4322 07ff 540B     		.2byte	0xb54
 4323 0801 00000000 		.4byte	.LFB45
 4324 0805 34000000 		.4byte	.LFE45-.LFB45
 4325 0809 01       		.uleb128 0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 134


 4326 080a 9C       		.byte	0x9c
 4327 080b 1F080000 		.4byte	0x81f
 4328 080f 0B       		.uleb128 0xb
 4329 0810 24020000 		.4byte	.LASF93
 4330 0814 01       		.byte	0x1
 4331 0815 540B     		.2byte	0xb54
 4332 0817 83000000 		.4byte	0x83
 4333 081b 02       		.uleb128 0x2
 4334 081c 91       		.byte	0x91
 4335 081d 74       		.sleb128 -12
 4336 081e 00       		.byte	0
 4337 081f 11       		.uleb128 0x11
 4338 0820 CD060000 		.4byte	.LASF94
 4339 0824 01       		.byte	0x1
 4340 0825 6D0B     		.2byte	0xb6d
 4341 0827 83000000 		.4byte	0x83
 4342 082b 00000000 		.4byte	.LFB46
 4343 082f 18000000 		.4byte	.LFE46-.LFB46
 4344 0833 01       		.uleb128 0x1
 4345 0834 9C       		.byte	0x9c
 4346 0835 11       		.uleb128 0x11
 4347 0836 3E020000 		.4byte	.LASF95
 4348 083a 01       		.byte	0x1
 4349 083b 840B     		.2byte	0xb84
 4350 083d 83000000 		.4byte	0x83
 4351 0841 00000000 		.4byte	.LFB47
 4352 0845 18000000 		.4byte	.LFE47-.LFB47
 4353 0849 01       		.uleb128 0x1
 4354 084a 9C       		.byte	0x9c
 4355 084b 0F       		.uleb128 0xf
 4356 084c 61020000 		.4byte	.LASF96
 4357 0850 01       		.byte	0x1
 4358 0851 910B     		.2byte	0xb91
 4359 0853 00000000 		.4byte	.LFB48
 4360 0857 14000000 		.4byte	.LFE48-.LFB48
 4361 085b 01       		.uleb128 0x1
 4362 085c 9C       		.byte	0x9c
 4363 085d 10       		.uleb128 0x10
 4364 085e 94060000 		.4byte	.LASF97
 4365 0862 01       		.byte	0x1
 4366 0863 B40B     		.2byte	0xbb4
 4367 0865 F3000000 		.4byte	0xf3
 4368 0869 00000000 		.4byte	.LFB49
 4369 086d 2C000000 		.4byte	.LFE49-.LFB49
 4370 0871 01       		.uleb128 0x1
 4371 0872 9C       		.byte	0x9c
 4372 0873 A5080000 		.4byte	0x8a5
 4373 0877 0B       		.uleb128 0xb
 4374 0878 12030000 		.4byte	.LASF58
 4375 087c 01       		.byte	0x1
 4376 087d B40B     		.2byte	0xbb4
 4377 087f 83000000 		.4byte	0x83
 4378 0883 02       		.uleb128 0x2
 4379 0884 91       		.byte	0x91
 4380 0885 6C       		.sleb128 -20
 4381 0886 0B       		.uleb128 0xb
 4382 0887 9C040000 		.4byte	.LASF98
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 135


 4383 088b 01       		.byte	0x1
 4384 088c B40B     		.2byte	0xbb4
 4385 088e F3000000 		.4byte	0xf3
 4386 0892 02       		.uleb128 0x2
 4387 0893 91       		.byte	0x91
 4388 0894 68       		.sleb128 -24
 4389 0895 0C       		.uleb128 0xc
 4390 0896 5A000000 		.4byte	.LASF99
 4391 089a 01       		.byte	0x1
 4392 089b B60B     		.2byte	0xbb6
 4393 089d F3000000 		.4byte	0xf3
 4394 08a1 02       		.uleb128 0x2
 4395 08a2 91       		.byte	0x91
 4396 08a3 74       		.sleb128 -12
 4397 08a4 00       		.byte	0
 4398 08a5 10       		.uleb128 0x10
 4399 08a6 63010000 		.4byte	.LASF100
 4400 08aa 01       		.byte	0x1
 4401 08ab CC0B     		.2byte	0xbcc
 4402 08ad F3000000 		.4byte	0xf3
 4403 08b1 00000000 		.4byte	.LFB50
 4404 08b5 1C000000 		.4byte	.LFE50-.LFB50
 4405 08b9 01       		.uleb128 0x1
 4406 08ba 9C       		.byte	0x9c
 4407 08bb CF080000 		.4byte	0x8cf
 4408 08bf 0B       		.uleb128 0xb
 4409 08c0 12030000 		.4byte	.LASF58
 4410 08c4 01       		.byte	0x1
 4411 08c5 CC0B     		.2byte	0xbcc
 4412 08c7 83000000 		.4byte	0x83
 4413 08cb 02       		.uleb128 0x2
 4414 08cc 91       		.byte	0x91
 4415 08cd 74       		.sleb128 -12
 4416 08ce 00       		.byte	0
 4417 08cf 14       		.uleb128 0x14
 4418 08d0 F1070000 		.4byte	.LASF121
 4419 08d4 01       		.byte	0x1
 4420 08d5 D90B     		.2byte	0xbd9
 4421 08d7 00000000 		.4byte	.LFB51
 4422 08db 44000000 		.4byte	.LFE51-.LFB51
 4423 08df 01       		.uleb128 0x1
 4424 08e0 9C       		.byte	0x9c
 4425 08e1 F3080000 		.4byte	0x8f3
 4426 08e5 13       		.uleb128 0x13
 4427 08e6 6900     		.ascii	"i\000"
 4428 08e8 01       		.byte	0x1
 4429 08e9 DB0B     		.2byte	0xbdb
 4430 08eb 83000000 		.4byte	0x83
 4431 08ef 02       		.uleb128 0x2
 4432 08f0 91       		.byte	0x91
 4433 08f1 74       		.sleb128 -12
 4434 08f2 00       		.byte	0
 4435 08f3 0D       		.uleb128 0xd
 4436 08f4 30020000 		.4byte	.LASF101
 4437 08f8 01       		.byte	0x1
 4438 08f9 F90B     		.2byte	0xbf9
 4439 08fb 00000000 		.4byte	.LFB52
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 136


 4440 08ff C0000000 		.4byte	.LFE52-.LFB52
 4441 0903 01       		.uleb128 0x1
 4442 0904 9C       		.byte	0x9c
 4443 0905 19090000 		.4byte	0x919
 4444 0909 0B       		.uleb128 0xb
 4445 090a BC060000 		.4byte	.LASF102
 4446 090e 01       		.byte	0x1
 4447 090f F90B     		.2byte	0xbf9
 4448 0911 19090000 		.4byte	0x919
 4449 0915 02       		.uleb128 0x2
 4450 0916 91       		.byte	0x91
 4451 0917 74       		.sleb128 -12
 4452 0918 00       		.byte	0
 4453 0919 06       		.uleb128 0x6
 4454 091a 04       		.byte	0x4
 4455 091b 83000000 		.4byte	0x83
 4456 091f 0D       		.uleb128 0xd
 4457 0920 40050000 		.4byte	.LASF103
 4458 0924 01       		.byte	0x1
 4459 0925 260C     		.2byte	0xc26
 4460 0927 00000000 		.4byte	.LFB53
 4461 092b 38000000 		.4byte	.LFE53-.LFB53
 4462 092f 01       		.uleb128 0x1
 4463 0930 9C       		.byte	0x9c
 4464 0931 54090000 		.4byte	0x954
 4465 0935 0B       		.uleb128 0xb
 4466 0936 2D040000 		.4byte	.LASF104
 4467 093a 01       		.byte	0x1
 4468 093b 260C     		.2byte	0xc26
 4469 093d 83000000 		.4byte	0x83
 4470 0941 02       		.uleb128 0x2
 4471 0942 91       		.byte	0x91
 4472 0943 6C       		.sleb128 -20
 4473 0944 0C       		.uleb128 0xc
 4474 0945 E4020000 		.4byte	.LASF105
 4475 0949 01       		.byte	0x1
 4476 094a 280C     		.2byte	0xc28
 4477 094c 83000000 		.4byte	0x83
 4478 0950 02       		.uleb128 0x2
 4479 0951 91       		.byte	0x91
 4480 0952 74       		.sleb128 -12
 4481 0953 00       		.byte	0
 4482 0954 0D       		.uleb128 0xd
 4483 0955 C5030000 		.4byte	.LASF106
 4484 0959 01       		.byte	0x1
 4485 095a 420C     		.2byte	0xc42
 4486 095c 00000000 		.4byte	.LFB54
 4487 0960 38000000 		.4byte	.LFE54-.LFB54
 4488 0964 01       		.uleb128 0x1
 4489 0965 9C       		.byte	0x9c
 4490 0966 89090000 		.4byte	0x989
 4491 096a 0B       		.uleb128 0xb
 4492 096b 2D040000 		.4byte	.LASF104
 4493 096f 01       		.byte	0x1
 4494 0970 420C     		.2byte	0xc42
 4495 0972 83000000 		.4byte	0x83
 4496 0976 02       		.uleb128 0x2
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 137


 4497 0977 91       		.byte	0x91
 4498 0978 6C       		.sleb128 -20
 4499 0979 0C       		.uleb128 0xc
 4500 097a E4020000 		.4byte	.LASF105
 4501 097e 01       		.byte	0x1
 4502 097f 440C     		.2byte	0xc44
 4503 0981 83000000 		.4byte	0x83
 4504 0985 02       		.uleb128 0x2
 4505 0986 91       		.byte	0x91
 4506 0987 74       		.sleb128 -12
 4507 0988 00       		.byte	0
 4508 0989 0D       		.uleb128 0xd
 4509 098a 2E070000 		.4byte	.LASF107
 4510 098e 01       		.byte	0x1
 4511 098f 5E0C     		.2byte	0xc5e
 4512 0991 00000000 		.4byte	.LFB55
 4513 0995 38000000 		.4byte	.LFE55-.LFB55
 4514 0999 01       		.uleb128 0x1
 4515 099a 9C       		.byte	0x9c
 4516 099b BE090000 		.4byte	0x9be
 4517 099f 0B       		.uleb128 0xb
 4518 09a0 2D040000 		.4byte	.LASF104
 4519 09a4 01       		.byte	0x1
 4520 09a5 5E0C     		.2byte	0xc5e
 4521 09a7 83000000 		.4byte	0x83
 4522 09ab 02       		.uleb128 0x2
 4523 09ac 91       		.byte	0x91
 4524 09ad 6C       		.sleb128 -20
 4525 09ae 0C       		.uleb128 0xc
 4526 09af E4020000 		.4byte	.LASF105
 4527 09b3 01       		.byte	0x1
 4528 09b4 600C     		.2byte	0xc60
 4529 09b6 83000000 		.4byte	0x83
 4530 09ba 02       		.uleb128 0x2
 4531 09bb 91       		.byte	0x91
 4532 09bc 74       		.sleb128 -12
 4533 09bd 00       		.byte	0
 4534 09be 0A       		.uleb128 0xa
 4535 09bf 3D040000 		.4byte	.LASF108
 4536 09c3 01       		.byte	0x1
 4537 09c4 7C0C     		.2byte	0xc7c
 4538 09c6 00000000 		.4byte	.LFB56
 4539 09ca A0000000 		.4byte	.LFE56-.LFB56
 4540 09ce 01       		.uleb128 0x1
 4541 09cf 9C       		.byte	0x9c
 4542 09d0 020A0000 		.4byte	0xa02
 4543 09d4 0B       		.uleb128 0xb
 4544 09d5 B9000000 		.4byte	.LASF109
 4545 09d9 01       		.byte	0x1
 4546 09da 7C0C     		.2byte	0xc7c
 4547 09dc 83000000 		.4byte	0x83
 4548 09e0 02       		.uleb128 0x2
 4549 09e1 91       		.byte	0x91
 4550 09e2 6C       		.sleb128 -20
 4551 09e3 0B       		.uleb128 0xb
 4552 09e4 2D040000 		.4byte	.LASF104
 4553 09e8 01       		.byte	0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 138


 4554 09e9 7C0C     		.2byte	0xc7c
 4555 09eb 83000000 		.4byte	0x83
 4556 09ef 02       		.uleb128 0x2
 4557 09f0 91       		.byte	0x91
 4558 09f1 68       		.sleb128 -24
 4559 09f2 0C       		.uleb128 0xc
 4560 09f3 E4020000 		.4byte	.LASF105
 4561 09f7 01       		.byte	0x1
 4562 09f8 7E0C     		.2byte	0xc7e
 4563 09fa 83000000 		.4byte	0x83
 4564 09fe 02       		.uleb128 0x2
 4565 09ff 91       		.byte	0x91
 4566 0a00 74       		.sleb128 -12
 4567 0a01 00       		.byte	0
 4568 0a02 15       		.uleb128 0x15
 4569 0a03 F3000000 		.4byte	0xf3
 4570 0a07 120A0000 		.4byte	0xa12
 4571 0a0b 16       		.uleb128 0x16
 4572 0a0c EC000000 		.4byte	0xec
 4573 0a10 04       		.byte	0x4
 4574 0a11 00       		.byte	0
 4575 0a12 17       		.uleb128 0x17
 4576 0a13 A9060000 		.4byte	.LASF110
 4577 0a17 01       		.byte	0x1
 4578 0a18 22       		.byte	0x22
 4579 0a19 020A0000 		.4byte	0xa02
 4580 0a1d 05       		.uleb128 0x5
 4581 0a1e 03       		.byte	0x3
 4582 0a1f 00000000 		.4byte	CySysTickCallbacks
 4583 0a23 18       		.uleb128 0x18
 4584 0a24 C8040000 		.4byte	.LASF111
 4585 0a28 01       		.byte	0x1
 4586 0a29 1B       		.byte	0x1b
 4587 0a2a 83000000 		.4byte	0x83
 4588 0a2e 05       		.uleb128 0x5
 4589 0a2f 03       		.byte	0x3
 4590 0a30 00000000 		.4byte	cydelayFreqHz
 4591 0a34 18       		.uleb128 0x18
 4592 0a35 7E010000 		.4byte	.LASF112
 4593 0a39 01       		.byte	0x1
 4594 0a3a 1C       		.byte	0x1c
 4595 0a3b 83000000 		.4byte	0x83
 4596 0a3f 05       		.uleb128 0x5
 4597 0a40 03       		.byte	0x3
 4598 0a41 00000000 		.4byte	cydelayFreqKhz
 4599 0a45 18       		.uleb128 0x18
 4600 0a46 0F070000 		.4byte	.LASF113
 4601 0a4a 01       		.byte	0x1
 4602 0a4b 1D       		.byte	0x1d
 4603 0a4c 6B000000 		.4byte	0x6b
 4604 0a50 05       		.uleb128 0x5
 4605 0a51 03       		.byte	0x3
 4606 0a52 00000000 		.4byte	cydelayFreqMhz
 4607 0a56 18       		.uleb128 0x18
 4608 0a57 03020000 		.4byte	.LASF114
 4609 0a5b 01       		.byte	0x1
 4610 0a5c 1E       		.byte	0x1e
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 139


 4611 0a5d 83000000 		.4byte	0x83
 4612 0a61 05       		.uleb128 0x5
 4613 0a62 03       		.byte	0x3
 4614 0a63 00000000 		.4byte	cydelay32kMs
 4615 0a67 18       		.uleb128 0x18
 4616 0a68 9B000000 		.4byte	.LASF115
 4617 0a6c 01       		.byte	0x1
 4618 0a6d 36       		.byte	0x36
 4619 0a6e 83000000 		.4byte	0x83
 4620 0a72 05       		.uleb128 0x5
 4621 0a73 03       		.byte	0x3
 4622 0a74 00000000 		.4byte	CySysTickInitVar
 4623 0a78 15       		.uleb128 0x15
 4624 0a79 880A0000 		.4byte	0xa88
 4625 0a7d 880A0000 		.4byte	0xa88
 4626 0a81 16       		.uleb128 0x16
 4627 0a82 EC000000 		.4byte	0xec
 4628 0a86 2D       		.byte	0x2d
 4629 0a87 00       		.byte	0
 4630 0a88 19       		.uleb128 0x19
 4631 0a89 6B000000 		.4byte	0x6b
 4632 0a8d 18       		.uleb128 0x18
 4633 0a8e A5040000 		.4byte	.LASF116
 4634 0a92 01       		.byte	0x1
 4635 0a93 3B       		.byte	0x3b
 4636 0a94 9E0A0000 		.4byte	0xa9e
 4637 0a98 05       		.uleb128 0x5
 4638 0a99 03       		.byte	0x3
 4639 0a9a 00000000 		.4byte	cyImoFreqMhz2Reg
 4640 0a9e 19       		.uleb128 0x19
 4641 0a9f 780A0000 		.4byte	0xa78
 4642 0aa3 18       		.uleb128 0x18
 4643 0aa4 40000000 		.4byte	.LASF117
 4644 0aa8 01       		.byte	0x1
 4645 0aa9 5C       		.byte	0x5c
 4646 0aaa 83000000 		.4byte	0x83
 4647 0aae 05       		.uleb128 0x5
 4648 0aaf 03       		.byte	0x3
 4649 0ab0 00000000 		.4byte	CySysClkPumpConfig
 4650 0ab4 00       		.byte	0
 4651              		.section	.debug_abbrev,"",%progbits
 4652              	.Ldebug_abbrev0:
 4653 0000 01       		.uleb128 0x1
 4654 0001 11       		.uleb128 0x11
 4655 0002 01       		.byte	0x1
 4656 0003 25       		.uleb128 0x25
 4657 0004 0E       		.uleb128 0xe
 4658 0005 13       		.uleb128 0x13
 4659 0006 0B       		.uleb128 0xb
 4660 0007 03       		.uleb128 0x3
 4661 0008 0E       		.uleb128 0xe
 4662 0009 1B       		.uleb128 0x1b
 4663 000a 0E       		.uleb128 0xe
 4664 000b 55       		.uleb128 0x55
 4665 000c 17       		.uleb128 0x17
 4666 000d 11       		.uleb128 0x11
 4667 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 140


 4668 000f 10       		.uleb128 0x10
 4669 0010 17       		.uleb128 0x17
 4670 0011 00       		.byte	0
 4671 0012 00       		.byte	0
 4672 0013 02       		.uleb128 0x2
 4673 0014 24       		.uleb128 0x24
 4674 0015 00       		.byte	0
 4675 0016 0B       		.uleb128 0xb
 4676 0017 0B       		.uleb128 0xb
 4677 0018 3E       		.uleb128 0x3e
 4678 0019 0B       		.uleb128 0xb
 4679 001a 03       		.uleb128 0x3
 4680 001b 0E       		.uleb128 0xe
 4681 001c 00       		.byte	0
 4682 001d 00       		.byte	0
 4683 001e 03       		.uleb128 0x3
 4684 001f 24       		.uleb128 0x24
 4685 0020 00       		.byte	0
 4686 0021 0B       		.uleb128 0xb
 4687 0022 0B       		.uleb128 0xb
 4688 0023 3E       		.uleb128 0x3e
 4689 0024 0B       		.uleb128 0xb
 4690 0025 03       		.uleb128 0x3
 4691 0026 08       		.uleb128 0x8
 4692 0027 00       		.byte	0
 4693 0028 00       		.byte	0
 4694 0029 04       		.uleb128 0x4
 4695 002a 16       		.uleb128 0x16
 4696 002b 00       		.byte	0
 4697 002c 03       		.uleb128 0x3
 4698 002d 0E       		.uleb128 0xe
 4699 002e 3A       		.uleb128 0x3a
 4700 002f 0B       		.uleb128 0xb
 4701 0030 3B       		.uleb128 0x3b
 4702 0031 05       		.uleb128 0x5
 4703 0032 49       		.uleb128 0x49
 4704 0033 13       		.uleb128 0x13
 4705 0034 00       		.byte	0
 4706 0035 00       		.byte	0
 4707 0036 05       		.uleb128 0x5
 4708 0037 35       		.uleb128 0x35
 4709 0038 00       		.byte	0
 4710 0039 49       		.uleb128 0x49
 4711 003a 13       		.uleb128 0x13
 4712 003b 00       		.byte	0
 4713 003c 00       		.byte	0
 4714 003d 06       		.uleb128 0x6
 4715 003e 0F       		.uleb128 0xf
 4716 003f 00       		.byte	0
 4717 0040 0B       		.uleb128 0xb
 4718 0041 0B       		.uleb128 0xb
 4719 0042 49       		.uleb128 0x49
 4720 0043 13       		.uleb128 0x13
 4721 0044 00       		.byte	0
 4722 0045 00       		.byte	0
 4723 0046 07       		.uleb128 0x7
 4724 0047 15       		.uleb128 0x15
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 141


 4725 0048 00       		.byte	0
 4726 0049 27       		.uleb128 0x27
 4727 004a 19       		.uleb128 0x19
 4728 004b 00       		.byte	0
 4729 004c 00       		.byte	0
 4730 004d 08       		.uleb128 0x8
 4731 004e 16       		.uleb128 0x16
 4732 004f 00       		.byte	0
 4733 0050 03       		.uleb128 0x3
 4734 0051 0E       		.uleb128 0xe
 4735 0052 3A       		.uleb128 0x3a
 4736 0053 0B       		.uleb128 0xb
 4737 0054 3B       		.uleb128 0x3b
 4738 0055 0B       		.uleb128 0xb
 4739 0056 49       		.uleb128 0x49
 4740 0057 13       		.uleb128 0x13
 4741 0058 00       		.byte	0
 4742 0059 00       		.byte	0
 4743 005a 09       		.uleb128 0x9
 4744 005b 2E       		.uleb128 0x2e
 4745 005c 00       		.byte	0
 4746 005d 3F       		.uleb128 0x3f
 4747 005e 19       		.uleb128 0x19
 4748 005f 03       		.uleb128 0x3
 4749 0060 0E       		.uleb128 0xe
 4750 0061 3A       		.uleb128 0x3a
 4751 0062 0B       		.uleb128 0xb
 4752 0063 3B       		.uleb128 0x3b
 4753 0064 0B       		.uleb128 0xb
 4754 0065 27       		.uleb128 0x27
 4755 0066 19       		.uleb128 0x19
 4756 0067 11       		.uleb128 0x11
 4757 0068 01       		.uleb128 0x1
 4758 0069 12       		.uleb128 0x12
 4759 006a 06       		.uleb128 0x6
 4760 006b 40       		.uleb128 0x40
 4761 006c 18       		.uleb128 0x18
 4762 006d 9742     		.uleb128 0x2117
 4763 006f 19       		.uleb128 0x19
 4764 0070 00       		.byte	0
 4765 0071 00       		.byte	0
 4766 0072 0A       		.uleb128 0xa
 4767 0073 2E       		.uleb128 0x2e
 4768 0074 01       		.byte	0x1
 4769 0075 3F       		.uleb128 0x3f
 4770 0076 19       		.uleb128 0x19
 4771 0077 03       		.uleb128 0x3
 4772 0078 0E       		.uleb128 0xe
 4773 0079 3A       		.uleb128 0x3a
 4774 007a 0B       		.uleb128 0xb
 4775 007b 3B       		.uleb128 0x3b
 4776 007c 05       		.uleb128 0x5
 4777 007d 27       		.uleb128 0x27
 4778 007e 19       		.uleb128 0x19
 4779 007f 11       		.uleb128 0x11
 4780 0080 01       		.uleb128 0x1
 4781 0081 12       		.uleb128 0x12
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 142


 4782 0082 06       		.uleb128 0x6
 4783 0083 40       		.uleb128 0x40
 4784 0084 18       		.uleb128 0x18
 4785 0085 9642     		.uleb128 0x2116
 4786 0087 19       		.uleb128 0x19
 4787 0088 01       		.uleb128 0x1
 4788 0089 13       		.uleb128 0x13
 4789 008a 00       		.byte	0
 4790 008b 00       		.byte	0
 4791 008c 0B       		.uleb128 0xb
 4792 008d 05       		.uleb128 0x5
 4793 008e 00       		.byte	0
 4794 008f 03       		.uleb128 0x3
 4795 0090 0E       		.uleb128 0xe
 4796 0091 3A       		.uleb128 0x3a
 4797 0092 0B       		.uleb128 0xb
 4798 0093 3B       		.uleb128 0x3b
 4799 0094 05       		.uleb128 0x5
 4800 0095 49       		.uleb128 0x49
 4801 0096 13       		.uleb128 0x13
 4802 0097 02       		.uleb128 0x2
 4803 0098 18       		.uleb128 0x18
 4804 0099 00       		.byte	0
 4805 009a 00       		.byte	0
 4806 009b 0C       		.uleb128 0xc
 4807 009c 34       		.uleb128 0x34
 4808 009d 00       		.byte	0
 4809 009e 03       		.uleb128 0x3
 4810 009f 0E       		.uleb128 0xe
 4811 00a0 3A       		.uleb128 0x3a
 4812 00a1 0B       		.uleb128 0xb
 4813 00a2 3B       		.uleb128 0x3b
 4814 00a3 05       		.uleb128 0x5
 4815 00a4 49       		.uleb128 0x49
 4816 00a5 13       		.uleb128 0x13
 4817 00a6 02       		.uleb128 0x2
 4818 00a7 18       		.uleb128 0x18
 4819 00a8 00       		.byte	0
 4820 00a9 00       		.byte	0
 4821 00aa 0D       		.uleb128 0xd
 4822 00ab 2E       		.uleb128 0x2e
 4823 00ac 01       		.byte	0x1
 4824 00ad 3F       		.uleb128 0x3f
 4825 00ae 19       		.uleb128 0x19
 4826 00af 03       		.uleb128 0x3
 4827 00b0 0E       		.uleb128 0xe
 4828 00b1 3A       		.uleb128 0x3a
 4829 00b2 0B       		.uleb128 0xb
 4830 00b3 3B       		.uleb128 0x3b
 4831 00b4 05       		.uleb128 0x5
 4832 00b5 27       		.uleb128 0x27
 4833 00b6 19       		.uleb128 0x19
 4834 00b7 11       		.uleb128 0x11
 4835 00b8 01       		.uleb128 0x1
 4836 00b9 12       		.uleb128 0x12
 4837 00ba 06       		.uleb128 0x6
 4838 00bb 40       		.uleb128 0x40
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 143


 4839 00bc 18       		.uleb128 0x18
 4840 00bd 9742     		.uleb128 0x2117
 4841 00bf 19       		.uleb128 0x19
 4842 00c0 01       		.uleb128 0x1
 4843 00c1 13       		.uleb128 0x13
 4844 00c2 00       		.byte	0
 4845 00c3 00       		.byte	0
 4846 00c4 0E       		.uleb128 0xe
 4847 00c5 2E       		.uleb128 0x2e
 4848 00c6 01       		.byte	0x1
 4849 00c7 3F       		.uleb128 0x3f
 4850 00c8 19       		.uleb128 0x19
 4851 00c9 03       		.uleb128 0x3
 4852 00ca 0E       		.uleb128 0xe
 4853 00cb 3A       		.uleb128 0x3a
 4854 00cc 0B       		.uleb128 0xb
 4855 00cd 3B       		.uleb128 0x3b
 4856 00ce 05       		.uleb128 0x5
 4857 00cf 27       		.uleb128 0x27
 4858 00d0 19       		.uleb128 0x19
 4859 00d1 49       		.uleb128 0x49
 4860 00d2 13       		.uleb128 0x13
 4861 00d3 11       		.uleb128 0x11
 4862 00d4 01       		.uleb128 0x1
 4863 00d5 12       		.uleb128 0x12
 4864 00d6 06       		.uleb128 0x6
 4865 00d7 40       		.uleb128 0x40
 4866 00d8 18       		.uleb128 0x18
 4867 00d9 9642     		.uleb128 0x2116
 4868 00db 19       		.uleb128 0x19
 4869 00dc 01       		.uleb128 0x1
 4870 00dd 13       		.uleb128 0x13
 4871 00de 00       		.byte	0
 4872 00df 00       		.byte	0
 4873 00e0 0F       		.uleb128 0xf
 4874 00e1 2E       		.uleb128 0x2e
 4875 00e2 00       		.byte	0
 4876 00e3 3F       		.uleb128 0x3f
 4877 00e4 19       		.uleb128 0x19
 4878 00e5 03       		.uleb128 0x3
 4879 00e6 0E       		.uleb128 0xe
 4880 00e7 3A       		.uleb128 0x3a
 4881 00e8 0B       		.uleb128 0xb
 4882 00e9 3B       		.uleb128 0x3b
 4883 00ea 05       		.uleb128 0x5
 4884 00eb 27       		.uleb128 0x27
 4885 00ec 19       		.uleb128 0x19
 4886 00ed 11       		.uleb128 0x11
 4887 00ee 01       		.uleb128 0x1
 4888 00ef 12       		.uleb128 0x12
 4889 00f0 06       		.uleb128 0x6
 4890 00f1 40       		.uleb128 0x40
 4891 00f2 18       		.uleb128 0x18
 4892 00f3 9742     		.uleb128 0x2117
 4893 00f5 19       		.uleb128 0x19
 4894 00f6 00       		.byte	0
 4895 00f7 00       		.byte	0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 144


 4896 00f8 10       		.uleb128 0x10
 4897 00f9 2E       		.uleb128 0x2e
 4898 00fa 01       		.byte	0x1
 4899 00fb 3F       		.uleb128 0x3f
 4900 00fc 19       		.uleb128 0x19
 4901 00fd 03       		.uleb128 0x3
 4902 00fe 0E       		.uleb128 0xe
 4903 00ff 3A       		.uleb128 0x3a
 4904 0100 0B       		.uleb128 0xb
 4905 0101 3B       		.uleb128 0x3b
 4906 0102 05       		.uleb128 0x5
 4907 0103 27       		.uleb128 0x27
 4908 0104 19       		.uleb128 0x19
 4909 0105 49       		.uleb128 0x49
 4910 0106 13       		.uleb128 0x13
 4911 0107 11       		.uleb128 0x11
 4912 0108 01       		.uleb128 0x1
 4913 0109 12       		.uleb128 0x12
 4914 010a 06       		.uleb128 0x6
 4915 010b 40       		.uleb128 0x40
 4916 010c 18       		.uleb128 0x18
 4917 010d 9742     		.uleb128 0x2117
 4918 010f 19       		.uleb128 0x19
 4919 0110 01       		.uleb128 0x1
 4920 0111 13       		.uleb128 0x13
 4921 0112 00       		.byte	0
 4922 0113 00       		.byte	0
 4923 0114 11       		.uleb128 0x11
 4924 0115 2E       		.uleb128 0x2e
 4925 0116 00       		.byte	0
 4926 0117 3F       		.uleb128 0x3f
 4927 0118 19       		.uleb128 0x19
 4928 0119 03       		.uleb128 0x3
 4929 011a 0E       		.uleb128 0xe
 4930 011b 3A       		.uleb128 0x3a
 4931 011c 0B       		.uleb128 0xb
 4932 011d 3B       		.uleb128 0x3b
 4933 011e 05       		.uleb128 0x5
 4934 011f 27       		.uleb128 0x27
 4935 0120 19       		.uleb128 0x19
 4936 0121 49       		.uleb128 0x49
 4937 0122 13       		.uleb128 0x13
 4938 0123 11       		.uleb128 0x11
 4939 0124 01       		.uleb128 0x1
 4940 0125 12       		.uleb128 0x12
 4941 0126 06       		.uleb128 0x6
 4942 0127 40       		.uleb128 0x40
 4943 0128 18       		.uleb128 0x18
 4944 0129 9742     		.uleb128 0x2117
 4945 012b 19       		.uleb128 0x19
 4946 012c 00       		.byte	0
 4947 012d 00       		.byte	0
 4948 012e 12       		.uleb128 0x12
 4949 012f 2E       		.uleb128 0x2e
 4950 0130 00       		.byte	0
 4951 0131 3F       		.uleb128 0x3f
 4952 0132 19       		.uleb128 0x19
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 145


 4953 0133 03       		.uleb128 0x3
 4954 0134 0E       		.uleb128 0xe
 4955 0135 3A       		.uleb128 0x3a
 4956 0136 0B       		.uleb128 0xb
 4957 0137 3B       		.uleb128 0x3b
 4958 0138 05       		.uleb128 0x5
 4959 0139 27       		.uleb128 0x27
 4960 013a 19       		.uleb128 0x19
 4961 013b 11       		.uleb128 0x11
 4962 013c 01       		.uleb128 0x1
 4963 013d 12       		.uleb128 0x12
 4964 013e 06       		.uleb128 0x6
 4965 013f 40       		.uleb128 0x40
 4966 0140 18       		.uleb128 0x18
 4967 0141 9642     		.uleb128 0x2116
 4968 0143 19       		.uleb128 0x19
 4969 0144 00       		.byte	0
 4970 0145 00       		.byte	0
 4971 0146 13       		.uleb128 0x13
 4972 0147 34       		.uleb128 0x34
 4973 0148 00       		.byte	0
 4974 0149 03       		.uleb128 0x3
 4975 014a 08       		.uleb128 0x8
 4976 014b 3A       		.uleb128 0x3a
 4977 014c 0B       		.uleb128 0xb
 4978 014d 3B       		.uleb128 0x3b
 4979 014e 05       		.uleb128 0x5
 4980 014f 49       		.uleb128 0x49
 4981 0150 13       		.uleb128 0x13
 4982 0151 02       		.uleb128 0x2
 4983 0152 18       		.uleb128 0x18
 4984 0153 00       		.byte	0
 4985 0154 00       		.byte	0
 4986 0155 14       		.uleb128 0x14
 4987 0156 2E       		.uleb128 0x2e
 4988 0157 01       		.byte	0x1
 4989 0158 03       		.uleb128 0x3
 4990 0159 0E       		.uleb128 0xe
 4991 015a 3A       		.uleb128 0x3a
 4992 015b 0B       		.uleb128 0xb
 4993 015c 3B       		.uleb128 0x3b
 4994 015d 05       		.uleb128 0x5
 4995 015e 27       		.uleb128 0x27
 4996 015f 19       		.uleb128 0x19
 4997 0160 11       		.uleb128 0x11
 4998 0161 01       		.uleb128 0x1
 4999 0162 12       		.uleb128 0x12
 5000 0163 06       		.uleb128 0x6
 5001 0164 40       		.uleb128 0x40
 5002 0165 18       		.uleb128 0x18
 5003 0166 9642     		.uleb128 0x2116
 5004 0168 19       		.uleb128 0x19
 5005 0169 01       		.uleb128 0x1
 5006 016a 13       		.uleb128 0x13
 5007 016b 00       		.byte	0
 5008 016c 00       		.byte	0
 5009 016d 15       		.uleb128 0x15
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 146


 5010 016e 01       		.uleb128 0x1
 5011 016f 01       		.byte	0x1
 5012 0170 49       		.uleb128 0x49
 5013 0171 13       		.uleb128 0x13
 5014 0172 01       		.uleb128 0x1
 5015 0173 13       		.uleb128 0x13
 5016 0174 00       		.byte	0
 5017 0175 00       		.byte	0
 5018 0176 16       		.uleb128 0x16
 5019 0177 21       		.uleb128 0x21
 5020 0178 00       		.byte	0
 5021 0179 49       		.uleb128 0x49
 5022 017a 13       		.uleb128 0x13
 5023 017b 2F       		.uleb128 0x2f
 5024 017c 0B       		.uleb128 0xb
 5025 017d 00       		.byte	0
 5026 017e 00       		.byte	0
 5027 017f 17       		.uleb128 0x17
 5028 0180 34       		.uleb128 0x34
 5029 0181 00       		.byte	0
 5030 0182 03       		.uleb128 0x3
 5031 0183 0E       		.uleb128 0xe
 5032 0184 3A       		.uleb128 0x3a
 5033 0185 0B       		.uleb128 0xb
 5034 0186 3B       		.uleb128 0x3b
 5035 0187 0B       		.uleb128 0xb
 5036 0188 49       		.uleb128 0x49
 5037 0189 13       		.uleb128 0x13
 5038 018a 02       		.uleb128 0x2
 5039 018b 18       		.uleb128 0x18
 5040 018c 00       		.byte	0
 5041 018d 00       		.byte	0
 5042 018e 18       		.uleb128 0x18
 5043 018f 34       		.uleb128 0x34
 5044 0190 00       		.byte	0
 5045 0191 03       		.uleb128 0x3
 5046 0192 0E       		.uleb128 0xe
 5047 0193 3A       		.uleb128 0x3a
 5048 0194 0B       		.uleb128 0xb
 5049 0195 3B       		.uleb128 0x3b
 5050 0196 0B       		.uleb128 0xb
 5051 0197 49       		.uleb128 0x49
 5052 0198 13       		.uleb128 0x13
 5053 0199 3F       		.uleb128 0x3f
 5054 019a 19       		.uleb128 0x19
 5055 019b 02       		.uleb128 0x2
 5056 019c 18       		.uleb128 0x18
 5057 019d 00       		.byte	0
 5058 019e 00       		.byte	0
 5059 019f 19       		.uleb128 0x19
 5060 01a0 26       		.uleb128 0x26
 5061 01a1 00       		.byte	0
 5062 01a2 49       		.uleb128 0x49
 5063 01a3 13       		.uleb128 0x13
 5064 01a4 00       		.byte	0
 5065 01a5 00       		.byte	0
 5066 01a6 00       		.byte	0
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 147


 5067              		.section	.debug_aranges,"",%progbits
 5068 0000 CC010000 		.4byte	0x1cc
 5069 0004 0200     		.2byte	0x2
 5070 0006 00000000 		.4byte	.Ldebug_info0
 5071 000a 04       		.byte	0x4
 5072 000b 00       		.byte	0
 5073 000c 0000     		.2byte	0
 5074 000e 0000     		.2byte	0
 5075 0010 00000000 		.4byte	.LFB2
 5076 0014 1C000000 		.4byte	.LFE2-.LFB2
 5077 0018 00000000 		.4byte	.LFB3
 5078 001c 1C000000 		.4byte	.LFE3-.LFB3
 5079 0020 00000000 		.4byte	.LFB4
 5080 0024 48000000 		.4byte	.LFE4-.LFB4
 5081 0028 00000000 		.4byte	.LFB5
 5082 002c 50000000 		.4byte	.LFE5-.LFB5
 5083 0030 00000000 		.4byte	.LFB6
 5084 0034 34000000 		.4byte	.LFE6-.LFB6
 5085 0038 00000000 		.4byte	.LFB7
 5086 003c 48000000 		.4byte	.LFE7-.LFB7
 5087 0040 00000000 		.4byte	.LFB8
 5088 0044 E4010000 		.4byte	.LFE8-.LFB8
 5089 0048 00000000 		.4byte	.LFB9
 5090 004c 74000000 		.4byte	.LFE9-.LFB9
 5091 0050 00000000 		.4byte	.LFB10
 5092 0054 30000000 		.4byte	.LFE10-.LFB10
 5093 0058 00000000 		.4byte	.LFB11
 5094 005c 20000000 		.4byte	.LFE11-.LFB11
 5095 0060 00000000 		.4byte	.LFB12
 5096 0064 58000000 		.4byte	.LFE12-.LFB12
 5097 0068 00000000 		.4byte	.LFB13
 5098 006c 64000000 		.4byte	.LFE13-.LFB13
 5099 0070 00000000 		.4byte	.LFB14
 5100 0074 2C000000 		.4byte	.LFE14-.LFB14
 5101 0078 00000000 		.4byte	.LFB15
 5102 007c 18000000 		.4byte	.LFE15-.LFB15
 5103 0080 00000000 		.4byte	.LFB16
 5104 0084 14000000 		.4byte	.LFE16-.LFB16
 5105 0088 00000000 		.4byte	.LFB17
 5106 008c 30000000 		.4byte	.LFE17-.LFB17
 5107 0090 00000000 		.4byte	.LFB18
 5108 0094 24000000 		.4byte	.LFE18-.LFB18
 5109 0098 00000000 		.4byte	.LFB19
 5110 009c 1C000000 		.4byte	.LFE19-.LFB19
 5111 00a0 00000000 		.4byte	.LFB20
 5112 00a4 48000000 		.4byte	.LFE20-.LFB20
 5113 00a8 00000000 		.4byte	.LFB21
 5114 00ac 34000000 		.4byte	.LFE21-.LFB21
 5115 00b0 00000000 		.4byte	.LFB22
 5116 00b4 4C000000 		.4byte	.LFE22-.LFB22
 5117 00b8 00000000 		.4byte	.LFB23
 5118 00bc 36000000 		.4byte	.LFE23-.LFB23
 5119 00c0 00000000 		.4byte	.LFB24
 5120 00c4 A8000000 		.4byte	.LFE24-.LFB24
 5121 00c8 00000000 		.4byte	.LFB25
 5122 00cc 58000000 		.4byte	.LFE25-.LFB25
 5123 00d0 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 148


 5124 00d4 2C000000 		.4byte	.LFE26-.LFB26
 5125 00d8 00000000 		.4byte	.LFB27
 5126 00dc 30000000 		.4byte	.LFE27-.LFB27
 5127 00e0 00000000 		.4byte	.LFB28
 5128 00e4 2C000000 		.4byte	.LFE28-.LFB28
 5129 00e8 00000000 		.4byte	.LFB29
 5130 00ec 2C000000 		.4byte	.LFE29-.LFB29
 5131 00f0 00000000 		.4byte	.LFB30
 5132 00f4 2C000000 		.4byte	.LFE30-.LFB30
 5133 00f8 00000000 		.4byte	.LFB31
 5134 00fc 16000000 		.4byte	.LFE31-.LFB31
 5135 0100 00000000 		.4byte	.LFB32
 5136 0104 24000000 		.4byte	.LFE32-.LFB32
 5137 0108 00000000 		.4byte	.LFB33
 5138 010c 4C000000 		.4byte	.LFE33-.LFB33
 5139 0110 00000000 		.4byte	.LFB34
 5140 0114 28000000 		.4byte	.LFE34-.LFB34
 5141 0118 00000000 		.4byte	.LFB35
 5142 011c 84000000 		.4byte	.LFE35-.LFB35
 5143 0120 00000000 		.4byte	.LFB36
 5144 0124 24000000 		.4byte	.LFE36-.LFB36
 5145 0128 00000000 		.4byte	.LFB37
 5146 012c 60000000 		.4byte	.LFE37-.LFB37
 5147 0130 00000000 		.4byte	.LFB38
 5148 0134 20000000 		.4byte	.LFE38-.LFB38
 5149 0138 00000000 		.4byte	.LFB39
 5150 013c 1C000000 		.4byte	.LFE39-.LFB39
 5151 0140 00000000 		.4byte	.LFB40
 5152 0144 1C000000 		.4byte	.LFE40-.LFB40
 5153 0148 00000000 		.4byte	.LFB41
 5154 014c 1C000000 		.4byte	.LFE41-.LFB41
 5155 0150 00000000 		.4byte	.LFB42
 5156 0154 20000000 		.4byte	.LFE42-.LFB42
 5157 0158 00000000 		.4byte	.LFB43
 5158 015c 18000000 		.4byte	.LFE43-.LFB43
 5159 0160 00000000 		.4byte	.LFB44
 5160 0164 18000000 		.4byte	.LFE44-.LFB44
 5161 0168 00000000 		.4byte	.LFB45
 5162 016c 34000000 		.4byte	.LFE45-.LFB45
 5163 0170 00000000 		.4byte	.LFB46
 5164 0174 18000000 		.4byte	.LFE46-.LFB46
 5165 0178 00000000 		.4byte	.LFB47
 5166 017c 18000000 		.4byte	.LFE47-.LFB47
 5167 0180 00000000 		.4byte	.LFB48
 5168 0184 14000000 		.4byte	.LFE48-.LFB48
 5169 0188 00000000 		.4byte	.LFB49
 5170 018c 2C000000 		.4byte	.LFE49-.LFB49
 5171 0190 00000000 		.4byte	.LFB50
 5172 0194 1C000000 		.4byte	.LFE50-.LFB50
 5173 0198 00000000 		.4byte	.LFB51
 5174 019c 44000000 		.4byte	.LFE51-.LFB51
 5175 01a0 00000000 		.4byte	.LFB52
 5176 01a4 C0000000 		.4byte	.LFE52-.LFB52
 5177 01a8 00000000 		.4byte	.LFB53
 5178 01ac 38000000 		.4byte	.LFE53-.LFB53
 5179 01b0 00000000 		.4byte	.LFB54
 5180 01b4 38000000 		.4byte	.LFE54-.LFB54
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 149


 5181 01b8 00000000 		.4byte	.LFB55
 5182 01bc 38000000 		.4byte	.LFE55-.LFB55
 5183 01c0 00000000 		.4byte	.LFB56
 5184 01c4 A0000000 		.4byte	.LFE56-.LFB56
 5185 01c8 00000000 		.4byte	0
 5186 01cc 00000000 		.4byte	0
 5187              		.section	.debug_ranges,"",%progbits
 5188              	.Ldebug_ranges0:
 5189 0000 00000000 		.4byte	.LFB2
 5190 0004 1C000000 		.4byte	.LFE2
 5191 0008 00000000 		.4byte	.LFB3
 5192 000c 1C000000 		.4byte	.LFE3
 5193 0010 00000000 		.4byte	.LFB4
 5194 0014 48000000 		.4byte	.LFE4
 5195 0018 00000000 		.4byte	.LFB5
 5196 001c 50000000 		.4byte	.LFE5
 5197 0020 00000000 		.4byte	.LFB6
 5198 0024 34000000 		.4byte	.LFE6
 5199 0028 00000000 		.4byte	.LFB7
 5200 002c 48000000 		.4byte	.LFE7
 5201 0030 00000000 		.4byte	.LFB8
 5202 0034 E4010000 		.4byte	.LFE8
 5203 0038 00000000 		.4byte	.LFB9
 5204 003c 74000000 		.4byte	.LFE9
 5205 0040 00000000 		.4byte	.LFB10
 5206 0044 30000000 		.4byte	.LFE10
 5207 0048 00000000 		.4byte	.LFB11
 5208 004c 20000000 		.4byte	.LFE11
 5209 0050 00000000 		.4byte	.LFB12
 5210 0054 58000000 		.4byte	.LFE12
 5211 0058 00000000 		.4byte	.LFB13
 5212 005c 64000000 		.4byte	.LFE13
 5213 0060 00000000 		.4byte	.LFB14
 5214 0064 2C000000 		.4byte	.LFE14
 5215 0068 00000000 		.4byte	.LFB15
 5216 006c 18000000 		.4byte	.LFE15
 5217 0070 00000000 		.4byte	.LFB16
 5218 0074 14000000 		.4byte	.LFE16
 5219 0078 00000000 		.4byte	.LFB17
 5220 007c 30000000 		.4byte	.LFE17
 5221 0080 00000000 		.4byte	.LFB18
 5222 0084 24000000 		.4byte	.LFE18
 5223 0088 00000000 		.4byte	.LFB19
 5224 008c 1C000000 		.4byte	.LFE19
 5225 0090 00000000 		.4byte	.LFB20
 5226 0094 48000000 		.4byte	.LFE20
 5227 0098 00000000 		.4byte	.LFB21
 5228 009c 34000000 		.4byte	.LFE21
 5229 00a0 00000000 		.4byte	.LFB22
 5230 00a4 4C000000 		.4byte	.LFE22
 5231 00a8 00000000 		.4byte	.LFB23
 5232 00ac 36000000 		.4byte	.LFE23
 5233 00b0 00000000 		.4byte	.LFB24
 5234 00b4 A8000000 		.4byte	.LFE24
 5235 00b8 00000000 		.4byte	.LFB25
 5236 00bc 58000000 		.4byte	.LFE25
 5237 00c0 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 150


 5238 00c4 2C000000 		.4byte	.LFE26
 5239 00c8 00000000 		.4byte	.LFB27
 5240 00cc 30000000 		.4byte	.LFE27
 5241 00d0 00000000 		.4byte	.LFB28
 5242 00d4 2C000000 		.4byte	.LFE28
 5243 00d8 00000000 		.4byte	.LFB29
 5244 00dc 2C000000 		.4byte	.LFE29
 5245 00e0 00000000 		.4byte	.LFB30
 5246 00e4 2C000000 		.4byte	.LFE30
 5247 00e8 00000000 		.4byte	.LFB31
 5248 00ec 16000000 		.4byte	.LFE31
 5249 00f0 00000000 		.4byte	.LFB32
 5250 00f4 24000000 		.4byte	.LFE32
 5251 00f8 00000000 		.4byte	.LFB33
 5252 00fc 4C000000 		.4byte	.LFE33
 5253 0100 00000000 		.4byte	.LFB34
 5254 0104 28000000 		.4byte	.LFE34
 5255 0108 00000000 		.4byte	.LFB35
 5256 010c 84000000 		.4byte	.LFE35
 5257 0110 00000000 		.4byte	.LFB36
 5258 0114 24000000 		.4byte	.LFE36
 5259 0118 00000000 		.4byte	.LFB37
 5260 011c 60000000 		.4byte	.LFE37
 5261 0120 00000000 		.4byte	.LFB38
 5262 0124 20000000 		.4byte	.LFE38
 5263 0128 00000000 		.4byte	.LFB39
 5264 012c 1C000000 		.4byte	.LFE39
 5265 0130 00000000 		.4byte	.LFB40
 5266 0134 1C000000 		.4byte	.LFE40
 5267 0138 00000000 		.4byte	.LFB41
 5268 013c 1C000000 		.4byte	.LFE41
 5269 0140 00000000 		.4byte	.LFB42
 5270 0144 20000000 		.4byte	.LFE42
 5271 0148 00000000 		.4byte	.LFB43
 5272 014c 18000000 		.4byte	.LFE43
 5273 0150 00000000 		.4byte	.LFB44
 5274 0154 18000000 		.4byte	.LFE44
 5275 0158 00000000 		.4byte	.LFB45
 5276 015c 34000000 		.4byte	.LFE45
 5277 0160 00000000 		.4byte	.LFB46
 5278 0164 18000000 		.4byte	.LFE46
 5279 0168 00000000 		.4byte	.LFB47
 5280 016c 18000000 		.4byte	.LFE47
 5281 0170 00000000 		.4byte	.LFB48
 5282 0174 14000000 		.4byte	.LFE48
 5283 0178 00000000 		.4byte	.LFB49
 5284 017c 2C000000 		.4byte	.LFE49
 5285 0180 00000000 		.4byte	.LFB50
 5286 0184 1C000000 		.4byte	.LFE50
 5287 0188 00000000 		.4byte	.LFB51
 5288 018c 44000000 		.4byte	.LFE51
 5289 0190 00000000 		.4byte	.LFB52
 5290 0194 C0000000 		.4byte	.LFE52
 5291 0198 00000000 		.4byte	.LFB53
 5292 019c 38000000 		.4byte	.LFE53
 5293 01a0 00000000 		.4byte	.LFB54
 5294 01a4 38000000 		.4byte	.LFE54
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 151


 5295 01a8 00000000 		.4byte	.LFB55
 5296 01ac 38000000 		.4byte	.LFE55
 5297 01b0 00000000 		.4byte	.LFB56
 5298 01b4 A0000000 		.4byte	.LFE56
 5299 01b8 00000000 		.4byte	0
 5300 01bc 00000000 		.4byte	0
 5301              		.section	.debug_line,"",%progbits
 5302              	.Ldebug_line0:
 5303 0000 79050000 		.section	.debug_str,"MS",%progbits,1
 5303      02004D00 
 5303      00000201 
 5303      FB0E0D00 
 5303      01010101 
 5304              	.LASF61:
 5305 0000 72616D56 		.ascii	"ramVectorTable\000"
 5305      6563746F 
 5305      72546162 
 5305      6C6500
 5306              	.LASF35:
 5307 000f 62675472 		.ascii	"bgTrim4\000"
 5307      696D3400 
 5308              	.LASF10:
 5309 0017 75696E74 		.ascii	"uint16\000"
 5309      313600
 5310              	.LASF54:
 5311 001e 696E7453 		.ascii	"intState\000"
 5311      74617465 
 5311      00
 5312              	.LASF26:
 5313 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5313      73436C6B 
 5313      57726974 
 5313      65486663 
 5313      6C6B4469 
 5314              	.LASF117:
 5315 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5315      73436C6B 
 5315      50756D70 
 5315      436F6E66 
 5315      696700
 5316              	.LASF60:
 5317 0053 6F6C6449 		.ascii	"oldIsr\000"
 5317      737200
 5318              	.LASF99:
 5319 005a 72657456 		.ascii	"retVal\000"
 5319      616C00
 5320              	.LASF53:
 5321 0061 43794469 		.ascii	"CyDisableInts\000"
 5321      7361626C 
 5321      65496E74 
 5321      7300
 5322              	.LASF38:
 5323 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5323      656E7449 
 5323      6D6F5472 
 5323      696D3256 
 5323      616C7565 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 152


 5324              	.LASF7:
 5325 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 5325      206C6F6E 
 5325      6720756E 
 5325      7369676E 
 5325      65642069 
 5326              	.LASF115:
 5327 009b 43795379 		.ascii	"CySysTickInitVar\000"
 5327      73546963 
 5327      6B496E69 
 5327      74566172 
 5327      00
 5328              	.LASF55:
 5329 00ac 4379456E 		.ascii	"CyEnableInts\000"
 5329      61626C65 
 5329      496E7473 
 5329      00
 5330              	.LASF109:
 5331 00b9 696E7465 		.ascii	"interfaceNumber\000"
 5331      72666163 
 5331      654E756D 
 5331      62657200 
 5332              	.LASF76:
 5333 00c9 4379536F 		.ascii	"CySoftwareReset\000"
 5333      66747761 
 5333      72655265 
 5333      73657400 
 5334              	.LASF86:
 5335 00d9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5335      73546963 
 5335      6B456E61 
 5335      626C6549 
 5335      6E746572 
 5336              	.LASF71:
 5337 00f2 4379496E 		.ascii	"CyIntGetState\000"
 5337      74476574 
 5337      53746174 
 5337      6500
 5338              	.LASF6:
 5339 0100 6C6F6E67 		.ascii	"long long int\000"
 5339      206C6F6E 
 5339      6720696E 
 5339      7400
 5340              	.LASF0:
 5341 010e 7369676E 		.ascii	"signed char\000"
 5341      65642063 
 5341      68617200 
 5342              	.LASF34:
 5343 011a 66726571 		.ascii	"freq\000"
 5343      00
 5344              	.LASF81:
 5345 011f 43794465 		.ascii	"CyDelayFreq\000"
 5345      6C617946 
 5345      72657100 
 5346              	.LASF24:
 5347 012b 696E7465 		.ascii	"interruptState\000"
 5347      72727570 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 153


 5347      74537461 
 5347      746500
 5348              	.LASF90:
 5349 013a 43795379 		.ascii	"CySysTickGetReload\000"
 5349      73546963 
 5349      6B476574 
 5349      52656C6F 
 5349      616400
 5350              	.LASF4:
 5351 014d 6C6F6E67 		.ascii	"long int\000"
 5351      20696E74 
 5351      00
 5352              	.LASF72:
 5353 0156 4379496E 		.ascii	"CyIntDisable\000"
 5353      74446973 
 5353      61626C65 
 5353      00
 5354              	.LASF100:
 5355 0163 43795379 		.ascii	"CySysTickGetCallback\000"
 5355      73546963 
 5355      6B476574 
 5355      43616C6C 
 5355      6261636B 
 5356              	.LASF9:
 5357 0178 75696E74 		.ascii	"uint8\000"
 5357      3800
 5358              	.LASF112:
 5359 017e 63796465 		.ascii	"cydelayFreqKhz\000"
 5359      6C617946 
 5359      7265714B 
 5359      687A00
 5360              	.LASF29:
 5361 018d 656E6162 		.ascii	"enable\000"
 5361      6C6500
 5362              	.LASF13:
 5363 0194 646F7562 		.ascii	"double\000"
 5363      6C6500
 5364              	.LASF67:
 5365 019b 73686966 		.ascii	"shift\000"
 5365      7400
 5366              	.LASF50:
 5367 01a1 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5367      734C7664 
 5367      436C6561 
 5367      72496E74 
 5367      65727275 
 5368              	.LASF11:
 5369 01b8 75696E74 		.ascii	"uint32\000"
 5369      333200
 5370              	.LASF44:
 5371 01bf 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5371      73436C6B 
 5371      45636F52 
 5371      65616453 
 5371      74617475 
 5372              	.LASF56:
 5373 01d5 6D61736B 		.ascii	"mask\000"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 154


 5373      00
 5374              	.LASF39:
 5375 01da 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5375      73436C6B 
 5375      47657453 
 5375      7973636C 
 5375      6B536F75 
 5376              	.LASF69:
 5377 01f2 4379496E 		.ascii	"CyIntGetPriority\000"
 5377      74476574 
 5377      5072696F 
 5377      72697479 
 5377      00
 5378              	.LASF114:
 5379 0203 63796465 		.ascii	"cydelay32kMs\000"
 5379      6C617933 
 5379      326B4D73 
 5379      00
 5380              	.LASF83:
 5381 0210 43795379 		.ascii	"CySysTickInit\000"
 5381      73546963 
 5381      6B496E69 
 5381      7400
 5382              	.LASF68:
 5383 021e 76616C75 		.ascii	"value\000"
 5383      6500
 5384              	.LASF93:
 5385 0224 636C6F63 		.ascii	"clockSource\000"
 5385      6B536F75 
 5385      72636500 
 5386              	.LASF101:
 5387 0230 43794765 		.ascii	"CyGetUniqueId\000"
 5387      74556E69 
 5387      71756549 
 5387      6400
 5388              	.LASF95:
 5389 023e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5389      73546963 
 5389      6B476574 
 5389      436F756E 
 5389      74466C61 
 5390              	.LASF8:
 5391 0254 756E7369 		.ascii	"unsigned int\000"
 5391      676E6564 
 5391      20696E74 
 5391      00
 5392              	.LASF96:
 5393 0261 43795379 		.ascii	"CySysTickClear\000"
 5393      73546963 
 5393      6B436C65 
 5393      617200
 5394              	.LASF5:
 5395 0270 6C6F6E67 		.ascii	"long unsigned int\000"
 5395      20756E73 
 5395      69676E65 
 5395      6420696E 
 5395      7400
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 155


 5396              	.LASF89:
 5397 0282 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5397      734C7664 
 5397      47657449 
 5397      6E746572 
 5397      72757074 
 5398              	.LASF23:
 5399 029d 43795379 		.ascii	"CySysClkImoStop\000"
 5399      73436C6B 
 5399      496D6F53 
 5399      746F7000 
 5400              	.LASF73:
 5401 02ad 4379496E 		.ascii	"CyIntSetPending\000"
 5401      74536574 
 5401      50656E64 
 5401      696E6700 
 5402              	.LASF51:
 5403 02bd 43795379 		.ascii	"CySysGetResetReason\000"
 5403      73476574 
 5403      52657365 
 5403      74526561 
 5403      736F6E00 
 5404              	.LASF3:
 5405 02d1 73686F72 		.ascii	"short unsigned int\000"
 5405      7420756E 
 5405      7369676E 
 5405      65642069 
 5405      6E7400
 5406              	.LASF105:
 5407 02e4 72656754 		.ascii	"regTmp\000"
 5407      6D7000
 5408              	.LASF92:
 5409 02eb 43795379 		.ascii	"CySysTickSetClockSource\000"
 5409      73546963 
 5409      6B536574 
 5409      436C6F63 
 5409      6B536F75 
 5410              	.LASF63:
 5411 0303 4379496E 		.ascii	"CyIntSetVector\000"
 5411      74536574 
 5411      56656374 
 5411      6F7200
 5412              	.LASF58:
 5413 0312 6E756D62 		.ascii	"number\000"
 5413      657200
 5414              	.LASF66:
 5415 0319 7072696F 		.ascii	"priority\000"
 5415      72697479 
 5415      00
 5416              	.LASF33:
 5417 0322 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5417      73436C6B 
 5417      57726974 
 5417      65496D6F 
 5417      46726571 
 5418              	.LASF118:
 5419 0337 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 156


 5419      43313120 
 5419      352E342E 
 5419      31203230 
 5419      31363036 
 5420 036a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5420      20726576 
 5420      6973696F 
 5420      6E203233 
 5420      37373135 
 5421 039d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5421      66756E63 
 5421      74696F6E 
 5421      2D736563 
 5421      74696F6E 
 5422              	.LASF106:
 5423 03c5 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5423      73536574 
 5423      466C6173 
 5423      68416363 
 5423      65737341 
 5424              	.LASF57:
 5425 03e4 4379496E 		.ascii	"CyIntSetSysVector\000"
 5425      74536574 
 5425      53797356 
 5425      6563746F 
 5425      7200
 5426              	.LASF27:
 5427 03f6 43795379 		.ascii	"CySysEnablePumpClock\000"
 5427      73456E61 
 5427      626C6550 
 5427      756D7043 
 5427      6C6F636B 
 5428              	.LASF17:
 5429 040b 72656733 		.ascii	"reg32\000"
 5429      3200
 5430              	.LASF82:
 5431 0411 43795379 		.ascii	"CySysTickStart\000"
 5431      73546963 
 5431      6B537461 
 5431      727400
 5432              	.LASF42:
 5433 0420 72657475 		.ascii	"returnStatus\000"
 5433      726E5374 
 5433      61747573 
 5433      00
 5434              	.LASF104:
 5435 042d 736F7572 		.ascii	"source\000"
 5435      636500
 5436              	.LASF20:
 5437 0434 73697A65 		.ascii	"sizetype\000"
 5437      74797065 
 5437      00
 5438              	.LASF108:
 5439 043d 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5439      73536574 
 5439      50657269 
 5439      70686572 
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 157


 5439      616C4163 
 5440              	.LASF74:
 5441 0461 4379496E 		.ascii	"CyIntClearPending\000"
 5441      74436C65 
 5441      61725065 
 5441      6E64696E 
 5441      6700
 5442              	.LASF19:
 5443 0473 6C6F6E67 		.ascii	"long double\000"
 5443      20646F75 
 5443      626C6500 
 5444              	.LASF59:
 5445 047f 61646472 		.ascii	"address\000"
 5445      65737300 
 5446              	.LASF36:
 5447 0487 62675472 		.ascii	"bgTrim5\000"
 5447      696D3500 
 5448              	.LASF30:
 5449 048f 73797363 		.ascii	"sysclkSource\000"
 5449      6C6B536F 
 5449      75726365 
 5449      00
 5450              	.LASF98:
 5451 049c 66756E63 		.ascii	"function\000"
 5451      74696F6E 
 5451      00
 5452              	.LASF116:
 5453 04a5 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5453      6F467265 
 5453      714D687A 
 5453      32526567 
 5453      00
 5454              	.LASF91:
 5455 04b6 43795379 		.ascii	"CySysTickGetValue\000"
 5455      73546963 
 5455      6B476574 
 5455      56616C75 
 5455      6500
 5456              	.LASF111:
 5457 04c8 63796465 		.ascii	"cydelayFreqHz\000"
 5457      6C617946 
 5457      72657148 
 5457      7A00
 5458              	.LASF65:
 5459 04d6 4379496E 		.ascii	"CyIntSetPriority\000"
 5459      74536574 
 5459      5072696F 
 5459      72697479 
 5459      00
 5460              	.LASF12:
 5461 04e7 666C6F61 		.ascii	"float\000"
 5461      7400
 5462              	.LASF47:
 5463 04ed 43795379 		.ascii	"CySysLvdEnable\000"
 5463      734C7664 
 5463      456E6162 
 5463      6C6500
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 158


 5464              	.LASF21:
 5465 04fc 63795379 		.ascii	"cySysTickCallback\000"
 5465      73546963 
 5465      6B43616C 
 5465      6C626163 
 5465      6B00
 5466              	.LASF64:
 5467 050e 4379496E 		.ascii	"CyIntGetVector\000"
 5467      74476574 
 5467      56656374 
 5467      6F7200
 5468              	.LASF78:
 5469 051d 6D696C6C 		.ascii	"milliseconds\000"
 5469      69736563 
 5469      6F6E6473 
 5469      00
 5470              	.LASF16:
 5471 052a 72656738 		.ascii	"reg8\000"
 5471      00
 5472              	.LASF48:
 5473 052f 74687265 		.ascii	"threshold\000"
 5473      73686F6C 
 5473      6400
 5474              	.LASF75:
 5475 0539 43794861 		.ascii	"CyHalt\000"
 5475      6C7400
 5476              	.LASF103:
 5477 0540 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5477      73536574 
 5477      52616D41 
 5477      63636573 
 5477      73417262 
 5478              	.LASF1:
 5479 055d 756E7369 		.ascii	"unsigned char\000"
 5479      676E6564 
 5479      20636861 
 5479      7200
 5480              	.LASF2:
 5481 056b 73686F72 		.ascii	"short int\000"
 5481      7420696E 
 5481      7400
 5482              	.LASF70:
 5483 0575 4379496E 		.ascii	"CyIntEnable\000"
 5483      74456E61 
 5483      626C6500 
 5484              	.LASF62:
 5485 0581 4379496E 		.ascii	"CyIntGetSysVector\000"
 5485      74476574 
 5485      53797356 
 5485      6563746F 
 5485      7200
 5486              	.LASF28:
 5487 0593 636C6B53 		.ascii	"clkSelect\000"
 5487      656C6563 
 5487      7400
 5488              	.LASF40:
 5489 059d 43795379 		.ascii	"CySysClkEcoStart\000"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 159


 5489      73436C6B 
 5489      45636F53 
 5489      74617274 
 5489      00
 5490              	.LASF79:
 5491 05ae 43794465 		.ascii	"CyDelayUs\000"
 5491      6C617955 
 5491      7300
 5492              	.LASF52:
 5493 05b8 72656173 		.ascii	"reason\000"
 5493      6F6E00
 5494              	.LASF120:
 5495 05bf 433A5C55 		.ascii	"C:\\Users\\Benakapoi\\Desktop\\PSoC-4-BLE-master\\P"
 5495      73657273 
 5495      5C42656E 
 5495      616B6170 
 5495      6F695C44 
 5496 05ed 536F432D 		.ascii	"SoC-4-BLE-master\\100_Projects_in_100_Days\\Day020_"
 5496      342D424C 
 5496      452D6D61 
 5496      73746572 
 5496      5C313030 
 5497 061e 424C455F 		.ascii	"BLE_UART\\UART_to_BLE_peripheral\\UART_to_BLE_perip"
 5497      55415254 
 5497      5C554152 
 5497      545F746F 
 5497      5F424C45 
 5498 064f 68657261 		.ascii	"heral.cydsn\000"
 5498      6C2E6379 
 5498      64736E00 
 5499              	.LASF14:
 5500 065b 63686172 		.ascii	"char\000"
 5500      00
 5501              	.LASF18:
 5502 0660 63796973 		.ascii	"cyisraddress\000"
 5502      72616464 
 5502      72657373 
 5502      00
 5503              	.LASF84:
 5504 066d 43795379 		.ascii	"CySysTickEnable\000"
 5504      73546963 
 5504      6B456E61 
 5504      626C6500 
 5505              	.LASF31:
 5506 067d 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5506      73436C6B 
 5506      57726974 
 5506      65537973 
 5506      636C6B44 
 5507              	.LASF97:
 5508 0694 43795379 		.ascii	"CySysTickSetCallback\000"
 5508      73546963 
 5508      6B536574 
 5508      43616C6C 
 5508      6261636B 
 5509              	.LASF110:
 5510 06a9 43795379 		.ascii	"CySysTickCallbacks\000"
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 160


 5510      73546963 
 5510      6B43616C 
 5510      6C626163 
 5510      6B7300
 5511              	.LASF102:
 5512 06bc 756E6971 		.ascii	"uniqueId\000"
 5512      75654964 
 5512      00
 5513              	.LASF77:
 5514 06c5 43794465 		.ascii	"CyDelay\000"
 5514      6C617900 
 5515              	.LASF94:
 5516 06cd 43795379 		.ascii	"CySysTickGetClockSource\000"
 5516      73546963 
 5516      6B476574 
 5516      436C6F63 
 5516      6B536F75 
 5517              	.LASF87:
 5518 06e5 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5518      73546963 
 5518      6B446973 
 5518      61626C65 
 5518      496E7465 
 5519              	.LASF49:
 5520 06ff 43795379 		.ascii	"CySysLvdDisable\000"
 5520      734C7664 
 5520      44697361 
 5520      626C6500 
 5521              	.LASF113:
 5522 070f 63796465 		.ascii	"cydelayFreqMhz\000"
 5522      6C617946 
 5522      7265714D 
 5522      687A00
 5523              	.LASF43:
 5524 071e 43795379 		.ascii	"CySysClkEcoStop\000"
 5524      73436C6B 
 5524      45636F53 
 5524      746F7000 
 5525              	.LASF107:
 5526 072e 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5526      73536574 
 5526      446D6163 
 5526      41636365 
 5526      73734172 
 5527              	.LASF85:
 5528 074c 43795379 		.ascii	"CySysTickStop\000"
 5528      73546963 
 5528      6B53746F 
 5528      7000
 5529              	.LASF41:
 5530 075a 74696D65 		.ascii	"timeoutUs\000"
 5530      6F757455 
 5530      7300
 5531              	.LASF32:
 5532 0764 64697669 		.ascii	"divider\000"
 5532      64657200 
 5533              	.LASF46:
ARM GAS  C:\Users\BENAKA~1\AppData\Local\Temp\ccpCT24f.s 			page 161


 5534 076c 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5534      73436C6B 
 5534      57726974 
 5534      6545636F 
 5534      44697600 
 5535              	.LASF15:
 5536 0780 63797374 		.ascii	"cystatus\000"
 5536      61747573 
 5536      00
 5537              	.LASF22:
 5538 0789 43795379 		.ascii	"CySysClkImoStart\000"
 5538      73436C6B 
 5538      496D6F53 
 5538      74617274 
 5538      00
 5539              	.LASF37:
 5540 079a 6E657749 		.ascii	"newImoTrim2Value\000"
 5540      6D6F5472 
 5540      696D3256 
 5540      616C7565 
 5540      00
 5541              	.LASF119:
 5542 07ab 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5542      72617465 
 5542      645F536F 
 5542      75726365 
 5542      5C50536F 
 5543              	.LASF80:
 5544 07ca 6D696372 		.ascii	"microseconds\000"
 5544      6F736563 
 5544      6F6E6473 
 5544      00
 5545              	.LASF25:
 5546 07d7 746D7052 		.ascii	"tmpReg\000"
 5546      656700
 5547              	.LASF88:
 5548 07de 43795379 		.ascii	"CySysTickSetReload\000"
 5548      73546963 
 5548      6B536574 
 5548      52656C6F 
 5548      616400
 5549              	.LASF121:
 5550 07f1 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5550      73546963 
 5550      6B536572 
 5550      76696365 
 5550      43616C6C 
 5551              	.LASF45:
 5552 080b 72657475 		.ascii	"returnValue\000"
 5552      726E5661 
 5552      6C756500 
 5553              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
